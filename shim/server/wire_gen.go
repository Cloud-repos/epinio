// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package server

import (
	"github.com/spf13/pflag"
	"github.com/suse/carrier/shim/app"
	"github.com/suse/carrier/shim/app/configuration"
	"io"
)

// Injectors from wire.go:

func BuildApp(log io.Writer, flags *pflag.FlagSet) (*app.App, func(), error) {
	configurationStruct, err := configuration.NewConfig(flags)
	if err != nil {
		return nil, nil, err
	}
	logger, err := app.NewLogger(log, configurationStruct)
	if err != nil {
		return nil, nil, err
	}
	server, cleanup, err := ShimServer(logger, configurationStruct)
	if err != nil {
		return nil, nil, err
	}
	appApp := &app.App{
		Config: configurationStruct,
		Log:    logger,
		Server: server,
	}
	return appApp, func() {
		cleanup()
	}, nil
}
