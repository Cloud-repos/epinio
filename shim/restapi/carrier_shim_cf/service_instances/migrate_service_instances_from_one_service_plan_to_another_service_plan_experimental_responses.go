// Code generated by go-swagger; DO NOT EDIT.

package service_instances

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/suse/carrier/shim/models"
)

// MigrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalOKCode is the HTTP code returned for type MigrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalOK
const MigrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalOKCode int = 200

/*MigrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalOK successful response

swagger:response migrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalOK
*/
type MigrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalOK struct {

	/*
	  In: Body
	*/
	Payload *models.MigrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalResponse `json:"body,omitempty"`
}

// NewMigrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalOK creates MigrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalOK with default headers values
func NewMigrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalOK() *MigrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalOK {

	return &MigrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalOK{}
}

// WithPayload adds the payload to the migrate service instances from one service plan to another service plan experimental o k response
func (o *MigrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalOK) WithPayload(payload *models.MigrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalResponse) *MigrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the migrate service instances from one service plan to another service plan experimental o k response
func (o *MigrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalOK) SetPayload(payload *models.MigrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MigrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
