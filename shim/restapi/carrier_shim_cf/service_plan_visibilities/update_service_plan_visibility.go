// Code generated by go-swagger; DO NOT EDIT.

package service_plan_visibilities

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// UpdateServicePlanVisibilityHandlerFunc turns a function with the right signature into a update service plan visibility handler
type UpdateServicePlanVisibilityHandlerFunc func(UpdateServicePlanVisibilityParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdateServicePlanVisibilityHandlerFunc) Handle(params UpdateServicePlanVisibilityParams) middleware.Responder {
	return fn(params)
}

// UpdateServicePlanVisibilityHandler interface for that can handle valid update service plan visibility params
type UpdateServicePlanVisibilityHandler interface {
	Handle(UpdateServicePlanVisibilityParams) middleware.Responder
}

// NewUpdateServicePlanVisibility creates a new http.Handler for the update service plan visibility operation
func NewUpdateServicePlanVisibility(ctx *middleware.Context, handler UpdateServicePlanVisibilityHandler) *UpdateServicePlanVisibility {
	return &UpdateServicePlanVisibility{Context: ctx, Handler: handler}
}

/*UpdateServicePlanVisibility swagger:route PUT /service_plan_visibilities/{guid} servicePlanVisibilities updateServicePlanVisibility

Updating a Service Plan Visibility

curl --insecure -i %s/v2/service_plan_visibilities/{guid} -X PUT -H 'Authorization: %s' -d '%s'

*/
type UpdateServicePlanVisibility struct {
	Context *middleware.Context
	Handler UpdateServicePlanVisibilityHandler
}

func (o *UpdateServicePlanVisibility) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewUpdateServicePlanVisibilityParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
