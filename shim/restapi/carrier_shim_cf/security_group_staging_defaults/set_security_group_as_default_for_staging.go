// Code generated by go-swagger; DO NOT EDIT.

package security_group_staging_defaults

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// SetSecurityGroupAsDefaultForStagingHandlerFunc turns a function with the right signature into a set security group as default for staging handler
type SetSecurityGroupAsDefaultForStagingHandlerFunc func(SetSecurityGroupAsDefaultForStagingParams) middleware.Responder

// Handle executing the request and returning a response
func (fn SetSecurityGroupAsDefaultForStagingHandlerFunc) Handle(params SetSecurityGroupAsDefaultForStagingParams) middleware.Responder {
	return fn(params)
}

// SetSecurityGroupAsDefaultForStagingHandler interface for that can handle valid set security group as default for staging params
type SetSecurityGroupAsDefaultForStagingHandler interface {
	Handle(SetSecurityGroupAsDefaultForStagingParams) middleware.Responder
}

// NewSetSecurityGroupAsDefaultForStaging creates a new http.Handler for the set security group as default for staging operation
func NewSetSecurityGroupAsDefaultForStaging(ctx *middleware.Context, handler SetSecurityGroupAsDefaultForStagingHandler) *SetSecurityGroupAsDefaultForStaging {
	return &SetSecurityGroupAsDefaultForStaging{Context: ctx, Handler: handler}
}

/*SetSecurityGroupAsDefaultForStaging swagger:route PUT /config/staging_security_groups/{guid} securityGroupStagingDefaults setSecurityGroupAsDefaultForStaging

Set a Security Group as a default for staging

curl --insecure -i %s/v2/config/staging_security_groups/{guid} -X PUT -H 'Authorization: %s'

*/
type SetSecurityGroupAsDefaultForStaging struct {
	Context *middleware.Context
	Handler SetSecurityGroupAsDefaultForStagingHandler
}

func (o *SetSecurityGroupAsDefaultForStaging) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewSetSecurityGroupAsDefaultForStagingParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
