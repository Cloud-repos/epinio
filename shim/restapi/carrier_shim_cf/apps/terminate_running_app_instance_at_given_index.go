// Code generated by go-swagger; DO NOT EDIT.

package apps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// TerminateRunningAppInstanceAtGivenIndexHandlerFunc turns a function with the right signature into a terminate running app instance at given index handler
type TerminateRunningAppInstanceAtGivenIndexHandlerFunc func(TerminateRunningAppInstanceAtGivenIndexParams) middleware.Responder

// Handle executing the request and returning a response
func (fn TerminateRunningAppInstanceAtGivenIndexHandlerFunc) Handle(params TerminateRunningAppInstanceAtGivenIndexParams) middleware.Responder {
	return fn(params)
}

// TerminateRunningAppInstanceAtGivenIndexHandler interface for that can handle valid terminate running app instance at given index params
type TerminateRunningAppInstanceAtGivenIndexHandler interface {
	Handle(TerminateRunningAppInstanceAtGivenIndexParams) middleware.Responder
}

// NewTerminateRunningAppInstanceAtGivenIndex creates a new http.Handler for the terminate running app instance at given index operation
func NewTerminateRunningAppInstanceAtGivenIndex(ctx *middleware.Context, handler TerminateRunningAppInstanceAtGivenIndexHandler) *TerminateRunningAppInstanceAtGivenIndex {
	return &TerminateRunningAppInstanceAtGivenIndex{Context: ctx, Handler: handler}
}

/*TerminateRunningAppInstanceAtGivenIndex swagger:route DELETE /apps/{guid}/instances/{index} apps terminateRunningAppInstanceAtGivenIndex

Terminate the running App Instance at the given index

curl --insecure -i %s/v2/apps/{guid}/instances/{index} -X DELETE -H 'Authorization: %s'

*/
type TerminateRunningAppInstanceAtGivenIndex struct {
	Context *middleware.Context
	Handler TerminateRunningAppInstanceAtGivenIndexHandler
}

func (o *TerminateRunningAppInstanceAtGivenIndex) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewTerminateRunningAppInstanceAtGivenIndexParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
