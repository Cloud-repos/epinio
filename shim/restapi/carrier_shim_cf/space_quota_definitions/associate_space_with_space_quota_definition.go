// Code generated by go-swagger; DO NOT EDIT.

package space_quota_definitions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// AssociateSpaceWithSpaceQuotaDefinitionHandlerFunc turns a function with the right signature into a associate space with space quota definition handler
type AssociateSpaceWithSpaceQuotaDefinitionHandlerFunc func(AssociateSpaceWithSpaceQuotaDefinitionParams) middleware.Responder

// Handle executing the request and returning a response
func (fn AssociateSpaceWithSpaceQuotaDefinitionHandlerFunc) Handle(params AssociateSpaceWithSpaceQuotaDefinitionParams) middleware.Responder {
	return fn(params)
}

// AssociateSpaceWithSpaceQuotaDefinitionHandler interface for that can handle valid associate space with space quota definition params
type AssociateSpaceWithSpaceQuotaDefinitionHandler interface {
	Handle(AssociateSpaceWithSpaceQuotaDefinitionParams) middleware.Responder
}

// NewAssociateSpaceWithSpaceQuotaDefinition creates a new http.Handler for the associate space with space quota definition operation
func NewAssociateSpaceWithSpaceQuotaDefinition(ctx *middleware.Context, handler AssociateSpaceWithSpaceQuotaDefinitionHandler) *AssociateSpaceWithSpaceQuotaDefinition {
	return &AssociateSpaceWithSpaceQuotaDefinition{Context: ctx, Handler: handler}
}

/*AssociateSpaceWithSpaceQuotaDefinition swagger:route PUT /space_quota_definitions/{guid}/spaces/{space_guid} spaceQuotaDefinitions associateSpaceWithSpaceQuotaDefinition

Associate Space with the Space Quota Definition

curl --insecure -i %s/v2/space_quota_definitions/{guid}/spaces/{space_guid} -X PUT -H 'Authorization: %s'

*/
type AssociateSpaceWithSpaceQuotaDefinition struct {
	Context *middleware.Context
	Handler AssociateSpaceWithSpaceQuotaDefinitionHandler
}

func (o *AssociateSpaceWithSpaceQuotaDefinition) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewAssociateSpaceWithSpaceQuotaDefinitionParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
