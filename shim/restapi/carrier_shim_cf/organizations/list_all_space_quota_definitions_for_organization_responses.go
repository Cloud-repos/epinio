// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/suse/carrier/shim/models"
)

// ListAllSpaceQuotaDefinitionsForOrganizationOKCode is the HTTP code returned for type ListAllSpaceQuotaDefinitionsForOrganizationOK
const ListAllSpaceQuotaDefinitionsForOrganizationOKCode int = 200

/*ListAllSpaceQuotaDefinitionsForOrganizationOK successful response

swagger:response listAllSpaceQuotaDefinitionsForOrganizationOK
*/
type ListAllSpaceQuotaDefinitionsForOrganizationOK struct {

	/*
	  In: Body
	*/
	Payload *models.ListAllSpaceQuotaDefinitionsForOrganizationResponsePaged `json:"body,omitempty"`
}

// NewListAllSpaceQuotaDefinitionsForOrganizationOK creates ListAllSpaceQuotaDefinitionsForOrganizationOK with default headers values
func NewListAllSpaceQuotaDefinitionsForOrganizationOK() *ListAllSpaceQuotaDefinitionsForOrganizationOK {

	return &ListAllSpaceQuotaDefinitionsForOrganizationOK{}
}

// WithPayload adds the payload to the list all space quota definitions for organization o k response
func (o *ListAllSpaceQuotaDefinitionsForOrganizationOK) WithPayload(payload *models.ListAllSpaceQuotaDefinitionsForOrganizationResponsePaged) *ListAllSpaceQuotaDefinitionsForOrganizationOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list all space quota definitions for organization o k response
func (o *ListAllSpaceQuotaDefinitionsForOrganizationOK) SetPayload(payload *models.ListAllSpaceQuotaDefinitionsForOrganizationResponsePaged) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListAllSpaceQuotaDefinitionsForOrganizationOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
