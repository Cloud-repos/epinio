// Code generated by go-swagger; DO NOT EDIT.

package security_group_running_defaults

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/suse/carrier/shim/models"
)

// SetSecurityGroupAsDefaultForRunningAppsOKCode is the HTTP code returned for type SetSecurityGroupAsDefaultForRunningAppsOK
const SetSecurityGroupAsDefaultForRunningAppsOKCode int = 200

/*SetSecurityGroupAsDefaultForRunningAppsOK successful response

swagger:response setSecurityGroupAsDefaultForRunningAppsOK
*/
type SetSecurityGroupAsDefaultForRunningAppsOK struct {

	/*
	  In: Body
	*/
	Payload *models.SetSecurityGroupAsDefaultForRunningAppsResponse `json:"body,omitempty"`
}

// NewSetSecurityGroupAsDefaultForRunningAppsOK creates SetSecurityGroupAsDefaultForRunningAppsOK with default headers values
func NewSetSecurityGroupAsDefaultForRunningAppsOK() *SetSecurityGroupAsDefaultForRunningAppsOK {

	return &SetSecurityGroupAsDefaultForRunningAppsOK{}
}

// WithPayload adds the payload to the set security group as default for running apps o k response
func (o *SetSecurityGroupAsDefaultForRunningAppsOK) WithPayload(payload *models.SetSecurityGroupAsDefaultForRunningAppsResponse) *SetSecurityGroupAsDefaultForRunningAppsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the set security group as default for running apps o k response
func (o *SetSecurityGroupAsDefaultForRunningAppsOK) SetPayload(payload *models.SetSecurityGroupAsDefaultForRunningAppsResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SetSecurityGroupAsDefaultForRunningAppsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
