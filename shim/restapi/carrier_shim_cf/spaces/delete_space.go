// Code generated by go-swagger; DO NOT EDIT.

package spaces

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeleteSpaceHandlerFunc turns a function with the right signature into a delete space handler
type DeleteSpaceHandlerFunc func(DeleteSpaceParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteSpaceHandlerFunc) Handle(params DeleteSpaceParams) middleware.Responder {
	return fn(params)
}

// DeleteSpaceHandler interface for that can handle valid delete space params
type DeleteSpaceHandler interface {
	Handle(DeleteSpaceParams) middleware.Responder
}

// NewDeleteSpace creates a new http.Handler for the delete space operation
func NewDeleteSpace(ctx *middleware.Context, handler DeleteSpaceHandler) *DeleteSpace {
	return &DeleteSpace{Context: ctx, Handler: handler}
}

/*DeleteSpace swagger:route DELETE /spaces/{guid} spaces deleteSpace

Delete a Particular Space

curl --insecure -i %s/v2/spaces/{guid} -X DELETE -H 'Authorization: %s'

*/
type DeleteSpace struct {
	Context *middleware.Context
	Handler DeleteSpaceHandler
}

func (o *DeleteSpace) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteSpaceParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
