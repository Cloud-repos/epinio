// Code generated by go-swagger; DO NOT EDIT.

package spaces

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// AssociateAuditorWithSpaceHandlerFunc turns a function with the right signature into a associate auditor with space handler
type AssociateAuditorWithSpaceHandlerFunc func(AssociateAuditorWithSpaceParams) middleware.Responder

// Handle executing the request and returning a response
func (fn AssociateAuditorWithSpaceHandlerFunc) Handle(params AssociateAuditorWithSpaceParams) middleware.Responder {
	return fn(params)
}

// AssociateAuditorWithSpaceHandler interface for that can handle valid associate auditor with space params
type AssociateAuditorWithSpaceHandler interface {
	Handle(AssociateAuditorWithSpaceParams) middleware.Responder
}

// NewAssociateAuditorWithSpace creates a new http.Handler for the associate auditor with space operation
func NewAssociateAuditorWithSpace(ctx *middleware.Context, handler AssociateAuditorWithSpaceHandler) *AssociateAuditorWithSpace {
	return &AssociateAuditorWithSpace{Context: ctx, Handler: handler}
}

/*AssociateAuditorWithSpace swagger:route PUT /spaces/{guid}/auditors/{auditor_guid} spaces associateAuditorWithSpace

Associate Auditor with the Space

curl --insecure -i %s/v2/spaces/{guid}/auditors/{auditor_guid} -X PUT -H 'Authorization: %s'

*/
type AssociateAuditorWithSpace struct {
	Context *middleware.Context
	Handler AssociateAuditorWithSpaceHandler
}

func (o *AssociateAuditorWithSpace) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewAssociateAuditorWithSpaceParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
