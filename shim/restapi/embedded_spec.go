// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This is the specification for a Cloud Foundry server.\n",
    "title": "Cloud Foundry",
    "contact": {
      "name": "Cloud Foundry Foundation"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "2.217.0"
  },
  "basePath": "/v2",
  "paths": {
    "/app_usage_events": {
      "get": {
        "description": "curl --insecure -i %s/v2/app_usage_events -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "appUsageEvents"
        ],
        "summary": "List all App Usage Events",
        "operationId": "listAllAppUsageEvents",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllAppUsageEventsResponsePaged"
            }
          }
        }
      }
    },
    "/app_usage_events/destructively_purge_all_and_reseed_started_apps": {
      "post": {
        "description": "curl --insecure -i %s/v2/app_usage_events/destructively_purge_all_and_reseed_started_apps -X POST -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "appUsageEvents"
        ],
        "summary": "Purge and reseed App Usage Events",
        "operationId": "purgeAndReseedAppUsageEvents",
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/app_usage_events/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/app_usage_events/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "appUsageEvents"
        ],
        "summary": "Retrieve a Particular App Usage Event",
        "operationId": "retrieveAppUsageEvent",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/app_usage_events/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveAppUsageEventResponseResource"
            }
          }
        }
      }
    },
    "/apps": {
      "get": {
        "description": "curl --insecure -i %s/v2/apps -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "apps"
        ],
        "summary": "List all Apps",
        "operationId": "listAllApps",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllAppsResponsePaged"
            }
          }
        }
      },
      "post": {
        "description": "curl --insecure -i %s/v2/apps -X POST -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "apps"
        ],
        "summary": "Creating an App",
        "operationId": "createApp",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createAppRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/createAppResponseResource"
            }
          }
        }
      }
    },
    "/apps/{app_guid}/instances/{instance_index}/files/{file_path}": {
      "get": {
        "description": "curl --insecure -i %s/v2/apps/{app_guid}/instances/{instance_index}/files/{file_path} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "files"
        ],
        "summary": "Retrieve File",
        "operationId": "retrieveFile",
        "parameters": [
          {
            "type": "string",
            "description": "The app_guid parameter is used as a part of the request URL: '/v2/apps/:app_guid/instances/:instance_index/files/:file_path'",
            "name": "app_guid",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "The instance_index parameter is used as a part of the request URL: '/v2/apps/:app_guid/instances/:instance_index/files/:file_path'",
            "name": "instance_index",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The file_path parameter is used as a part of the request URL: '/v2/apps/:app_guid/instances/:instance_index/files/:file_path'",
            "name": "file_path",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "302": {
            "description": "successful response"
          }
        }
      }
    },
    "/apps/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/apps/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "apps"
        ],
        "summary": "Retrieve a Particular App",
        "operationId": "retrieveApp",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/apps/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveAppResponseResource"
            }
          }
        }
      },
      "put": {
        "description": "curl --insecure -i %s/v2/apps/{guid} -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "apps"
        ],
        "summary": "Updating an App",
        "operationId": "updateApp",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/apps/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateAppRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/updateAppResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/apps/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "apps"
        ],
        "summary": "Delete a Particular App",
        "operationId": "deleteApp",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/apps/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/apps/{guid}/bits": {
      "put": {
        "description": "curl --insecure -i %s/v2/apps/{guid}/bits -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "apps"
        ],
        "summary": "Uploads the bits for an App",
        "operationId": "uploadsBitsForApp",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/apps/:guid/bits'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "file",
            "description": "A binary zip file containing the application bits.",
            "name": "application",
            "in": "formData",
            "required": true
          },
          {
            "type": "boolean",
            "description": "If true, a new asynchronous job is submitted to persist the bits and the job id is included in the response. The client will need to poll the job's status until persistence is completed successfully. If false, the request will block until the bits are persisted synchronously. Defaults to false.",
            "name": "async",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "Fingerprints of the application bits that have previously been pushed to Cloud Foundry. Each fingerprint must include the file path, sha1 hash, and file size in bytes. Each fingerprint may include the file mode, which must be an octal string with at least read and write permissions for owners. If a mode is not provided, the default mode of 0744 will be used. Fingerprinted bits MUST exist in the Cloud Foundry resource cache or the request (or job, if async) will fail.",
            "name": "resources",
            "in": "formData"
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/uploadsBitsForAppResponseResource"
            }
          }
        }
      }
    },
    "/apps/{guid}/copy_bits": {
      "post": {
        "description": "curl --insecure -i %s/v2/apps/{guid}/copy_bits -X POST -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "apps"
        ],
        "summary": "Copy the app bits for an App",
        "operationId": "copyAppBitsForApp",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/apps/:guid/copy_bits'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/copyAppBitsForAppRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/copyAppBitsForAppResponseResource"
            }
          }
        }
      }
    },
    "/apps/{guid}/download": {
      "get": {
        "description": "curl --insecure -i %s/v2/apps/{guid}/download -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "apps"
        ],
        "summary": "Downloads the bits for an App",
        "operationId": "downloadsBitsForApp",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/apps/:guid/download'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "302": {
            "description": "successful response"
          }
        }
      }
    },
    "/apps/{guid}/env": {
      "get": {
        "description": "curl --insecure -i %s/v2/apps/{guid}/env -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "apps"
        ],
        "summary": "Get the env for an App",
        "operationId": "getEnvForApp",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/apps/:guid/env'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/getEnvForAppResponseResource"
            }
          }
        }
      }
    },
    "/apps/{guid}/instances": {
      "get": {
        "description": "curl --insecure -i %s/v2/apps/{guid}/instances -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "apps"
        ],
        "summary": "Get the instance information for a STARTED App",
        "operationId": "getInstanceInformationForStartedApp",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/apps/:guid/instances'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/getInstanceInformationForStartedAppResponseResource"
            }
          }
        }
      }
    },
    "/apps/{guid}/instances/{index}": {
      "delete": {
        "description": "curl --insecure -i %s/v2/apps/{guid}/instances/{index} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "apps"
        ],
        "summary": "Terminate the running App Instance at the given index",
        "operationId": "terminateRunningAppInstanceAtGivenIndex",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/apps/:guid/instances/:index'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "The index parameter is used as a part of the request URL: '/v2/apps/:guid/instances/:index'",
            "name": "index",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/apps/{guid}/restage": {
      "post": {
        "description": "curl --insecure -i %s/v2/apps/{guid}/restage -X POST -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "apps"
        ],
        "summary": "Restage an App",
        "operationId": "restageApp",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/apps/:guid/restage'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/restageAppResponseResource"
            }
          }
        }
      }
    },
    "/apps/{guid}/routes": {
      "get": {
        "description": "curl --insecure -i %s/v2/apps/{guid}/routes -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "apps"
        ],
        "summary": "List all Routes for the App",
        "operationId": "listAllRoutesForApp",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/apps/:guid/routes'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllRoutesForAppResponsePaged"
            }
          }
        }
      }
    },
    "/apps/{guid}/routes/{route_guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/apps/{guid}/routes/{route_guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "apps"
        ],
        "summary": "Associate Route with the App",
        "operationId": "associateRouteWithApp",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/apps/:guid/routes/:route_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The route_guid parameter is used as a part of the request URL: '/v2/apps/:guid/routes/:route_guid'",
            "name": "route_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/associateRouteWithAppResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/apps/{guid}/routes/{route_guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "apps"
        ],
        "summary": "Remove Route from the App",
        "operationId": "removeRouteFromApp",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/apps/:guid/routes/:route_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The route_guid parameter is used as a part of the request URL: '/v2/apps/:guid/routes/:route_guid'",
            "name": "route_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/removeRouteFromAppResponseResource"
            }
          }
        }
      }
    },
    "/apps/{guid}/service_bindings": {
      "get": {
        "description": "curl --insecure -i %s/v2/apps/{guid}/service_bindings -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "apps"
        ],
        "summary": "List all Service Bindings for the App",
        "operationId": "listAllServiceBindingsForApp",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/apps/:guid/service_bindings'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllServiceBindingsForAppResponsePaged"
            }
          }
        }
      }
    },
    "/apps/{guid}/service_bindings/{service_binding_guid}": {
      "delete": {
        "description": "curl --insecure -i %s/v2/apps/{guid}/service_bindings/{service_binding_guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "apps"
        ],
        "summary": "Remove Service Binding from the App",
        "operationId": "removeServiceBindingFromApp",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/apps/:guid/service_bindings/:service_binding_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The service_binding_guid parameter is used as a part of the request URL: '/v2/apps/:guid/service_bindings/:service_binding_guid'",
            "name": "service_binding_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/removeServiceBindingFromAppResponseResource"
            }
          }
        }
      }
    },
    "/apps/{guid}/stats": {
      "get": {
        "description": "curl --insecure -i %s/v2/apps/{guid}/stats -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "apps"
        ],
        "summary": "Get detailed stats for a STARTED App",
        "operationId": "getDetailedStatsForStartedApp",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/apps/:guid/stats'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/getDetailedStatsForStartedAppResponseResource"
            }
          }
        }
      }
    },
    "/apps/{guid}/summary": {
      "get": {
        "description": "curl --insecure -i %s/v2/apps/{guid}/summary -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "apps"
        ],
        "summary": "Get App summary",
        "operationId": "getAppSummary",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/apps/:guid/summary'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/getAppSummaryResponse"
            }
          }
        }
      }
    },
    "/auth/login": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Supports both JSON and HTML output. The HTML output is intended for browser user agents to display a login page.",
        "parameters": [
          {
            "type": "string",
            "description": "Use the configured prompts of the OpenID Connect Provider with the given origin key in the response. Fallback to zone values if no prompts are configured or origin is invalid.",
            "name": "origin",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveAuthLogin"
            }
          }
        }
      }
    },
    "/auth/oauth/token": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ],
        "summary": "The /oauth/token endpoint requires client authentication to be accessed. Client Authentication can be passed as as part of the request authorization header, using basic authentication, or as part of the request parameters, using the client_id and client_secret parameter names.",
        "parameters": [
          {
            "type": "string",
            "description": "Client ID and secret may be passed as a basic authorization header, per RFC 6749 or as request parameters.",
            "name": "Authorization",
            "in": "header"
          },
          {
            "type": "string",
            "description": "A unique string representing the registration information provided by the client, the recipient of the token. Optional if it is passed as part of the Basic Authorization header.",
            "name": "client_id",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "Redirection URI to which the authorization server will send the user-agent back once access is granted (or denied)",
            "name": "redirect_uri",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "The authorization code, obtained from /oauth/authorize, issued for the user",
            "name": "code",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "The type of authentication being used to obtain the token, in this case authorization_code",
            "name": "grant_type",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "The secret passphrase configured for the OAuth client. Optional if it is passed as part of the Basic Authorization header.",
            "name": "client_secret",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "Can be set to opaque to retrieve an opaque and revocable token or to jwt to retrieve a JWT token. If not set the zone setting config.tokenPolicy.jwtRevocable is used.",
            "name": "token_format",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/createsOAuthTokenResponse"
            }
          }
        }
      }
    },
    "/buildpacks": {
      "get": {
        "description": "curl --insecure -i %s/v2/buildpacks -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "buildpacks"
        ],
        "summary": "List all Buildpacks",
        "operationId": "listAllBuildpacks",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllBuildpacksResponsePaged"
            }
          }
        }
      },
      "post": {
        "description": "curl --insecure -i %s/v2/buildpacks -X POST -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "buildpacks"
        ],
        "summary": "Creates an admin Buildpack",
        "operationId": "createsAdminBuildpack",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createsAdminBuildpackRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/createsAdminBuildpackResponseResource"
            }
          }
        }
      }
    },
    "/buildpacks/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/buildpacks/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "buildpacks"
        ],
        "summary": "Retrieve a Particular Buildpack",
        "operationId": "retrieveBuildpack",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/buildpacks/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveBuildpackResponseResource"
            }
          }
        }
      },
      "put": {
        "description": "curl --insecure -i %s/v2/buildpacks/{guid} -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "buildpacks"
        ],
        "summary": "Lock or unlock a Buildpack",
        "operationId": "lockOrUnlockBuildpack",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/buildpacks/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/lockOrUnlockBuildpackRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/lockOrUnlockBuildpackResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/buildpacks/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "buildpacks"
        ],
        "summary": "Delete a Particular Buildpack",
        "operationId": "deleteBuildpack",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/buildpacks/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/config/environment_variable_groups/running": {
      "get": {
        "description": "curl --insecure -i %s/v2/config/environment_variable_groups/running -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "environmentVariableGroups"
        ],
        "summary": "Getting the contents of the running environment variable group",
        "operationId": "gettingContentsOfRunningEnvironmentVariableGroup",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/gettingContentsOfRunningEnvironmentVariableGroupResponseResource"
            }
          }
        }
      },
      "put": {
        "description": "curl --insecure -i %s/v2/config/environment_variable_groups/running -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "environmentVariableGroups"
        ],
        "summary": "Updating the contents of the running environment variable group",
        "operationId": "updateContentsOfRunningEnvironmentVariableGroup",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateContentsOfRunningEnvironmentVariableGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/updateContentsOfRunningEnvironmentVariableGroupResponseResource"
            }
          }
        }
      }
    },
    "/config/environment_variable_groups/staging": {
      "get": {
        "description": "curl --insecure -i %s/v2/config/environment_variable_groups/staging -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "environmentVariableGroups"
        ],
        "summary": "Getting the contents of the staging environment variable group",
        "operationId": "gettingContentsOfStagingEnvironmentVariableGroup",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/gettingContentsOfStagingEnvironmentVariableGroupResponseResource"
            }
          }
        }
      },
      "put": {
        "description": "curl --insecure -i %s/v2/config/environment_variable_groups/staging -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "environmentVariableGroups"
        ],
        "summary": "Updating the contents of the staging environment variable group",
        "operationId": "updateContentsOfStagingEnvironmentVariableGroup",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateContentsOfStagingEnvironmentVariableGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/updateContentsOfStagingEnvironmentVariableGroupResponseResource"
            }
          }
        }
      }
    },
    "/config/feature_flags": {
      "get": {
        "description": "curl --insecure -i %s/v2/config/feature_flags -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "featureFlags"
        ],
        "summary": "Get all feature flags",
        "operationId": "getAllFeatureFlags",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/getAllFeatureFlagsResponseResource"
            }
          }
        }
      }
    },
    "/config/feature_flags/app_bits_upload": {
      "get": {
        "description": "curl --insecure -i %s/v2/config/feature_flags/app_bits_upload -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "featureFlags"
        ],
        "summary": "Get the App Bits Upload feature flag",
        "operationId": "getAppBitsUploadFeatureFlag",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/getAppBitsUploadFeatureFlagResponseResource"
            }
          }
        }
      }
    },
    "/config/feature_flags/app_scaling": {
      "get": {
        "description": "curl --insecure -i %s/v2/config/feature_flags/app_scaling -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "featureFlags"
        ],
        "summary": "Get the App Scaling feature flag",
        "operationId": "getAppScalingFeatureFlag",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/getAppScalingFeatureFlagResponseResource"
            }
          }
        }
      }
    },
    "/config/feature_flags/private_domain_creation": {
      "get": {
        "description": "curl --insecure -i %s/v2/config/feature_flags/private_domain_creation -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "featureFlags"
        ],
        "summary": "Get the Private Domain Creation feature flag",
        "operationId": "getPrivateDomainCreationFeatureFlag",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/getPrivateDomainCreationFeatureFlagResponseResource"
            }
          }
        }
      }
    },
    "/config/feature_flags/route_creation": {
      "get": {
        "description": "curl --insecure -i %s/v2/config/feature_flags/route_creation -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "featureFlags"
        ],
        "summary": "Get the Route Creation feature flag",
        "operationId": "getRouteCreationFeatureFlag",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/getRouteCreationFeatureFlagResponseResource"
            }
          }
        }
      }
    },
    "/config/feature_flags/service_instance_creation": {
      "get": {
        "description": "curl --insecure -i %s/v2/config/feature_flags/service_instance_creation -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "featureFlags"
        ],
        "summary": "Get the Service Instance Creation feature flag",
        "operationId": "getServiceInstanceCreationFeatureFlag",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/getServiceInstanceCreationFeatureFlagResponseResource"
            }
          }
        }
      }
    },
    "/config/feature_flags/user_org_creation": {
      "get": {
        "description": "curl --insecure -i %s/v2/config/feature_flags/user_org_creation -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "featureFlags"
        ],
        "summary": "Get the User Org Creation feature flag",
        "operationId": "getUserOrgCreationFeatureFlag",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/getUserOrgCreationFeatureFlagResponseResource"
            }
          }
        }
      }
    },
    "/config/feature_flags/{name}": {
      "put": {
        "description": "curl --insecure -i %s/v2/config/feature_flags/{name} -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "featureFlags"
        ],
        "summary": "Set a feature flag",
        "operationId": "setFeatureFlag",
        "parameters": [
          {
            "type": "string",
            "description": "The name parameter is used as a part of the request URL: '/v2/config/feature_flags/:name'",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/setFeatureFlagRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/setFeatureFlagResponseResource"
            }
          }
        }
      }
    },
    "/config/running_security_groups": {
      "get": {
        "description": "curl --insecure -i %s/v2/config/running_security_groups -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "securityGroupRunningDefaults"
        ],
        "summary": "Return the Security Groups used for running Apps",
        "operationId": "returnSecurityGroupsUsedForRunningApps",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/returnSecurityGroupsUsedForRunningAppsResponsePaged"
            }
          }
        }
      }
    },
    "/config/running_security_groups/{guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/config/running_security_groups/{guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "securityGroupRunningDefaults"
        ],
        "summary": "Set a Security Group as a default for running Apps",
        "operationId": "setSecurityGroupAsDefaultForRunningApps",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/config/running_security_groups/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/setSecurityGroupAsDefaultForRunningAppsResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/config/running_security_groups/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "securityGroupRunningDefaults"
        ],
        "summary": "Removing a Security Group as a default for running Apps",
        "operationId": "removingSecurityGroupAsDefaultForRunningApps",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/config/running_security_groups/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/config/staging_security_groups": {
      "get": {
        "description": "curl --insecure -i %s/v2/config/staging_security_groups -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "securityGroupStagingDefaults"
        ],
        "summary": "Return the Security Groups used for staging",
        "operationId": "returnSecurityGroupsUsedForStaging",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/returnSecurityGroupsUsedForStagingResponsePaged"
            }
          }
        }
      }
    },
    "/config/staging_security_groups/{guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/config/staging_security_groups/{guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "securityGroupStagingDefaults"
        ],
        "summary": "Set a Security Group as a default for staging",
        "operationId": "setSecurityGroupAsDefaultForStaging",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/config/staging_security_groups/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/setSecurityGroupAsDefaultForStagingResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/config/staging_security_groups/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "securityGroupStagingDefaults"
        ],
        "summary": "Removing a Security Group as a default for staging",
        "operationId": "removingSecurityGroupAsDefaultForStaging",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/config/staging_security_groups/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/domains": {
      "get": {
        "description": "curl --insecure -i %s/v2/domains -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "domainsDeprecated"
        ],
        "summary": "List all Domains (deprecated)",
        "operationId": "listAllDomainsDeprecated",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllDomainsDeprecatedResponsePaged"
            }
          }
        }
      },
      "post": {
        "description": "curl --insecure -i %s/v2/domains -X POST -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "domainsDeprecated"
        ],
        "summary": "creates a domain owned by the given organization (deprecated)",
        "operationId": "createsDomainOwnedByGivenOrganizationDeprecated",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createsDomainOwnedByGivenOrganizationDeprecatedRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/createsDomainOwnedByGivenOrganizationDeprecatedResponseResource"
            }
          }
        }
      }
    },
    "/domains/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/domains/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "domainsDeprecated"
        ],
        "summary": "Retrieve a Particular Domain (deprecated)",
        "operationId": "retrieveDomainDeprecated",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/domains/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveDomainDeprecatedResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/domains/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "domainsDeprecated"
        ],
        "summary": "Delete a Particular Domain (deprecated)",
        "operationId": "deleteDomainDeprecated",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/domains/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/domains/{guid}/spaces": {
      "get": {
        "description": "curl --insecure -i %s/v2/domains/{guid}/spaces -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "domainsDeprecated"
        ],
        "summary": "List all Spaces for the Domain (deprecated)",
        "operationId": "listAllSpacesForDomainDeprecated",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/domains/:guid/spaces'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllSpacesForDomainDeprecatedResponsePaged"
            }
          }
        }
      }
    },
    "/events": {
      "get": {
        "description": "curl --insecure -i %s/v2/events -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "events"
        ],
        "summary": "List Service Broker Delete Events (experimental)",
        "operationId": "listServiceBrokerDeleteEventsExperimental",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listServiceBrokerDeleteEventsExperimentalResponsePaged"
            }
          }
        }
      }
    },
    "/events/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/events/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "events"
        ],
        "summary": "Retrieve a Particular Event",
        "operationId": "retrieveEvent",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/events/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveEventResponseResource"
            }
          }
        }
      }
    },
    "/info": {
      "get": {
        "description": "curl --insecure -i %s/v2/info -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "info"
        ],
        "summary": "Get Info",
        "operationId": "getInfo",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/getInfoResponse"
            }
          }
        }
      }
    },
    "/jobs/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/jobs/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "jobs"
        ],
        "summary": "Retrieve Job that was successful",
        "operationId": "retrieveJobThatWasSuccessful",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/jobs/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveJobThatWasSuccessfulResponseResource"
            }
          }
        }
      }
    },
    "/organizations": {
      "get": {
        "description": "curl --insecure -i %s/v2/organizations -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "List all Organizations",
        "operationId": "listAllOrganizations",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllOrganizationsResponsePaged"
            }
          }
        }
      },
      "post": {
        "description": "curl --insecure -i %s/v2/organizations -X POST -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "Creating an Organization",
        "operationId": "createOrganization",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createOrganizationRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/createOrganizationResponseResource"
            }
          }
        }
      }
    },
    "/organizations/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/organizations/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "Retrieve a Particular Organization",
        "operationId": "retrieveOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveOrganizationResponseResource"
            }
          }
        }
      },
      "put": {
        "description": "curl --insecure -i %s/v2/organizations/{guid} -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "Update an Organization",
        "operationId": "updateOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateOrganizationRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/updateOrganizationResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/organizations/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "Delete a Particular Organization",
        "operationId": "deleteOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/organizations/{guid}/auditors": {
      "get": {
        "description": "curl --insecure -i %s/v2/organizations/{guid}/auditors -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "List all Auditors for the Organization",
        "operationId": "listAllAuditorsForOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid/auditors'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllAuditorsForOrganizationResponsePaged"
            }
          }
        }
      }
    },
    "/organizations/{guid}/auditors/{auditor_guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/organizations/{guid}/auditors/{auditor_guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "Associate Auditor with the Organization",
        "operationId": "associateAuditorWithOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid/auditors/:auditor_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The auditor_guid parameter is used as a part of the request URL: '/v2/organizations/:guid/auditors/:auditor_guid'",
            "name": "auditor_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/associateAuditorWithOrganizationResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/organizations/{guid}/auditors/{auditor_guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "Remove Auditor from the Organization",
        "operationId": "removeAuditorFromOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid/auditors/:auditor_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The auditor_guid parameter is used as a part of the request URL: '/v2/organizations/:guid/auditors/:auditor_guid'",
            "name": "auditor_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/removeAuditorFromOrganizationResponseResource"
            }
          }
        }
      }
    },
    "/organizations/{guid}/billing_managers": {
      "get": {
        "description": "curl --insecure -i %s/v2/organizations/{guid}/billing_managers -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "List all Billing Managers for the Organization",
        "operationId": "listAllBillingManagersForOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid/billing_managers'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllBillingManagersForOrganizationResponsePaged"
            }
          }
        }
      }
    },
    "/organizations/{guid}/billing_managers/{billing_manager_guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/organizations/{guid}/billing_managers/{billing_manager_guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "Associate Billing Manager with the Organization",
        "operationId": "associateBillingManagerWithOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid/billing_managers/:billing_manager_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The billing_manager_guid parameter is used as a part of the request URL: '/v2/organizations/:guid/billing_managers/:billing_manager_guid'",
            "name": "billing_manager_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/associateBillingManagerWithOrganizationResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/organizations/{guid}/billing_managers/{billing_manager_guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "Remove Billing Manager from the Organization",
        "operationId": "removeBillingManagerFromOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid/billing_managers/:billing_manager_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The billing_manager_guid parameter is used as a part of the request URL: '/v2/organizations/:guid/billing_managers/:billing_manager_guid'",
            "name": "billing_manager_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/removeBillingManagerFromOrganizationResponseResource"
            }
          }
        }
      }
    },
    "/organizations/{guid}/domains": {
      "get": {
        "description": "curl --insecure -i %s/v2/organizations/{guid}/domains -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "List all Domains for the Organization (deprecated)",
        "operationId": "listAllDomainsForOrganizationDeprecated",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid/domains'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllDomainsForOrganizationDeprecatedResponsePaged"
            }
          }
        }
      }
    },
    "/organizations/{guid}/managers": {
      "get": {
        "description": "curl --insecure -i %s/v2/organizations/{guid}/managers -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "List all Managers for the Organization",
        "operationId": "listAllManagersForOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid/managers'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllManagersForOrganizationResponsePaged"
            }
          }
        }
      }
    },
    "/organizations/{guid}/managers/{manager_guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/organizations/{guid}/managers/{manager_guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "Associate Manager with the Organization",
        "operationId": "associateManagerWithOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid/managers/:manager_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The manager_guid parameter is used as a part of the request URL: '/v2/organizations/:guid/managers/:manager_guid'",
            "name": "manager_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/associateManagerWithOrganizationResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/organizations/{guid}/managers/{manager_guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "Remove Manager from the Organization",
        "operationId": "removeManagerFromOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid/managers/:manager_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The manager_guid parameter is used as a part of the request URL: '/v2/organizations/:guid/managers/:manager_guid'",
            "name": "manager_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/removeManagerFromOrganizationResponseResource"
            }
          }
        }
      }
    },
    "/organizations/{guid}/memory_usage": {
      "get": {
        "description": "curl --insecure -i %s/v2/organizations/{guid}/memory_usage -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "Retrieving organization memory usage",
        "operationId": "retrievingOrganizationMemoryUsage",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid/memory_usage'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrievingOrganizationMemoryUsageResponseResource"
            }
          }
        }
      }
    },
    "/organizations/{guid}/private_domains": {
      "get": {
        "description": "curl --insecure -i %s/v2/organizations/{guid}/private_domains -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "List all Private Domains for the Organization",
        "operationId": "listAllPrivateDomainsForOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid/private_domains'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllPrivateDomainsForOrganizationResponsePaged"
            }
          }
        }
      }
    },
    "/organizations/{guid}/services": {
      "get": {
        "description": "curl --insecure -i %s/v2/organizations/{guid}/services -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "List all Services for the Organization",
        "operationId": "listAllServicesForOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid/services'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllServicesForOrganizationResponsePaged"
            }
          }
        }
      }
    },
    "/organizations/{guid}/space_quota_definitions": {
      "get": {
        "description": "curl --insecure -i %s/v2/organizations/{guid}/space_quota_definitions -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "List all Space Quota Definitions for the Organization",
        "operationId": "listAllSpaceQuotaDefinitionsForOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid/space_quota_definitions'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllSpaceQuotaDefinitionsForOrganizationResponsePaged"
            }
          }
        }
      }
    },
    "/organizations/{guid}/spaces": {
      "get": {
        "description": "curl --insecure -i %s/v2/organizations/{guid}/spaces -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "List all Spaces for the Organization",
        "operationId": "listAllSpacesForOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid/spaces'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllSpacesForOrganizationResponsePaged"
            }
          }
        }
      }
    },
    "/organizations/{guid}/summary": {
      "get": {
        "description": "curl --insecure -i %s/v2/organizations/{guid}/summary -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "Get Organization summary",
        "operationId": "getOrganizationSummary",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid/summary'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/getOrganizationSummaryResponseResource"
            }
          }
        }
      }
    },
    "/organizations/{guid}/users": {
      "get": {
        "description": "curl --insecure -i %s/v2/organizations/{guid}/users -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "List all Users for the Organization",
        "operationId": "listAllUsersForOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid/users'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllUsersForOrganizationResponsePaged"
            }
          }
        }
      }
    },
    "/organizations/{guid}/users/{user_guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/organizations/{guid}/users/{user_guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "Associate User with the Organization",
        "operationId": "associateUserWithOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid/users/:user_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The user_guid parameter is used as a part of the request URL: '/v2/organizations/:guid/users/:user_guid'",
            "name": "user_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/associateUserWithOrganizationResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/organizations/{guid}/users/{user_guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "Remove User from the Organization",
        "operationId": "removeUserFromOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid/users/:user_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The user_guid parameter is used as a part of the request URL: '/v2/organizations/:guid/users/:user_guid'",
            "name": "user_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/removeUserFromOrganizationResponseResource"
            }
          }
        }
      }
    },
    "/private_domains": {
      "get": {
        "description": "curl --insecure -i %s/v2/private_domains -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "privateDomains"
        ],
        "summary": "Filtering Private Domains by name",
        "operationId": "filterPrivateDomainsByName",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/filterPrivateDomainsByNameResponsePaged"
            }
          }
        }
      },
      "post": {
        "description": "curl --insecure -i %s/v2/private_domains -X POST -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "privateDomains"
        ],
        "summary": "Create a Private Domain owned by the given Organization",
        "operationId": "createPrivateDomainOwnedByGivenOrganization",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createPrivateDomainOwnedByGivenOrganizationRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/createPrivateDomainOwnedByGivenOrganizationResponseResource"
            }
          }
        }
      }
    },
    "/private_domains/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/private_domains/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "privateDomains"
        ],
        "summary": "Retrieve a Particular Private Domain",
        "operationId": "retrievePrivateDomain",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/private_domains/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrievePrivateDomainResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/private_domains/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "privateDomains"
        ],
        "summary": "Delete a Particular Private Domain",
        "operationId": "deletePrivateDomain",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/private_domains/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/quota_definitions": {
      "get": {
        "description": "curl --insecure -i %s/v2/quota_definitions -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizationQuotaDefinitions"
        ],
        "summary": "List all Organization Quota Definitions",
        "operationId": "listAllOrganizationQuotaDefinitions",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllOrganizationQuotaDefinitionsResponsePaged"
            }
          }
        }
      },
      "post": {
        "description": "curl --insecure -i %s/v2/quota_definitions -X POST -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizationQuotaDefinitions"
        ],
        "summary": "Creating a Organization Quota Definition",
        "operationId": "createOrganizationQuotaDefinition",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createOrganizationQuotaDefinitionRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/createOrganizationQuotaDefinitionResponseResource"
            }
          }
        }
      }
    },
    "/quota_definitions/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/quota_definitions/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizationQuotaDefinitions"
        ],
        "summary": "Retrieve a Particular Organization Quota Definition",
        "operationId": "retrieveOrganizationQuotaDefinition",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/quota_definitions/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveOrganizationQuotaDefinitionResponseResource"
            }
          }
        }
      },
      "put": {
        "description": "curl --insecure -i %s/v2/quota_definitions/{guid} -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizationQuotaDefinitions"
        ],
        "summary": "Updating a Organization Quota Definition",
        "operationId": "updateOrganizationQuotaDefinition",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/quota_definitions/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateOrganizationQuotaDefinitionRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/updateOrganizationQuotaDefinitionResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/quota_definitions/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizationQuotaDefinitions"
        ],
        "summary": "Delete a Particular Organization Quota Definition",
        "operationId": "deleteOrganizationQuotaDefinition",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/quota_definitions/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/resource_match": {
      "put": {
        "description": "curl --insecure -i %s/v2/resource_match -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "resourceMatch"
        ],
        "summary": "List all matching resources",
        "operationId": "listAllMatchingResources",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/listAllMatchingResourcesRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/listAllMatchingResourcesResponse"
              }
            }
          }
        }
      }
    },
    "/routes": {
      "get": {
        "description": "curl --insecure -i %s/v2/routes -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "routes"
        ],
        "summary": "List all Routes",
        "operationId": "listAllRoutes",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllRoutesResponsePaged"
            }
          }
        }
      },
      "post": {
        "description": "curl --insecure -i %s/v2/routes -X POST -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "routes"
        ],
        "summary": "Creating a Route",
        "operationId": "createRoute",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createRouteRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/createRouteResponseResource"
            }
          }
        }
      }
    },
    "/routes/reserved/domain/{domain_guid}/host/{host}": {
      "get": {
        "description": "curl --insecure -i %s/v2/routes/reserved/domain/{domain_guid}/host/{host} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "routes"
        ],
        "summary": "Check a Route exists",
        "operationId": "checkRouteExists",
        "parameters": [
          {
            "type": "string",
            "description": "The domain_guid parameter is used as a part of the request URL: '/v2/routes/reserved/domain/:domain_guid/host/:host'",
            "name": "domain_guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The host parameter is used as a part of the request URL: '/v2/routes/reserved/domain/:domain_guid/host/:host'",
            "name": "host",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/routes/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/routes/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "routes"
        ],
        "summary": "Retrieve a Particular Route",
        "operationId": "retrieveRoute",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/routes/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveRouteResponseResource"
            }
          }
        }
      },
      "put": {
        "description": "curl --insecure -i %s/v2/routes/{guid} -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "routes"
        ],
        "summary": "Update a Route",
        "operationId": "updateRoute",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/routes/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateRouteRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/updateRouteResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/routes/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "routes"
        ],
        "summary": "Delete a Particular Route",
        "operationId": "deleteRoute",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/routes/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/routes/{guid}/apps": {
      "get": {
        "description": "curl --insecure -i %s/v2/routes/{guid}/apps -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "routes"
        ],
        "summary": "List all Apps for the Route",
        "operationId": "listAllAppsForRoute",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/routes/:guid/apps'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllAppsForRouteResponsePaged"
            }
          }
        }
      }
    },
    "/routes/{guid}/apps/{app_guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/routes/{guid}/apps/{app_guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "routes"
        ],
        "summary": "Associate App with the Route",
        "operationId": "associateAppWithRoute",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/routes/:guid/apps/:app_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The app_guid parameter is used as a part of the request URL: '/v2/routes/:guid/apps/:app_guid'",
            "name": "app_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/associateAppWithRouteResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/routes/{guid}/apps/{app_guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "routes"
        ],
        "summary": "Remove App from the Route",
        "operationId": "removeAppFromRoute",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/routes/:guid/apps/:app_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The app_guid parameter is used as a part of the request URL: '/v2/routes/:guid/apps/:app_guid'",
            "name": "app_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/removeAppFromRouteResponseResource"
            }
          }
        }
      }
    },
    "/security_groups": {
      "get": {
        "description": "curl --insecure -i %s/v2/security_groups -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "securityGroups"
        ],
        "summary": "List all Security Groups",
        "operationId": "listAllSecurityGroups",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllSecurityGroupsResponsePaged"
            }
          }
        }
      },
      "post": {
        "description": "curl --insecure -i %s/v2/security_groups -X POST -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "securityGroups"
        ],
        "summary": "Creating a Security Group",
        "operationId": "createSecurityGroup",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createSecurityGroupRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/createSecurityGroupResponseResource"
            }
          }
        }
      }
    },
    "/security_groups/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/security_groups/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "securityGroups"
        ],
        "summary": "Retrieve a Particular Security Group",
        "operationId": "retrieveSecurityGroup",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/security_groups/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveSecurityGroupResponseResource"
            }
          }
        }
      },
      "put": {
        "description": "curl --insecure -i %s/v2/security_groups/{guid} -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "securityGroups"
        ],
        "summary": "Updating a Security Group",
        "operationId": "updateSecurityGroup",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/security_groups/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateSecurityGroupRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/updateSecurityGroupResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/security_groups/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "securityGroups"
        ],
        "summary": "Delete a Particular Security Group",
        "operationId": "deleteSecurityGroup",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/security_groups/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/security_groups/{guid}/spaces": {
      "get": {
        "description": "curl --insecure -i %s/v2/security_groups/{guid}/spaces -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "securityGroups"
        ],
        "summary": "List all Spaces for the Security Group",
        "operationId": "listAllSpacesForSecurityGroup",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/security_groups/:guid/spaces'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllSpacesForSecurityGroupResponsePaged"
            }
          }
        }
      }
    },
    "/security_groups/{guid}/spaces/{space_guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/security_groups/{guid}/spaces/{space_guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "securityGroups"
        ],
        "summary": "Associate Space with the Security Group",
        "operationId": "associateSpaceWithSecurityGroup",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/security_groups/:guid/spaces/:space_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The space_guid parameter is used as a part of the request URL: '/v2/security_groups/:guid/spaces/:space_guid'",
            "name": "space_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/associateSpaceWithSecurityGroupResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/security_groups/{guid}/spaces/{space_guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "securityGroups"
        ],
        "summary": "Remove Space from the Security Group",
        "operationId": "removeSpaceFromSecurityGroup",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/security_groups/:guid/spaces/:space_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The space_guid parameter is used as a part of the request URL: '/v2/security_groups/:guid/spaces/:space_guid'",
            "name": "space_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/removeSpaceFromSecurityGroupResponseResource"
            }
          }
        }
      }
    },
    "/service_auth_tokens": {
      "get": {
        "description": "curl --insecure -i %s/v2/service_auth_tokens -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceAuthTokensDeprecated"
        ],
        "summary": "Filtering the result set by label (deprecated)",
        "operationId": "filterResultSetByLabelDeprecated",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/filterResultSetByLabelDeprecatedResponsePaged"
            }
          }
        }
      }
    },
    "/service_auth_tokens/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/service_auth_tokens/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceAuthTokensDeprecated"
        ],
        "summary": "Retrieve a Particular Service Auth Token (deprecated)",
        "operationId": "retrieveServiceAuthTokenDeprecated",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/service_auth_tokens/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveServiceAuthTokenDeprecatedResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/service_auth_tokens/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceAuthTokensDeprecated"
        ],
        "summary": "Delete a Particular Service Auth Token (deprecated)",
        "operationId": "deleteServiceAuthTokenDeprecated",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/service_auth_tokens/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/service_bindings": {
      "get": {
        "description": "curl --insecure -i %s/v2/service_bindings -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceBindings"
        ],
        "summary": "List all Service Bindings",
        "operationId": "listAllServiceBindings",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllServiceBindingsResponsePaged"
            }
          }
        }
      },
      "post": {
        "description": "curl --insecure -i %s/v2/service_bindings -X POST -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceBindings"
        ],
        "summary": "Create a Service Binding",
        "operationId": "createServiceBinding",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createServiceBindingRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/createServiceBindingResponseResource"
            }
          }
        }
      }
    },
    "/service_bindings/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/service_bindings/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceBindings"
        ],
        "summary": "Retrieve a Particular Service Binding",
        "operationId": "retrieveServiceBinding",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/service_bindings/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveServiceBindingResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/service_bindings/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceBindings"
        ],
        "summary": "Delete a Particular Service Binding",
        "operationId": "deleteServiceBinding",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/service_bindings/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/service_brokers": {
      "get": {
        "description": "curl --insecure -i %s/v2/service_brokers -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceBrokers"
        ],
        "summary": "List all Service Brokers",
        "operationId": "listAllServiceBrokers",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllServiceBrokersResponsePaged"
            }
          }
        }
      },
      "post": {
        "description": "curl --insecure -i %s/v2/service_brokers -X POST -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceBrokers"
        ],
        "summary": "Create a Service Broker",
        "operationId": "createServiceBroker",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createServiceBrokerRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/createServiceBrokerResponseResource"
            }
          }
        }
      }
    },
    "/service_brokers/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/service_brokers/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceBrokers"
        ],
        "summary": "Retrieve a Particular Service Broker",
        "operationId": "retrieveServiceBroker",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/service_brokers/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveServiceBrokerResponseResource"
            }
          }
        }
      },
      "put": {
        "description": "curl --insecure -i %s/v2/service_brokers/{guid} -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceBrokers"
        ],
        "summary": "Update a Service Broker",
        "operationId": "updateServiceBroker",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/service_brokers/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateServiceBrokerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/updateServiceBrokerResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/service_brokers/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceBrokers"
        ],
        "summary": "Delete a Particular Service Broker",
        "operationId": "deleteServiceBroker",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/service_brokers/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/service_instances": {
      "get": {
        "description": "curl --insecure -i %s/v2/service_instances -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceInstances"
        ],
        "summary": "List all Service Instances",
        "operationId": "listAllServiceInstances",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllServiceInstancesResponsePaged"
            }
          }
        }
      },
      "post": {
        "description": "curl --insecure -i %s/v2/service_instances -X POST -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceInstances"
        ],
        "summary": "Creating a Service Instance",
        "operationId": "createServiceInstance",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createServiceInstanceRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/createServiceInstanceResponseResource"
            }
          }
        }
      }
    },
    "/service_instances/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/service_instances/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceInstances"
        ],
        "summary": "Retrieve a Particular Service Instance",
        "operationId": "retrieveServiceInstance",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/service_instances/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveServiceInstanceResponseResource"
            }
          }
        }
      },
      "put": {
        "description": "curl --insecure -i %s/v2/service_instances/{guid} -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceInstances"
        ],
        "summary": "Updating a service instance",
        "operationId": "updateServiceInstance",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/service_instances/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateServiceInstanceRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/updateServiceInstanceResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/service_instances/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceInstances"
        ],
        "summary": "Delete a Particular Service Instance",
        "operationId": "deleteServiceInstance",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/service_instances/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/service_instances/{guid}/permissions": {
      "get": {
        "description": "curl --insecure -i %s/v2/service_instances/{guid}/permissions -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceInstances"
        ],
        "summary": "Retrieving permissions on a Service Instance",
        "operationId": "retrievingPermissionsOnServiceInstance",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/service_instances/:guid/permissions'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrievingPermissionsOnServiceInstanceResponseResource"
            }
          }
        }
      }
    },
    "/service_instances/{guid}/service_bindings": {
      "get": {
        "description": "curl --insecure -i %s/v2/service_instances/{guid}/service_bindings -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceInstances"
        ],
        "summary": "List all Service Bindings for the Service Instance",
        "operationId": "listAllServiceBindingsForServiceInstance",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/service_instances/:guid/service_bindings'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllServiceBindingsForServiceInstanceResponsePaged"
            }
          }
        }
      }
    },
    "/service_plan_visibilities": {
      "get": {
        "description": "curl --insecure -i %s/v2/service_plan_visibilities -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "servicePlanVisibilities"
        ],
        "summary": "List all Service Plan Visibilities",
        "operationId": "listAllServicePlanVisibilities",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllServicePlanVisibilitiesResponsePaged"
            }
          }
        }
      },
      "post": {
        "description": "curl --insecure -i %s/v2/service_plan_visibilities -X POST -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "servicePlanVisibilities"
        ],
        "summary": "Creating a Service Plan Visibility",
        "operationId": "createServicePlanVisibility",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createServicePlanVisibilityRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/createServicePlanVisibilityResponseResource"
            }
          }
        }
      }
    },
    "/service_plan_visibilities/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/service_plan_visibilities/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "servicePlanVisibilities"
        ],
        "summary": "Retrieve a Particular Service Plan Visibility",
        "operationId": "retrieveServicePlanVisibility",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/service_plan_visibilities/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveServicePlanVisibilityResponseResource"
            }
          }
        }
      },
      "put": {
        "description": "curl --insecure -i %s/v2/service_plan_visibilities/{guid} -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "servicePlanVisibilities"
        ],
        "summary": "Updating a Service Plan Visibility",
        "operationId": "updateServicePlanVisibility",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/service_plan_visibilities/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateServicePlanVisibilityRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/updateServicePlanVisibilityResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/service_plan_visibilities/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "servicePlanVisibilities"
        ],
        "summary": "Delete a Particular Service Plan Visibilities",
        "operationId": "deleteServicePlanVisibilities",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/service_plan_visibilities/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/service_plans": {
      "get": {
        "description": "curl --insecure -i %s/v2/service_plans -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "servicePlans"
        ],
        "summary": "List all Service Plans",
        "operationId": "listAllServicePlans",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllServicePlansResponsePaged"
            }
          }
        }
      },
      "put": {
        "description": "curl --insecure -i %s/v2/service_plans -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "servicePlans"
        ],
        "summary": "Updating a Service Plan (deprecated)",
        "operationId": "updateServicePlanDeprecated",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateServicePlanDeprecatedRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/updateServicePlanDeprecatedResponseResource"
            }
          }
        }
      },
      "post": {
        "description": "curl --insecure -i %s/v2/service_plans -X POST -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "servicePlans"
        ],
        "summary": "Creating a Service Plan (deprecated)",
        "operationId": "createServicePlanDeprecated",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createServicePlanDeprecatedRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/createServicePlanDeprecatedResponseResource"
            }
          }
        }
      }
    },
    "/service_plans/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/service_plans/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "servicePlans"
        ],
        "summary": "Retrieve a Particular Service Plan",
        "operationId": "retrieveServicePlan",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/service_plans/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveServicePlanResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/service_plans/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "servicePlans"
        ],
        "summary": "Delete a Particular Service Plans",
        "operationId": "deleteServicePlans",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/service_plans/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/service_plans/{guid}/service_instances": {
      "put": {
        "description": "curl --insecure -i %s/v2/service_plans/{guid}/service_instances -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceInstances"
        ],
        "summary": "Migrate Service Instances from one Service Plan to another Service Plan (experimental)",
        "operationId": "migrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimental",
        "parameters": [
          {
            "type": "string",
            "description": "The service_plan_guid parameter is used as a part of the request URL: '/v2/service_plans/:service_plan_guid/service_instances'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/migrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/migrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalResponseResource"
            }
          }
        }
      }
    },
    "/service_usage_events": {
      "get": {
        "description": "curl --insecure -i %s/v2/service_usage_events -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceUsageEventsExperimental"
        ],
        "summary": "List Service Usage Events",
        "operationId": "listServiceUsageEvents",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listServiceUsageEventsResponsePaged"
            }
          }
        }
      }
    },
    "/service_usage_events/destructively_purge_all_and_reseed_existing_instances": {
      "post": {
        "description": "curl --insecure -i %s/v2/service_usage_events/destructively_purge_all_and_reseed_existing_instances -X POST -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceUsageEventsExperimental"
        ],
        "summary": "Purge and reseed Service Usage Events",
        "operationId": "purgeAndReseedServiceUsageEvents",
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/service_usage_events/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/service_usage_events/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceUsageEventsExperimental"
        ],
        "summary": "Retrieve a Particular Service Usage Event",
        "operationId": "retrieveServiceUsageEvent",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/service_usage_events/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveServiceUsageEventResponseResource"
            }
          }
        }
      }
    },
    "/services": {
      "get": {
        "description": "curl --insecure -i %s/v2/services -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "services"
        ],
        "summary": "List all Services",
        "operationId": "listAllServices",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllServicesResponsePaged"
            }
          }
        }
      },
      "put": {
        "description": "curl --insecure -i %s/v2/services -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "services"
        ],
        "summary": "Updating a Service (deprecated)",
        "operationId": "updateServiceDeprecated",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateServiceDeprecatedRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/updateServiceDeprecatedResponseResource"
            }
          }
        }
      },
      "post": {
        "description": "curl --insecure -i %s/v2/services -X POST -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "services"
        ],
        "summary": "Creating a Service (deprecated)",
        "operationId": "createServiceDeprecated",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createServiceDeprecatedRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/createServiceDeprecatedResponseResource"
            }
          }
        }
      }
    },
    "/services/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/services/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "services"
        ],
        "summary": "Retrieve a Particular Service",
        "operationId": "retrieveService",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/services/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveServiceResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/services/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "services"
        ],
        "summary": "Delete a Particular Service",
        "operationId": "deleteService",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/services/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/services/{guid}/service_plans": {
      "get": {
        "description": "curl --insecure -i %s/v2/services/{guid}/service_plans -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "services"
        ],
        "summary": "List all Service Plans for the Service",
        "operationId": "listAllServicePlansForService",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/services/:guid/service_plans'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllServicePlansForServiceResponsePaged"
            }
          }
        }
      }
    },
    "/shared_domains": {
      "get": {
        "description": "curl --insecure -i %s/v2/shared_domains -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "sharedDomains"
        ],
        "summary": "List all Shared Domains",
        "operationId": "listAllSharedDomains",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllSharedDomainsResponsePaged"
            }
          }
        }
      },
      "post": {
        "description": "curl --insecure -i %s/v2/shared_domains -X POST -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "sharedDomains"
        ],
        "summary": "Create a Shared Domain",
        "operationId": "createSharedDomain",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createSharedDomainRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/createSharedDomainResponseResource"
            }
          }
        }
      }
    },
    "/shared_domains/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/shared_domains/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "sharedDomains"
        ],
        "summary": "Retrieve a Particular Shared Domain",
        "operationId": "retrieveSharedDomain",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/shared_domains/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveSharedDomainResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/shared_domains/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "sharedDomains"
        ],
        "summary": "Delete a Particular Shared Domain",
        "operationId": "deleteSharedDomain",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/shared_domains/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/space_quota_definitions": {
      "get": {
        "description": "curl --insecure -i %s/v2/space_quota_definitions -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaceQuotaDefinitions"
        ],
        "summary": "List all Space Quota Definitions",
        "operationId": "listAllSpaceQuotaDefinitions",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllSpaceQuotaDefinitionsResponsePaged"
            }
          }
        }
      },
      "post": {
        "description": "curl --insecure -i %s/v2/space_quota_definitions -X POST -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaceQuotaDefinitions"
        ],
        "summary": "Creating a Space Quota Definition",
        "operationId": "createSpaceQuotaDefinition",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createSpaceQuotaDefinitionRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/createSpaceQuotaDefinitionResponseResource"
            }
          }
        }
      }
    },
    "/space_quota_definitions/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/space_quota_definitions/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaceQuotaDefinitions"
        ],
        "summary": "Retrieve a Particular Space Quota Definition",
        "operationId": "retrieveSpaceQuotaDefinition",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/space_quota_definitions/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveSpaceQuotaDefinitionResponseResource"
            }
          }
        }
      },
      "put": {
        "description": "curl --insecure -i %s/v2/space_quota_definitions/{guid} -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaceQuotaDefinitions"
        ],
        "summary": "Updating a Space Quota Definition",
        "operationId": "updateSpaceQuotaDefinition",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/space_quota_definitions/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateSpaceQuotaDefinitionRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/updateSpaceQuotaDefinitionResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/space_quota_definitions/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaceQuotaDefinitions"
        ],
        "summary": "Delete a Particular Space Quota Definition",
        "operationId": "deleteSpaceQuotaDefinition",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/space_quota_definitions/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/space_quota_definitions/{guid}/spaces": {
      "get": {
        "description": "curl --insecure -i %s/v2/space_quota_definitions/{guid}/spaces -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaceQuotaDefinitions"
        ],
        "summary": "List all Spaces for the Space Quota Definition",
        "operationId": "listAllSpacesForSpaceQuotaDefinition",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/space_quota_definitions/:guid/spaces'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllSpacesForSpaceQuotaDefinitionResponsePaged"
            }
          }
        }
      }
    },
    "/space_quota_definitions/{guid}/spaces/{space_guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/space_quota_definitions/{guid}/spaces/{space_guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaceQuotaDefinitions"
        ],
        "summary": "Associate Space with the Space Quota Definition",
        "operationId": "associateSpaceWithSpaceQuotaDefinition",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/space_quota_definitions/:guid/spaces/:space_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The space_guid parameter is used as a part of the request URL: '/v2/space_quota_definitions/:guid/spaces/:space_guid'",
            "name": "space_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/associateSpaceWithSpaceQuotaDefinitionResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/space_quota_definitions/{guid}/spaces/{space_guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaceQuotaDefinitions"
        ],
        "summary": "Remove Space from the Space Quota Definition",
        "operationId": "removeSpaceFromSpaceQuotaDefinition",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/space_quota_definitions/:guid/spaces/:space_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The space_guid parameter is used as a part of the request URL: '/v2/space_quota_definitions/:guid/spaces/:space_guid'",
            "name": "space_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/removeSpaceFromSpaceQuotaDefinitionResponseResource"
            }
          }
        }
      }
    },
    "/spaces": {
      "get": {
        "description": "curl --insecure -i %s/v2/spaces -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "List all Spaces",
        "operationId": "listAllSpaces",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllSpacesResponsePaged"
            }
          }
        }
      },
      "post": {
        "description": "curl --insecure -i %s/v2/spaces -X POST -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "Creating a Space",
        "operationId": "createSpace",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createSpaceRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/createSpaceResponseResource"
            }
          }
        }
      }
    },
    "/spaces/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/spaces/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "Retrieve a Particular Space",
        "operationId": "retrieveSpace",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveSpaceResponseResource"
            }
          }
        }
      },
      "put": {
        "description": "curl --insecure -i %s/v2/spaces/{guid} -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "Update a Space",
        "operationId": "updateSpace",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateSpaceRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/updateSpaceResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/spaces/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "Delete a Particular Space",
        "operationId": "deleteSpace",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/spaces/{guid}/apps": {
      "get": {
        "description": "curl --insecure -i %s/v2/spaces/{guid}/apps -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "List all Apps for the Space",
        "operationId": "listAllAppsForSpace",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid/apps'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllAppsForSpaceResponsePaged"
            }
          }
        }
      }
    },
    "/spaces/{guid}/auditors": {
      "get": {
        "description": "curl --insecure -i %s/v2/spaces/{guid}/auditors -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "List all Auditors for the Space",
        "operationId": "listAllAuditorsForSpace",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid/auditors'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllAuditorsForSpaceResponsePaged"
            }
          }
        }
      }
    },
    "/spaces/{guid}/auditors/{auditor_guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/spaces/{guid}/auditors/{auditor_guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "Associate Auditor with the Space",
        "operationId": "associateAuditorWithSpace",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid/auditors/:auditor_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The auditor_guid parameter is used as a part of the request URL: '/v2/spaces/:guid/auditors/:auditor_guid'",
            "name": "auditor_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/associateAuditorWithSpaceResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/spaces/{guid}/auditors/{auditor_guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "Remove Auditor from the Space",
        "operationId": "removeAuditorFromSpace",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid/auditors/:auditor_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The auditor_guid parameter is used as a part of the request URL: '/v2/spaces/:guid/auditors/:auditor_guid'",
            "name": "auditor_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/removeAuditorFromSpaceResponseResource"
            }
          }
        }
      }
    },
    "/spaces/{guid}/developers": {
      "get": {
        "description": "curl --insecure -i %s/v2/spaces/{guid}/developers -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "List all Developers for the Space",
        "operationId": "listAllDevelopersForSpace",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid/developers'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllDevelopersForSpaceResponsePaged"
            }
          }
        }
      }
    },
    "/spaces/{guid}/developers/{developer_guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/spaces/{guid}/developers/{developer_guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "Associate Developer with the Space",
        "operationId": "associateDeveloperWithSpace",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid/developers/:developer_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The developer_guid parameter is used as a part of the request URL: '/v2/spaces/:guid/developers/:developer_guid'",
            "name": "developer_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/associateDeveloperWithSpaceResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/spaces/{guid}/developers/{developer_guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "Remove Developer from the Space",
        "operationId": "removeDeveloperFromSpace",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid/developers/:developer_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The developer_guid parameter is used as a part of the request URL: '/v2/spaces/:guid/developers/:developer_guid'",
            "name": "developer_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/removeDeveloperFromSpaceResponseResource"
            }
          }
        }
      }
    },
    "/spaces/{guid}/domains": {
      "get": {
        "description": "curl --insecure -i %s/v2/spaces/{guid}/domains -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "List all Domains for the Space (deprecated)",
        "operationId": "listAllDomainsForSpaceDeprecated",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid/domains'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllDomainsForSpaceDeprecatedResponsePaged"
            }
          }
        }
      }
    },
    "/spaces/{guid}/events": {
      "get": {
        "description": "curl --insecure -i %s/v2/spaces/{guid}/events -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "List all Events for the Space",
        "operationId": "listAllEventsForSpace",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid/events'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllEventsForSpaceResponsePaged"
            }
          }
        }
      }
    },
    "/spaces/{guid}/managers": {
      "get": {
        "description": "curl --insecure -i %s/v2/spaces/{guid}/managers -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "List all Managers for the Space",
        "operationId": "listAllManagersForSpace",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid/managers'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllManagersForSpaceResponsePaged"
            }
          }
        }
      }
    },
    "/spaces/{guid}/managers/{manager_guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/spaces/{guid}/managers/{manager_guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "Associate Manager with the Space",
        "operationId": "associateManagerWithSpace",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid/managers/:manager_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The manager_guid parameter is used as a part of the request URL: '/v2/spaces/:guid/managers/:manager_guid'",
            "name": "manager_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/associateManagerWithSpaceResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/spaces/{guid}/managers/{manager_guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "Remove Manager from the Space",
        "operationId": "removeManagerFromSpace",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid/managers/:manager_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The manager_guid parameter is used as a part of the request URL: '/v2/spaces/:guid/managers/:manager_guid'",
            "name": "manager_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/removeManagerFromSpaceResponseResource"
            }
          }
        }
      }
    },
    "/spaces/{guid}/routes": {
      "get": {
        "description": "curl --insecure -i %s/v2/spaces/{guid}/routes -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "List all Routes for the Space",
        "operationId": "listAllRoutesForSpace",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid/routes'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllRoutesForSpaceResponsePaged"
            }
          }
        }
      }
    },
    "/spaces/{guid}/security_groups": {
      "get": {
        "description": "curl --insecure -i %s/v2/spaces/{guid}/security_groups -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "List all Security Groups for the Space",
        "operationId": "listAllSecurityGroupsForSpace",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid/security_groups'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllSecurityGroupsForSpaceResponsePaged"
            }
          }
        }
      }
    },
    "/spaces/{guid}/security_groups/{security_group_guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/spaces/{guid}/security_groups/{security_group_guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "Associate Security Group with the Space",
        "operationId": "associateSecurityGroupWithSpace",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid/security_groups/:security_group_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The security_group_guid parameter is used as a part of the request URL: '/v2/spaces/:guid/security_groups/:security_group_guid'",
            "name": "security_group_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/associateSecurityGroupWithSpaceResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/spaces/{guid}/security_groups/{security_group_guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "Remove Security Group from the Space",
        "operationId": "removeSecurityGroupFromSpace",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid/security_groups/:security_group_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The security_group_guid parameter is used as a part of the request URL: '/v2/spaces/:guid/security_groups/:security_group_guid'",
            "name": "security_group_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/removeSecurityGroupFromSpaceResponseResource"
            }
          }
        }
      }
    },
    "/spaces/{guid}/service_instances": {
      "get": {
        "description": "curl --insecure -i %s/v2/spaces/{guid}/service_instances -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "List all Service Instances for the Space",
        "operationId": "listAllServiceInstancesForSpace",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid/service_instances'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllServiceInstancesForSpaceResponsePaged"
            }
          }
        }
      }
    },
    "/spaces/{guid}/services": {
      "get": {
        "description": "curl --insecure -i %s/v2/spaces/{guid}/services -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "List all Services for the Space",
        "operationId": "listAllServicesForSpace",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid/services'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllServicesForSpaceResponsePaged"
            }
          }
        }
      }
    },
    "/spaces/{guid}/summary": {
      "get": {
        "description": "curl --insecure -i %s/v2/spaces/{guid}/summary -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "Get Space summary",
        "operationId": "getSpaceSummary",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid/summary'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/getSpaceSummaryResponseResource"
            }
          }
        }
      }
    },
    "/stacks": {
      "get": {
        "description": "curl --insecure -i %s/v2/stacks -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "stacks"
        ],
        "summary": "List all Stacks",
        "operationId": "listAllStacks",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllStacksResponsePaged"
            }
          }
        }
      }
    },
    "/stacks/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/stacks/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "stacks"
        ],
        "summary": "Retrieve a Particular Stack",
        "operationId": "retrieveStack",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/stacks/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveStackResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/stacks/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "stacks"
        ],
        "summary": "Delete a Particular Stack",
        "operationId": "deleteStack",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/stacks/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/user_provided_service_instances": {
      "get": {
        "description": "curl --insecure -i %s/v2/user_provided_service_instances -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "userProvidedServiceInstances"
        ],
        "summary": "List all User Provided Service Instances",
        "operationId": "listAllUserProvidedServiceInstances",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllUserProvidedServiceInstancesResponsePaged"
            }
          }
        }
      },
      "post": {
        "description": "curl --insecure -i %s/v2/user_provided_service_instances -X POST -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "userProvidedServiceInstances"
        ],
        "summary": "Creating a User Provided Service Instance",
        "operationId": "createUserProvidedServiceInstance",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createUserProvidedServiceInstanceRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/createUserProvidedServiceInstanceResponseResource"
            }
          }
        }
      }
    },
    "/user_provided_service_instances/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/user_provided_service_instances/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "userProvidedServiceInstances"
        ],
        "summary": "Retrieve a Particular User Provided Service Instance",
        "operationId": "retrieveUserProvidedServiceInstance",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/user_provided_service_instances/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveUserProvidedServiceInstanceResponseResource"
            }
          }
        }
      },
      "put": {
        "description": "curl --insecure -i %s/v2/user_provided_service_instances/{guid} -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "userProvidedServiceInstances"
        ],
        "summary": "Updating a User Provided Service Instance",
        "operationId": "updateUserProvidedServiceInstance",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/user_provided_service_instances/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateUserProvidedServiceInstanceRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/updateUserProvidedServiceInstanceResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/user_provided_service_instances/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "userProvidedServiceInstances"
        ],
        "summary": "Delete a Particular User Provided Service Instance",
        "operationId": "deleteUserProvidedServiceInstance",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/user_provided_service_instances/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/user_provided_service_instances/{guid}/service_bindings": {
      "get": {
        "description": "curl --insecure -i %s/v2/user_provided_service_instances/{guid}/service_bindings -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "userProvidedServiceInstances"
        ],
        "summary": "List all Service Bindings for the User Provided Service Instance",
        "operationId": "listAllServiceBindingsForUserProvidedServiceInstance",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/user_provided_service_instances/:guid/service_bindings'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllServiceBindingsForUserProvidedServiceInstanceResponsePaged"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "description": "curl --insecure -i %s/v2/users -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "List all Users",
        "operationId": "listAllUsers",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllUsersResponsePaged"
            }
          }
        }
      },
      "post": {
        "description": "curl --insecure -i %s/v2/users -X POST -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Creating a User",
        "operationId": "createUser",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createUserRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/createUserResponseResource"
            }
          }
        }
      }
    },
    "/users/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/users/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Retrieve a Particular User",
        "operationId": "retrieveUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveUserResponseResource"
            }
          }
        }
      },
      "put": {
        "description": "curl --insecure -i %s/v2/users/{guid} -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Updating a User",
        "operationId": "updateUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateUserRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/updateUserResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/users/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Delete a Particular User",
        "operationId": "deleteUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/users/{guid}/audited_organizations": {
      "get": {
        "description": "curl --insecure -i %s/v2/users/{guid}/audited_organizations -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "List all Audited Organizations for the User",
        "operationId": "listAllAuditedOrganizationsForUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/audited_organizations'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllAuditedOrganizationsForUserResponsePaged"
            }
          }
        }
      }
    },
    "/users/{guid}/audited_organizations/{audited_organization_guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/users/{guid}/audited_organizations/{audited_organization_guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Associate Audited Organization with the User",
        "operationId": "associateAuditedOrganizationWithUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/audited_organizations/:audited_organization_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The audited_organization_guid parameter is used as a part of the request URL: '/v2/users/:guid/audited_organizations/:audited_organization_guid'",
            "name": "audited_organization_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/associateAuditedOrganizationWithUserResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/users/{guid}/audited_organizations/{audited_organization_guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Remove Audited Organization from the User",
        "operationId": "removeAuditedOrganizationFromUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/audited_organizations/:audited_organization_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The audited_organization_guid parameter is used as a part of the request URL: '/v2/users/:guid/audited_organizations/:audited_organization_guid'",
            "name": "audited_organization_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/removeAuditedOrganizationFromUserResponseResource"
            }
          }
        }
      }
    },
    "/users/{guid}/audited_spaces": {
      "get": {
        "description": "curl --insecure -i %s/v2/users/{guid}/audited_spaces -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "List all Audited Spaces for the User",
        "operationId": "listAllAuditedSpacesForUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/audited_spaces'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllAuditedSpacesForUserResponsePaged"
            }
          }
        }
      }
    },
    "/users/{guid}/audited_spaces/{audited_space_guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/users/{guid}/audited_spaces/{audited_space_guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Associate Audited Space with the User",
        "operationId": "associateAuditedSpaceWithUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/audited_spaces/:audited_space_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The audited_space_guid parameter is used as a part of the request URL: '/v2/users/:guid/audited_spaces/:audited_space_guid'",
            "name": "audited_space_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/associateAuditedSpaceWithUserResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/users/{guid}/audited_spaces/{audited_space_guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Remove Audited Space from the User",
        "operationId": "removeAuditedSpaceFromUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/audited_spaces/:audited_space_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The audited_space_guid parameter is used as a part of the request URL: '/v2/users/:guid/audited_spaces/:audited_space_guid'",
            "name": "audited_space_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/removeAuditedSpaceFromUserResponseResource"
            }
          }
        }
      }
    },
    "/users/{guid}/billing_managed_organizations": {
      "get": {
        "description": "curl --insecure -i %s/v2/users/{guid}/billing_managed_organizations -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "List all Billing Managed Organizations for the User",
        "operationId": "listAllBillingManagedOrganizationsForUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/billing_managed_organizations'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllBillingManagedOrganizationsForUserResponsePaged"
            }
          }
        }
      }
    },
    "/users/{guid}/billing_managed_organizations/{billing_managed_organization_guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/users/{guid}/billing_managed_organizations/{billing_managed_organization_guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Associate Billing Managed Organization with the User",
        "operationId": "associateBillingManagedOrganizationWithUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/billing_managed_organizations/:billing_managed_organization_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The billing_managed_organization_guid parameter is used as a part of the request URL: '/v2/users/:guid/billing_managed_organizations/:billing_managed_organization_guid'",
            "name": "billing_managed_organization_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/associateBillingManagedOrganizationWithUserResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/users/{guid}/billing_managed_organizations/{billing_managed_organization_guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Remove Billing Managed Organization from the User",
        "operationId": "removeBillingManagedOrganizationFromUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/billing_managed_organizations/:billing_managed_organization_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The billing_managed_organization_guid parameter is used as a part of the request URL: '/v2/users/:guid/billing_managed_organizations/:billing_managed_organization_guid'",
            "name": "billing_managed_organization_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/removeBillingManagedOrganizationFromUserResponseResource"
            }
          }
        }
      }
    },
    "/users/{guid}/managed_organizations": {
      "get": {
        "description": "curl --insecure -i %s/v2/users/{guid}/managed_organizations -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "List all Managed Organizations for the User",
        "operationId": "listAllManagedOrganizationsForUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/managed_organizations'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllManagedOrganizationsForUserResponsePaged"
            }
          }
        }
      }
    },
    "/users/{guid}/managed_organizations/{managed_organization_guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/users/{guid}/managed_organizations/{managed_organization_guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Associate Managed Organization with the User",
        "operationId": "associateManagedOrganizationWithUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/managed_organizations/:managed_organization_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The managed_organization_guid parameter is used as a part of the request URL: '/v2/users/:guid/managed_organizations/:managed_organization_guid'",
            "name": "managed_organization_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/associateManagedOrganizationWithUserResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/users/{guid}/managed_organizations/{managed_organization_guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Remove Managed Organization from the User",
        "operationId": "removeManagedOrganizationFromUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/managed_organizations/:managed_organization_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The managed_organization_guid parameter is used as a part of the request URL: '/v2/users/:guid/managed_organizations/:managed_organization_guid'",
            "name": "managed_organization_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/removeManagedOrganizationFromUserResponseResource"
            }
          }
        }
      }
    },
    "/users/{guid}/managed_spaces": {
      "get": {
        "description": "curl --insecure -i %s/v2/users/{guid}/managed_spaces -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "List all Managed Spaces for the User",
        "operationId": "listAllManagedSpacesForUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/managed_spaces'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllManagedSpacesForUserResponsePaged"
            }
          }
        }
      }
    },
    "/users/{guid}/managed_spaces/{managed_space_guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/users/{guid}/managed_spaces/{managed_space_guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Associate Managed Space with the User",
        "operationId": "associateManagedSpaceWithUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/managed_spaces/:managed_space_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The managed_space_guid parameter is used as a part of the request URL: '/v2/users/:guid/managed_spaces/:managed_space_guid'",
            "name": "managed_space_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/associateManagedSpaceWithUserResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/users/{guid}/managed_spaces/{managed_space_guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Remove Managed Space from the User",
        "operationId": "removeManagedSpaceFromUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/managed_spaces/:managed_space_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The managed_space_guid parameter is used as a part of the request URL: '/v2/users/:guid/managed_spaces/:managed_space_guid'",
            "name": "managed_space_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/removeManagedSpaceFromUserResponseResource"
            }
          }
        }
      }
    },
    "/users/{guid}/organizations": {
      "get": {
        "description": "curl --insecure -i %s/v2/users/{guid}/organizations -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "List all Organizations for the User",
        "operationId": "listAllOrganizationsForUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/organizations'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllOrganizationsForUserResponsePaged"
            }
          }
        }
      }
    },
    "/users/{guid}/organizations/{organization_guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/users/{guid}/organizations/{organization_guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Associate Organization with the User",
        "operationId": "associateOrganizationWithUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/organizations/:organization_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The organization_guid parameter is used as a part of the request URL: '/v2/users/:guid/organizations/:organization_guid'",
            "name": "organization_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/associateOrganizationWithUserResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/users/{guid}/organizations/{organization_guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Remove Organization from the User",
        "operationId": "removeOrganizationFromUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/organizations/:organization_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The organization_guid parameter is used as a part of the request URL: '/v2/users/:guid/organizations/:organization_guid'",
            "name": "organization_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/removeOrganizationFromUserResponseResource"
            }
          }
        }
      }
    },
    "/users/{guid}/spaces": {
      "get": {
        "description": "curl --insecure -i %s/v2/users/{guid}/spaces -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "List all Spaces for the User",
        "operationId": "listAllSpacesForUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/spaces'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllSpacesForUserResponsePaged"
            }
          }
        }
      }
    },
    "/users/{guid}/spaces/{space_guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/users/{guid}/spaces/{space_guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Associate Space with the User",
        "operationId": "associateSpaceWithUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/spaces/:space_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The space_guid parameter is used as a part of the request URL: '/v2/users/:guid/spaces/:space_guid'",
            "name": "space_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/associateSpaceWithUserResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/users/{guid}/spaces/{space_guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Remove Space from the User",
        "operationId": "removeSpaceFromUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/spaces/:space_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The space_guid parameter is used as a part of the request URL: '/v2/users/:guid/spaces/:space_guid'",
            "name": "space_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/removeSpaceFromUserResponseResource"
            }
          }
        }
      }
    },
    "/users/{guid}/summary": {
      "get": {
        "description": "curl --insecure -i %s/v2/users/{guid}/summary -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Get User summary",
        "operationId": "getUserSummary",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/summary'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/getUserSummaryResponseResource"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "associateAppWithRouteResponse": {
      "properties": {
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "domain_guid": {
          "description": "The domain Guid",
          "type": "string"
        },
        "domain_url": {
          "description": "The domain Url",
          "type": "string"
        },
        "host": {
          "description": "The host",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        }
      }
    },
    "associateAppWithRouteResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/associateAppWithRouteResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "associateAuditedOrganizationWithUserResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "default_space_url": {
          "description": "The default Space Url",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "associateAuditedOrganizationWithUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/associateAuditedOrganizationWithUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "associateAuditedSpaceWithUserResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "default_space_url": {
          "description": "The default Space Url",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "associateAuditedSpaceWithUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/associateAuditedSpaceWithUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "associateAuditorWithOrganizationResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "billing_enabled": {
          "description": "The billing Enabled",
          "type": "boolean"
        },
        "billing_managers_url": {
          "description": "The billing Managers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "private_domains_url": {
          "description": "The private Domains Url",
          "type": "string"
        },
        "quota_definition_guid": {
          "description": "The quota Definition Guid",
          "type": "string"
        },
        "quota_definition_url": {
          "description": "The quota Definition Url",
          "type": "string"
        },
        "space_quota_definitions_url": {
          "description": "The space Quota Definitions Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        },
        "users_url": {
          "description": "The users Url",
          "type": "string"
        }
      }
    },
    "associateAuditorWithOrganizationResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/associateAuditorWithOrganizationResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "associateAuditorWithSpaceResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "developers_url": {
          "description": "The developers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "security_groups_url": {
          "description": "The security Groups Url",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "space_quota_definition_guid": {
          "description": "The space Quota Definition Guid",
          "type": "string"
        }
      }
    },
    "associateAuditorWithSpaceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/associateAuditorWithSpaceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "associateBillingManagedOrganizationWithUserResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "default_space_url": {
          "description": "The default Space Url",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "associateBillingManagedOrganizationWithUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/associateBillingManagedOrganizationWithUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "associateBillingManagerWithOrganizationResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "billing_enabled": {
          "description": "The billing Enabled",
          "type": "boolean"
        },
        "billing_managers_url": {
          "description": "The billing Managers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "private_domains_url": {
          "description": "The private Domains Url",
          "type": "string"
        },
        "quota_definition_guid": {
          "description": "The quota Definition Guid",
          "type": "string"
        },
        "quota_definition_url": {
          "description": "The quota Definition Url",
          "type": "string"
        },
        "space_quota_definitions_url": {
          "description": "The space Quota Definitions Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        },
        "users_url": {
          "description": "The users Url",
          "type": "string"
        }
      }
    },
    "associateBillingManagerWithOrganizationResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/associateBillingManagerWithOrganizationResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "associateDeveloperWithSpaceResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "developers_url": {
          "description": "The developers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "security_groups_url": {
          "description": "The security Groups Url",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "space_quota_definition_guid": {
          "description": "The space Quota Definition Guid",
          "type": "string"
        }
      }
    },
    "associateDeveloperWithSpaceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/associateDeveloperWithSpaceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "associateManagedOrganizationWithUserResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "default_space_url": {
          "description": "The default Space Url",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "associateManagedOrganizationWithUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/associateManagedOrganizationWithUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "associateManagedSpaceWithUserResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "default_space_url": {
          "description": "The default Space Url",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "associateManagedSpaceWithUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/associateManagedSpaceWithUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "associateManagerWithOrganizationResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "billing_enabled": {
          "description": "The billing Enabled",
          "type": "boolean"
        },
        "billing_managers_url": {
          "description": "The billing Managers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "private_domains_url": {
          "description": "The private Domains Url",
          "type": "string"
        },
        "quota_definition_guid": {
          "description": "The quota Definition Guid",
          "type": "string"
        },
        "quota_definition_url": {
          "description": "The quota Definition Url",
          "type": "string"
        },
        "space_quota_definitions_url": {
          "description": "The space Quota Definitions Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        },
        "users_url": {
          "description": "The users Url",
          "type": "string"
        }
      }
    },
    "associateManagerWithOrganizationResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/associateManagerWithOrganizationResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "associateManagerWithSpaceResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "developers_url": {
          "description": "The developers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "security_groups_url": {
          "description": "The security Groups Url",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "space_quota_definition_guid": {
          "description": "The space Quota Definition Guid",
          "type": "string"
        }
      }
    },
    "associateManagerWithSpaceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/associateManagerWithSpaceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "associateOrganizationWithUserResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "default_space_url": {
          "description": "The default Space Url",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "associateOrganizationWithUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/associateOrganizationWithUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "associateRouteWithAppResponse": {
      "properties": {
        "buildpack": {
          "description": "The buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "command": {
          "description": "The command",
          "$ref": "#/definitions/genericObject"
        },
        "console": {
          "description": "The console",
          "type": "boolean"
        },
        "debug": {
          "description": "The debug",
          "$ref": "#/definitions/genericObject"
        },
        "detected_buildpack": {
          "description": "The detected Buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "detected_start_command": {
          "description": "The detected Start Command",
          "type": "string"
        },
        "disk_quota": {
          "description": "The disk Quota",
          "type": "integer"
        },
        "docker_image": {
          "description": "The docker Image",
          "$ref": "#/definitions/genericObject"
        },
        "environment_json": {
          "description": "The environment Json",
          "$ref": "#/definitions/genericObject"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "health_check_timeout": {
          "description": "The health Check Timeout",
          "$ref": "#/definitions/genericObject"
        },
        "health_check_type": {
          "description": "The health Check Type",
          "type": "string"
        },
        "instances": {
          "description": "The instances",
          "type": "integer"
        },
        "memory": {
          "description": "The memory",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "package_state": {
          "description": "The package State",
          "type": "string"
        },
        "package_updated_at": {
          "description": "The package Updated At",
          "type": "string"
        },
        "production": {
          "description": "The production",
          "type": "boolean"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "service_bindings_url": {
          "description": "The service Bindings Url",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        },
        "stack_guid": {
          "description": "The stack Guid",
          "type": "string"
        },
        "stack_url": {
          "description": "The stack Url",
          "type": "string"
        },
        "staging_failed_reason": {
          "description": "The staging Failed Reason",
          "$ref": "#/definitions/genericObject"
        },
        "staging_task_id": {
          "description": "The staging Task Id",
          "$ref": "#/definitions/genericObject"
        },
        "state": {
          "description": "The state",
          "type": "string"
        },
        "version": {
          "description": "The version",
          "type": "string"
        }
      }
    },
    "associateRouteWithAppResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/associateRouteWithAppResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "associateSecurityGroupWithSpaceResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "developers_url": {
          "description": "The developers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "security_groups_url": {
          "description": "The security Groups Url",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "space_quota_definition_guid": {
          "description": "The space Quota Definition Guid",
          "type": "string"
        }
      }
    },
    "associateSecurityGroupWithSpaceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/associateSecurityGroupWithSpaceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "associateSpaceWithSecurityGroupResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        },
        "rules": {
          "description": "The rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "running_default": {
          "description": "The running Default",
          "type": "boolean"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "staging_default": {
          "description": "The staging Default",
          "type": "boolean"
        }
      }
    },
    "associateSpaceWithSecurityGroupResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/associateSpaceWithSecurityGroupResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "associateSpaceWithSpaceQuotaDefinitionResponse": {
      "properties": {
        "instance_memory_limit": {
          "description": "The instance Memory Limit",
          "type": "integer"
        },
        "memory_limit": {
          "description": "The memory Limit",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "non_basic_services_allowed": {
          "description": "The non Basic Services Allowed",
          "type": "boolean"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "total_routes": {
          "description": "The total Routes",
          "type": "integer"
        },
        "total_services": {
          "description": "The total Services",
          "type": "integer"
        }
      }
    },
    "associateSpaceWithSpaceQuotaDefinitionResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/associateSpaceWithSpaceQuotaDefinitionResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "associateSpaceWithUserResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "default_space_url": {
          "description": "The default Space Url",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "associateSpaceWithUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/associateSpaceWithUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "associateUserWithOrganizationResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "billing_enabled": {
          "description": "The billing Enabled",
          "type": "boolean"
        },
        "billing_managers_url": {
          "description": "The billing Managers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "private_domains_url": {
          "description": "The private Domains Url",
          "type": "string"
        },
        "quota_definition_guid": {
          "description": "The quota Definition Guid",
          "type": "string"
        },
        "quota_definition_url": {
          "description": "The quota Definition Url",
          "type": "string"
        },
        "space_quota_definitions_url": {
          "description": "The space Quota Definitions Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        },
        "users_url": {
          "description": "The users Url",
          "type": "string"
        }
      }
    },
    "associateUserWithOrganizationResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/associateUserWithOrganizationResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "changePositionOfBuildpackRequest": {
      "properties": {
        "enabled": {
          "description": "Whether or not the buildpack will be used for staging",
          "$ref": "#/definitions/genericObject"
        },
        "filename": {
          "description": "The name of the uploaded buildpack file",
          "$ref": "#/definitions/genericObject"
        },
        "locked": {
          "description": "Whether or not the buildpack is locked to prevent updates",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name of the buildpack. To be used by app buildpack field. (only alphanumeric characters)",
          "type": "string"
        },
        "position": {
          "description": "The order in which the buildpacks are checked during buildpack auto-detection.",
          "type": "integer"
        }
      }
    },
    "changePositionOfBuildpackResponse": {
      "properties": {
        "enabled": {
          "description": "The enabled",
          "type": "boolean"
        },
        "filename": {
          "description": "The filename",
          "type": "string"
        },
        "locked": {
          "description": "The locked",
          "type": "boolean"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "position": {
          "description": "The position",
          "type": "integer"
        }
      }
    },
    "changePositionOfBuildpackResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/changePositionOfBuildpackResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "copyAppBitsForAppRequest": {
      "properties": {
        "source_app_guid": {
          "description": "The guid for the source app",
          "type": "string"
        }
      }
    },
    "copyAppBitsForAppResponse": {
      "properties": {
        "guid": {
          "description": "The guid",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        }
      }
    },
    "copyAppBitsForAppResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/copyAppBitsForAppResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createAppRequest": {
      "properties": {
        "buildpack": {
          "description": "Buildpack to build the app. 3 options: a) Blank means autodetection; b) A Git Url pointing to a buildpack; c) Name of an installed buildpack.",
          "$ref": "#/definitions/genericObject"
        },
        "command": {
          "description": "The command to start an app after it is staged (e.g. 'rails s -p $PORT' or 'java com.org.Server $PORT').",
          "$ref": "#/definitions/genericObject"
        },
        "console": {
          "description": "Open the console port for the app (at $CONSOLE_PORT).",
          "type": "boolean"
        },
        "debug": {
          "description": "Open the debug port for the app (at $DEBUG_PORT).",
          "type": "boolean"
        },
        "detected_start_command": {
          "description": "The command detected by the buildpack during staging.",
          "$ref": "#/definitions/genericObject"
        },
        "disk_quota": {
          "description": "The maximum amount of disk available to an instance of an app. In megabytes.",
          "type": "string"
        },
        "docker_image": {
          "description": "Name of the Docker image containing the app",
          "type": "string"
        },
        "environment_json": {
          "description": "Key/value pairs of all the environment variables to run in your app. Does not include any system or service variables.",
          "$ref": "#/definitions/genericObject"
        },
        "health_check_timeout": {
          "description": "Timeout for health checking of an staged app when starting up",
          "$ref": "#/definitions/genericObject"
        },
        "health_check_type": {
          "description": "Type of health check to perform.",
          "type": "string"
        },
        "instances": {
          "description": "The number of instances of the app to run. To ensure optimal availability ensure there are at least 2 instances.",
          "type": "string"
        },
        "memory": {
          "description": "The amount of memory each instance should have. In megabytes.",
          "type": "string"
        },
        "name": {
          "description": "The name of the app.",
          "type": "string"
        },
        "production": {
          "description": "Deprecated.",
          "type": "boolean"
        },
        "space_guid": {
          "description": "The guid of the associated space.",
          "type": "string"
        },
        "stack_guid": {
          "description": "The guid of the associated stack.",
          "type": "string"
        },
        "state": {
          "description": "The current desired state of the app. One of STOPPED or STARTED.",
          "type": "string"
        }
      }
    },
    "createAppResponse": {
      "properties": {
        "buildpack": {
          "description": "The buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "command": {
          "description": "The command",
          "$ref": "#/definitions/genericObject"
        },
        "console": {
          "description": "The console",
          "type": "boolean"
        },
        "debug": {
          "description": "The debug",
          "$ref": "#/definitions/genericObject"
        },
        "detected_buildpack": {
          "description": "The detected Buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "detected_start_command": {
          "description": "The detected Start Command",
          "type": "string"
        },
        "disk_quota": {
          "description": "The disk Quota",
          "type": "integer"
        },
        "docker_image": {
          "description": "The docker Image",
          "$ref": "#/definitions/genericObject"
        },
        "environment_json": {
          "description": "The environment Json",
          "$ref": "#/definitions/genericObject"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "health_check_timeout": {
          "description": "The health Check Timeout",
          "$ref": "#/definitions/genericObject"
        },
        "health_check_type": {
          "description": "The health Check Type",
          "type": "string"
        },
        "instances": {
          "description": "The instances",
          "type": "integer"
        },
        "memory": {
          "description": "The memory",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "package_state": {
          "description": "The package State",
          "type": "string"
        },
        "package_updated_at": {
          "description": "The package Updated At",
          "$ref": "#/definitions/genericObject"
        },
        "production": {
          "description": "The production",
          "type": "boolean"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "service_bindings_url": {
          "description": "The service Bindings Url",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        },
        "stack_guid": {
          "description": "The stack Guid",
          "type": "string"
        },
        "stack_url": {
          "description": "The stack Url",
          "type": "string"
        },
        "staging_failed_reason": {
          "description": "The staging Failed Reason",
          "$ref": "#/definitions/genericObject"
        },
        "staging_task_id": {
          "description": "The staging Task Id",
          "$ref": "#/definitions/genericObject"
        },
        "state": {
          "description": "The state",
          "type": "string"
        },
        "version": {
          "description": "The version",
          "type": "string"
        }
      }
    },
    "createAppResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createAppResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createDockerAppExperimentalRequest": {
      "properties": {
        "buildpack": {
          "description": "Buildpack to build the app. 3 options: a) Blank means autodetection; b) A Git Url pointing to a buildpack; c) Name of an installed buildpack.",
          "$ref": "#/definitions/genericObject"
        },
        "command": {
          "description": "The command to start an app after it is staged (e.g. 'rails s -p $PORT' or 'java com.org.Server $PORT').",
          "$ref": "#/definitions/genericObject"
        },
        "console": {
          "description": "Open the console port for the app (at $CONSOLE_PORT).",
          "type": "boolean"
        },
        "debug": {
          "description": "Open the debug port for the app (at $DEBUG_PORT).",
          "type": "boolean"
        },
        "detected_start_command": {
          "description": "The command detected by the buildpack during staging.",
          "$ref": "#/definitions/genericObject"
        },
        "disk_quota": {
          "description": "The maximum amount of disk available to an instance of an app. In megabytes.",
          "type": "string"
        },
        "docker_image": {
          "description": "Name of the Docker image containing the app",
          "type": "string"
        },
        "environment_json": {
          "description": "Key/value pairs of all the environment variables to run in your app. Does not include any system or service variables.",
          "$ref": "#/definitions/genericObject"
        },
        "health_check_timeout": {
          "description": "Timeout for health checking of an staged app when starting up",
          "$ref": "#/definitions/genericObject"
        },
        "health_check_type": {
          "description": "Type of health check to perform.",
          "type": "string"
        },
        "instances": {
          "description": "The number of instances of the app to run. To ensure optimal availability ensure there are at least 2 instances.",
          "type": "string"
        },
        "memory": {
          "description": "The amount of memory each instance should have. In megabytes.",
          "type": "string"
        },
        "name": {
          "description": "The name of the app.",
          "type": "string"
        },
        "production": {
          "description": "Deprecated.",
          "type": "boolean"
        },
        "space_guid": {
          "description": "The guid of the associated space.",
          "type": "string"
        },
        "stack_guid": {
          "description": "The guid of the associated stack.",
          "type": "string"
        },
        "state": {
          "description": "The current desired state of the app. One of STOPPED or STARTED.",
          "type": "string"
        }
      }
    },
    "createDockerAppExperimentalResponse": {
      "properties": {
        "buildpack": {
          "description": "The buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "command": {
          "description": "The command",
          "$ref": "#/definitions/genericObject"
        },
        "console": {
          "description": "The console",
          "type": "boolean"
        },
        "debug": {
          "description": "The debug",
          "$ref": "#/definitions/genericObject"
        },
        "detected_buildpack": {
          "description": "The detected Buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "detected_start_command": {
          "description": "The detected Start Command",
          "type": "string"
        },
        "disk_quota": {
          "description": "The disk Quota",
          "type": "integer"
        },
        "docker_image": {
          "description": "The docker Image",
          "type": "string"
        },
        "environment_json": {
          "description": "The environment Json",
          "$ref": "#/definitions/genericObject"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "health_check_timeout": {
          "description": "The health Check Timeout",
          "$ref": "#/definitions/genericObject"
        },
        "health_check_type": {
          "description": "The health Check Type",
          "type": "string"
        },
        "instances": {
          "description": "The instances",
          "type": "integer"
        },
        "memory": {
          "description": "The memory",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "package_state": {
          "description": "The package State",
          "type": "string"
        },
        "package_updated_at": {
          "description": "The package Updated At",
          "type": "string"
        },
        "production": {
          "description": "The production",
          "type": "boolean"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "service_bindings_url": {
          "description": "The service Bindings Url",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        },
        "stack_guid": {
          "description": "The stack Guid",
          "type": "string"
        },
        "stack_url": {
          "description": "The stack Url",
          "type": "string"
        },
        "staging_failed_reason": {
          "description": "The staging Failed Reason",
          "$ref": "#/definitions/genericObject"
        },
        "staging_task_id": {
          "description": "The staging Task Id",
          "$ref": "#/definitions/genericObject"
        },
        "state": {
          "description": "The state",
          "type": "string"
        },
        "version": {
          "description": "The version",
          "type": "string"
        }
      }
    },
    "createDockerAppExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createDockerAppExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createOrganizationQuotaDefinitionRequest": {
      "properties": {
        "instance_memory_limit": {
          "description": "The maximum amount of memory in megabyte an application instance can have. (-1 represents an unlimited amount)",
          "type": "integer"
        },
        "memory_limit": {
          "description": "How much memory in megabyte an organization can have.",
          "type": "integer"
        },
        "name": {
          "description": "The name for the Organization Quota Definition.",
          "type": "string"
        },
        "non_basic_services_allowed": {
          "description": "If an organization can have non basic services",
          "type": "boolean"
        },
        "total_routes": {
          "description": "How many routes an organization can have.",
          "type": "integer"
        },
        "total_services": {
          "description": "How many services an organization can have.",
          "type": "integer"
        },
        "trial_db_allowed": {
          "description": "If an organization can have a trial db.",
          "$ref": "#/definitions/genericObject"
        }
      }
    },
    "createOrganizationQuotaDefinitionResponse": {
      "properties": {
        "instance_memory_limit": {
          "description": "The instance Memory Limit",
          "type": "integer"
        },
        "memory_limit": {
          "description": "The memory Limit",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "non_basic_services_allowed": {
          "description": "The non Basic Services Allowed",
          "type": "boolean"
        },
        "total_routes": {
          "description": "The total Routes",
          "type": "integer"
        },
        "total_services": {
          "description": "The total Services",
          "type": "integer"
        },
        "trial_db_allowed": {
          "description": "The trial Db Allowed",
          "type": "boolean"
        }
      }
    },
    "createOrganizationQuotaDefinitionResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createOrganizationQuotaDefinitionResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createOrganizationRequest": {
      "properties": {
        "billing_enabled": {
          "description": "If billing is enabled for this organization",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name of the organization",
          "type": "string"
        },
        "quota_definition_guid": {
          "description": "The guid of quota to associate with this organization",
          "type": "string"
        },
        "status": {
          "description": "Status of the organization",
          "$ref": "#/definitions/genericObject"
        }
      }
    },
    "createOrganizationResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "billing_enabled": {
          "description": "The billing Enabled",
          "type": "boolean"
        },
        "billing_managers_url": {
          "description": "The billing Managers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "private_domains_url": {
          "description": "The private Domains Url",
          "type": "string"
        },
        "quota_definition_guid": {
          "description": "The quota Definition Guid",
          "type": "string"
        },
        "quota_definition_url": {
          "description": "The quota Definition Url",
          "type": "string"
        },
        "space_quota_definitions_url": {
          "description": "The space Quota Definitions Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        },
        "users_url": {
          "description": "The users Url",
          "type": "string"
        }
      }
    },
    "createOrganizationResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createOrganizationResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createPrivateDomainOwnedByGivenOrganizationRequest": {
      "properties": {
        "guid": {
          "description": "The guid of the domain.",
          "type": "string"
        },
        "name": {
          "description": "The name of the domain.",
          "type": "string"
        },
        "owning_organization_guid": {
          "description": "The organization that owns the domain. If not specified the domain is shared.",
          "type": "string"
        }
      }
    },
    "createPrivateDomainOwnedByGivenOrganizationResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        },
        "owning_organization_guid": {
          "description": "The owning Organization Guid",
          "type": "string"
        },
        "owning_organization_url": {
          "description": "The owning Organization Url",
          "type": "string"
        }
      }
    },
    "createPrivateDomainOwnedByGivenOrganizationResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createPrivateDomainOwnedByGivenOrganizationResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createRouteRequest": {
      "properties": {
        "domain_guid": {
          "description": "The guid of the associated domain",
          "type": "string"
        },
        "guid": {
          "description": "The guid of the route.",
          "type": "string"
        },
        "host": {
          "description": "The host portion of the route",
          "$ref": "#/definitions/genericObject"
        },
        "space_guid": {
          "description": "The guid of the associated space",
          "type": "string"
        }
      }
    },
    "createRouteResponse": {
      "properties": {
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "domain_guid": {
          "description": "The domain Guid",
          "type": "string"
        },
        "domain_url": {
          "description": "The domain Url",
          "type": "string"
        },
        "host": {
          "description": "The host",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        }
      }
    },
    "createRouteResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createRouteResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createSecurityGroupRequest": {
      "properties": {
        "name": {
          "description": "The name of the security group.",
          "type": "string"
        },
        "rules": {
          "description": "The egress rules for apps that belong to this security group. A rule consists of a protocol (tcp icmp udp all) destination CIDR or destination range  port or port range (tcp udp all) type (control signal for icmp) code (control signal for icmp)  log (enables logging for the egress rule)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "space_guids": {
          "description": "The list of associated spaces.",
          "$ref": "#/definitions/genericObject"
        }
      }
    },
    "createSecurityGroupResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        },
        "rules": {
          "description": "The rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "running_default": {
          "description": "The running Default",
          "type": "boolean"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "staging_default": {
          "description": "The staging Default",
          "type": "boolean"
        }
      }
    },
    "createSecurityGroupResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createSecurityGroupResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createServiceBindingRequest": {
      "properties": {
        "app_guid": {
          "description": "The guid of the app to bind",
          "type": "string"
        },
        "binding_options": {
          "description": "A hash of options that are passed to v1 brokers",
          "$ref": "#/definitions/genericObject"
        },
        "service_instance_guid": {
          "description": "The guid of the service instance to bind",
          "type": "string"
        }
      }
    },
    "createServiceBindingResponse": {
      "properties": {
        "app_guid": {
          "description": "The app Guid",
          "type": "string"
        },
        "app_url": {
          "description": "The app Url",
          "type": "string"
        },
        "binding_options": {
          "description": "The binding Options",
          "$ref": "#/definitions/genericObject"
        },
        "credentials": {
          "description": "The credentials",
          "$ref": "#/definitions/genericObject"
        },
        "gateway_data": {
          "description": "The gateway Data",
          "$ref": "#/definitions/genericObject"
        },
        "gateway_name": {
          "description": "The gateway Name",
          "type": "string"
        },
        "service_instance_guid": {
          "description": "The service Instance Guid",
          "type": "string"
        },
        "service_instance_url": {
          "description": "The service Instance Url",
          "type": "string"
        },
        "syslog_drain_url": {
          "description": "The syslog Drain Url",
          "$ref": "#/definitions/genericObject"
        }
      }
    },
    "createServiceBindingResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createServiceBindingResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createServiceBrokerRequest": {
      "properties": {
        "auth_password": {
          "description": "The password with which to authenticate against the service broker.",
          "type": "string"
        },
        "auth_username": {
          "description": "The username with which to authenticate against the service broker.",
          "type": "string"
        },
        "broker_url": {
          "description": "The URL of the service broker.",
          "type": "string"
        },
        "name": {
          "description": "The name of the service broker.",
          "type": "string"
        }
      }
    },
    "createServiceBrokerResponse": {
      "properties": {
        "auth_username": {
          "description": "The auth Username",
          "type": "string"
        },
        "broker_url": {
          "description": "The broker Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        }
      }
    },
    "createServiceBrokerResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createServiceBrokerResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createServiceDeprecatedRequest": {
      "properties": {
        "active": {
          "description": "A boolean describing that the service can be provisioned by users",
          "$ref": "#/definitions/genericObject"
        },
        "bindable": {
          "description": "A boolean describing that the service can be bound to applications",
          "$ref": "#/definitions/genericObject"
        },
        "description": {
          "description": "A short blurb describing the service",
          "type": "string"
        },
        "documentation_url": {
          "description": "A url that points to a documentation page for the service",
          "type": "string"
        },
        "extra": {
          "description": "A JSON field with extra data pertaining to the service",
          "type": "string"
        },
        "guid": {
          "description": "The guid of the service",
          "type": "string"
        },
        "info_url": {
          "description": "A url that points to an info page for the service",
          "type": "string"
        },
        "label": {
          "description": "The name of the service",
          "type": "string"
        },
        "long_description": {
          "description": "A longer description of the service",
          "type": "string"
        },
        "provider": {
          "description": "The name of the service provider (used only by v1 service gateways)",
          "type": "string"
        },
        "requires": {
          "description": "A list of dependencies for services",
          "type": "string"
        },
        "service_broker_guid": {
          "description": "The guid of the v2 service broker associated with the service",
          "type": "string"
        },
        "tags": {
          "description": "A list of tags for the service",
          "type": "string"
        },
        "timeout": {
          "description": "A timeout used by the v1 service gateway client",
          "$ref": "#/definitions/genericObject"
        },
        "unique_id": {
          "description": "A guid that identifies the service with the broker (not the same as the guid above)",
          "$ref": "#/definitions/genericObject"
        },
        "url": {
          "description": "The url of ther service provider (used only by v1 service gateways)",
          "type": "string"
        },
        "version": {
          "description": "The version of the service (used only by v1 service gateways)",
          "type": "string"
        }
      }
    },
    "createServiceDeprecatedResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "bindable": {
          "description": "The bindable",
          "type": "boolean"
        },
        "description": {
          "description": "The description",
          "type": "string"
        },
        "documentation_url": {
          "description": "The documentation Url",
          "$ref": "#/definitions/genericObject"
        },
        "extra": {
          "description": "The extra",
          "$ref": "#/definitions/genericObject"
        },
        "info_url": {
          "description": "The info Url",
          "$ref": "#/definitions/genericObject"
        },
        "label": {
          "description": "The label",
          "type": "string"
        },
        "long_description": {
          "description": "The long Description",
          "$ref": "#/definitions/genericObject"
        },
        "plan_updateable": {
          "description": "The plan Updateable",
          "type": "boolean"
        },
        "provider": {
          "description": "The provider",
          "type": "string"
        },
        "requires": {
          "description": "The requires",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "service_broker_guid": {
          "description": "The service Broker Guid",
          "type": "string"
        },
        "service_plans_url": {
          "description": "The service Plans Url",
          "type": "string"
        },
        "tags": {
          "description": "The tags",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "unique_id": {
          "description": "The unique Id",
          "$ref": "#/definitions/genericObject"
        },
        "url": {
          "description": "The url",
          "type": "string"
        },
        "version": {
          "description": "The version",
          "type": "string"
        }
      }
    },
    "createServiceDeprecatedResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createServiceDeprecatedResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createServiceInstanceRequest": {
      "properties": {
        "gateway_data": {
          "description": "Configuration information for the broker gateway in v1 services",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "A name for the service instance",
          "type": "string"
        },
        "service_plan_guid": {
          "description": "The guid of the service plan to associate with the instance",
          "type": "string"
        },
        "space_guid": {
          "description": "The guid of the space in which the instance will be created",
          "type": "string"
        }
      }
    },
    "createServiceInstanceResponse": {
      "properties": {
        "credentials": {
          "description": "The credentials",
          "$ref": "#/definitions/genericObject"
        },
        "dashboard_url": {
          "description": "The dashboard Url",
          "type": "string"
        },
        "gateway_data": {
          "description": "The gateway Data",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "service_bindings_url": {
          "description": "The service Bindings Url",
          "type": "string"
        },
        "service_plan_guid": {
          "description": "The service Plan Guid",
          "type": "string"
        },
        "service_plan_url": {
          "description": "The service Plan Url",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "createServiceInstanceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createServiceInstanceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createServicePlanDeprecatedRequest": {
      "properties": {
        "active": {
          "description": "A boolean that determines whether plans can be used to create new instances.",
          "type": "boolean"
        },
        "description": {
          "description": "A description of the service plan",
          "type": "string"
        },
        "extra": {
          "description": "A JSON string with additional data about the plan",
          "type": "string"
        },
        "free": {
          "description": "A boolean describing if the service plan is free",
          "type": "boolean"
        },
        "guid": {
          "description": "The guid of the service plan",
          "type": "string"
        },
        "name": {
          "description": "The name of the service plan",
          "type": "string"
        },
        "public": {
          "description": "A boolean describing that the plan is visible to the all users",
          "$ref": "#/definitions/genericObject"
        },
        "service_guid": {
          "description": "The guid of the related service",
          "type": "string"
        },
        "unique_id": {
          "description": "A guid for the service plan in the service broker (not the same as the cloud controller guid)",
          "$ref": "#/definitions/genericObject"
        }
      }
    },
    "createServicePlanDeprecatedResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "description": {
          "description": "The description",
          "type": "string"
        },
        "extra": {
          "description": "The extra",
          "$ref": "#/definitions/genericObject"
        },
        "free": {
          "description": "The free",
          "type": "boolean"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "public": {
          "description": "The public",
          "type": "boolean"
        },
        "service_guid": {
          "description": "The service Guid",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "service_url": {
          "description": "The service Url",
          "type": "string"
        },
        "unique_id": {
          "description": "The unique Id",
          "type": "string"
        }
      }
    },
    "createServicePlanDeprecatedResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createServicePlanDeprecatedResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createServicePlanVisibilityRequest": {
      "properties": {
        "organization_guid": {
          "description": "The guid of the organization the plan will be visible to",
          "type": "string"
        },
        "service_plan_guid": {
          "description": "The guid of the plan that will be made visible",
          "type": "string"
        }
      }
    },
    "createServicePlanVisibilityResponse": {
      "properties": {
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "service_plan_guid": {
          "description": "The service Plan Guid",
          "type": "string"
        },
        "service_plan_url": {
          "description": "The service Plan Url",
          "type": "string"
        }
      }
    },
    "createServicePlanVisibilityResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createServicePlanVisibilityResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createSharedDomainRequest": {
      "properties": {
        "guid": {
          "description": "The guid of the domain.",
          "type": "string"
        },
        "name": {
          "description": "The name of the domain.",
          "type": "string"
        }
      }
    },
    "createSharedDomainResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        }
      }
    },
    "createSharedDomainResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createSharedDomainResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createSpaceQuotaDefinitionRequest": {
      "properties": {
        "instance_memory_limit": {
          "description": "The maximum amount of memory in megabytes an application instance can have. (-1 represents an unlimited amount)",
          "type": "string"
        },
        "memory_limit": {
          "description": "How much memory in megabytes a space can have.",
          "type": "integer"
        },
        "name": {
          "description": "The name for the Space Quota Definition.",
          "type": "string"
        },
        "non_basic_services_allowed": {
          "description": "If a space can have non basic services",
          "type": "boolean"
        },
        "organization_guid": {
          "description": "The owning organization of the space quota",
          "type": "string"
        },
        "total_routes": {
          "description": "How many routes a space can have.",
          "type": "integer"
        },
        "total_services": {
          "description": "How many services a space can have.",
          "type": "integer"
        }
      }
    },
    "createSpaceQuotaDefinitionResponse": {
      "properties": {
        "instance_memory_limit": {
          "description": "The instance Memory Limit",
          "type": "integer"
        },
        "memory_limit": {
          "description": "The memory Limit",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "non_basic_services_allowed": {
          "description": "The non Basic Services Allowed",
          "type": "boolean"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "total_routes": {
          "description": "The total Routes",
          "type": "integer"
        },
        "total_services": {
          "description": "The total Services",
          "type": "integer"
        }
      }
    },
    "createSpaceQuotaDefinitionResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createSpaceQuotaDefinitionResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createSpaceRequest": {
      "properties": {
        "auditor_guids": {
          "description": "The list of the associated auditors",
          "$ref": "#/definitions/genericObject"
        },
        "developer_guids": {
          "description": "The list of the associated developers",
          "$ref": "#/definitions/genericObject"
        },
        "domain_guids": {
          "description": "The list of the associated domains",
          "$ref": "#/definitions/genericObject"
        },
        "manager_guids": {
          "description": "The list of the associated managers",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name of the space",
          "type": "string"
        },
        "organization_guid": {
          "description": "The guid of the associated organization",
          "type": "string"
        },
        "security_group_guids": {
          "description": "The list of the associated security groups",
          "$ref": "#/definitions/genericObject"
        },
        "space_quota_definition_guid": {
          "description": "The guid of the associated space quota definition",
          "type": "string"
        }
      }
    },
    "createSpaceResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "developers_url": {
          "description": "The developers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "security_groups_url": {
          "description": "The security Groups Url",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "space_quota_definition_guid": {
          "description": "The space Quota Definition Guid",
          "type": "string"
        }
      }
    },
    "createSpaceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createSpaceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createUserProvidedServiceInstanceRequest": {
      "properties": {
        "credentials": {
          "description": "A hash that can be used to store credentials",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "A name for the service instance",
          "type": "string"
        },
        "space_guid": {
          "description": "The guid of the space in which the instance will be created",
          "type": "string"
        },
        "syslog_drain_url": {
          "description": "The url for the syslog_drain to direct to",
          "type": "string"
        }
      }
    },
    "createUserProvidedServiceInstanceResponse": {
      "properties": {
        "credentials": {
          "description": "The credentials",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "service_bindings_url": {
          "description": "The service Bindings Url",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        },
        "syslog_drain_url": {
          "description": "The syslog Drain Url",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "createUserProvidedServiceInstanceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createUserProvidedServiceInstanceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createUserRequest": {
      "properties": {
        "admin": {
          "description": "Whether the user is an admin (Use UAA instead).",
          "$ref": "#/definitions/genericObject"
        },
        "default_space_guid": {
          "description": "The guid of the default space for apps created by this user.",
          "type": "string"
        },
        "guid": {
          "description": "The UAA guid of the user to create.",
          "type": "string"
        }
      }
    },
    "createUserResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "createUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createsAdminBuildpackRequest": {
      "properties": {
        "enabled": {
          "description": "Whether or not the buildpack will be used for staging",
          "$ref": "#/definitions/genericObject"
        },
        "filename": {
          "description": "The name of the uploaded buildpack file",
          "$ref": "#/definitions/genericObject"
        },
        "locked": {
          "description": "Whether or not the buildpack is locked to prevent updates",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name of the buildpack. To be used by app buildpack field. (only alphanumeric characters)",
          "type": "string"
        },
        "position": {
          "description": "The order in which the buildpacks are checked during buildpack auto-detection.",
          "$ref": "#/definitions/genericObject"
        }
      }
    },
    "createsAdminBuildpackResponse": {
      "properties": {
        "enabled": {
          "description": "The enabled",
          "type": "boolean"
        },
        "filename": {
          "description": "The filename",
          "$ref": "#/definitions/genericObject"
        },
        "locked": {
          "description": "The locked",
          "type": "boolean"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "position": {
          "description": "The position",
          "type": "integer"
        }
      }
    },
    "createsAdminBuildpackResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createsAdminBuildpackResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createsDomainOwnedByGivenOrganizationDeprecatedRequest": {
      "properties": {
        "guid": {
          "description": "The guid of the domain.",
          "type": "string"
        },
        "name": {
          "description": "The name of the domain.",
          "type": "string"
        },
        "owning_organization_guid": {
          "description": "The organization that owns the domain. If not specified the domain is shared.",
          "type": "string"
        },
        "wildcard": {
          "description": "Allow routes with non-empty hosts",
          "type": "boolean"
        }
      }
    },
    "createsDomainOwnedByGivenOrganizationDeprecatedResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        },
        "owning_organization_guid": {
          "description": "The owning Organization Guid",
          "type": "string"
        },
        "owning_organization_url": {
          "description": "The owning Organization Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "createsDomainOwnedByGivenOrganizationDeprecatedResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createsDomainOwnedByGivenOrganizationDeprecatedResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createsOAuthTokenResponse": {
      "properties": {
        "access_token": {
          "description": "An OAuth2 access token. When token_format=opaque is requested this value will be a random string that can only be validated using the UAA's /check_token or /introspect endpoints. When token_format=jwt is requested, this token will be a JSON Web Token suitable for offline validation by OAuth2 Resource Servers.",
          "type": "string"
        },
        "expires_in": {
          "description": "The number of seconds until the access token expires.",
          "type": "integer"
        },
        "id_token": {
          "description": "An OpenID Connect ID token. This portion of the token response is only returned when clients are configured with the scope openid, the response_type includes id_token, and the user has granted approval to the client for the openid scope.",
          "type": "string"
        },
        "jti": {
          "description": "A globally unique identifier for this access token. This identifier is used when revoking tokens.",
          "type": "string"
        },
        "refresh_token": {
          "description": "An OAuth2 refresh token. Clients typically use the refresh token to obtain a new access token without the need for the user to authenticate again. They do this by calling /oauth/token with grant_type=refresh_token. See here for more information. A refresh token will only be issued to clients that have refresh_token in their list of authorized_grant_types.",
          "type": "string"
        },
        "scope": {
          "description": "A space-delimited list of scopes authorized by the user for this client. This list is the intersection of the scopes configured on the client, the group memberships of the user, and the user's approvals (when autoapprove: true is not configured on the client).",
          "type": "string"
        },
        "token_type": {
          "description": "The type of the access token issued. This field is mandated in RFC 6749. In the UAA, the only supported token_type is bearer.",
          "type": "string"
        }
      }
    },
    "createsSharedDomainDeprecatedRequest": {
      "properties": {
        "guid": {
          "description": "The guid of the domain.",
          "type": "string"
        },
        "name": {
          "description": "The name of the domain.",
          "type": "string"
        },
        "owning_organization_guid": {
          "description": "The organization that owns the domain. If not specified the domain is shared.",
          "type": "string"
        },
        "wildcard": {
          "description": "Allow routes with non-empty hosts",
          "type": "boolean"
        }
      }
    },
    "createsSharedDomainDeprecatedResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        },
        "owning_organization_guid": {
          "description": "The owning Organization Guid",
          "type": "string"
        }
      }
    },
    "createsSharedDomainDeprecatedResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createsSharedDomainDeprecatedResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "enableOrDisableBuildpackRequest": {
      "properties": {
        "enabled": {
          "description": "Whether or not the buildpack will be used for staging",
          "type": "boolean"
        },
        "filename": {
          "description": "The name of the uploaded buildpack file",
          "$ref": "#/definitions/genericObject"
        },
        "locked": {
          "description": "Whether or not the buildpack is locked to prevent updates",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name of the buildpack. To be used by app buildpack field. (only alphanumeric characters)",
          "type": "string"
        },
        "position": {
          "description": "The order in which the buildpacks are checked during buildpack auto-detection.",
          "$ref": "#/definitions/genericObject"
        }
      }
    },
    "enableOrDisableBuildpackResponse": {
      "properties": {
        "enabled": {
          "description": "The enabled",
          "type": "boolean"
        },
        "filename": {
          "description": "The filename",
          "type": "string"
        },
        "locked": {
          "description": "The locked",
          "type": "boolean"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "position": {
          "description": "The position",
          "type": "integer"
        }
      }
    },
    "enableOrDisableBuildpackResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/enableOrDisableBuildpackResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "entityMetadata": {
      "properties": {
        "created_at": {
          "type": "string"
        },
        "guid": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "filterPrivateDomainsByNameResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        },
        "owning_organization_guid": {
          "description": "The owning Organization Guid",
          "type": "string"
        },
        "owning_organization_url": {
          "description": "The owning Organization Url",
          "type": "string"
        }
      }
    },
    "filterPrivateDomainsByNameResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/filterPrivateDomainsByNameResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "filterPrivateDomainsByNameResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/filterPrivateDomainsByNameResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "filterResultSetByLabelDeprecatedResponse": {
      "properties": {
        "label": {
          "description": "The label",
          "type": "string"
        },
        "provider": {
          "description": "The provider",
          "type": "string"
        }
      }
    },
    "filterResultSetByLabelDeprecatedResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/filterResultSetByLabelDeprecatedResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "filterResultSetByLabelDeprecatedResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/filterResultSetByLabelDeprecatedResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "filterResultSetByProviderDeprecatedResponse": {
      "properties": {
        "label": {
          "description": "The label",
          "type": "string"
        },
        "provider": {
          "description": "The provider",
          "type": "string"
        }
      }
    },
    "filterResultSetByProviderDeprecatedResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/filterResultSetByProviderDeprecatedResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "filterResultSetByProviderDeprecatedResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/filterResultSetByProviderDeprecatedResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "filterSharedDomainsByNameResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        }
      }
    },
    "filterSharedDomainsByNameResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/filterSharedDomainsByNameResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "filterSharedDomainsByNameResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/filterSharedDomainsByNameResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "genericObject": {
      "type": "object",
      "additionalProperties": {
        "type": "object"
      }
    },
    "getAllFeatureFlagsResponse": {
      "properties": {
        "enabled": {
          "description": "The enabled",
          "type": "boolean"
        },
        "error_message": {
          "description": "The error Message",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "url": {
          "description": "The url",
          "type": "string"
        }
      }
    },
    "getAllFeatureFlagsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/getAllFeatureFlagsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "getAppBitsUploadFeatureFlagResponse": {
      "properties": {
        "enabled": {
          "description": "The enabled",
          "type": "boolean"
        },
        "error_message": {
          "description": "The error Message",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "url": {
          "description": "The url",
          "type": "string"
        }
      }
    },
    "getAppBitsUploadFeatureFlagResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/getAppBitsUploadFeatureFlagResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "getAppScalingFeatureFlagResponse": {
      "properties": {
        "enabled": {
          "description": "The enabled",
          "type": "boolean"
        },
        "error_message": {
          "description": "The error Message",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "url": {
          "description": "The url",
          "type": "string"
        }
      }
    },
    "getAppScalingFeatureFlagResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/getAppScalingFeatureFlagResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "getAppSummaryResponse": {
      "properties": {
        "available_domains": {
          "description": "The available Domains",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "buildpack": {
          "description": "The buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "command": {
          "description": "The command",
          "$ref": "#/definitions/genericObject"
        },
        "console": {
          "description": "The console",
          "type": "boolean"
        },
        "debug": {
          "description": "The debug",
          "$ref": "#/definitions/genericObject"
        },
        "detected_buildpack": {
          "description": "The detected Buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "detected_start_command": {
          "description": "The detected Start Command",
          "type": "string"
        },
        "disk_quota": {
          "description": "The disk Quota",
          "type": "integer"
        },
        "docker_image": {
          "description": "The docker Image",
          "$ref": "#/definitions/genericObject"
        },
        "environment_json": {
          "description": "The environment Json",
          "$ref": "#/definitions/genericObject"
        },
        "guid": {
          "description": "The guid",
          "type": "string"
        },
        "health_check_timeout": {
          "description": "The health Check Timeout",
          "$ref": "#/definitions/genericObject"
        },
        "health_check_type": {
          "description": "The health Check Type",
          "type": "string"
        },
        "instances": {
          "description": "The instances",
          "type": "integer"
        },
        "memory": {
          "description": "The memory",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "package_state": {
          "description": "The package State",
          "type": "string"
        },
        "package_updated_at": {
          "description": "The package Updated At",
          "type": "string"
        },
        "production": {
          "description": "The production",
          "type": "boolean"
        },
        "routes": {
          "description": "The routes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "running_instances": {
          "description": "The running Instances",
          "type": "integer"
        },
        "services": {
          "description": "The services",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "stack_guid": {
          "description": "The stack Guid",
          "type": "string"
        },
        "staging_failed_reason": {
          "description": "The staging Failed Reason",
          "$ref": "#/definitions/genericObject"
        },
        "staging_task_id": {
          "description": "The staging Task Id",
          "$ref": "#/definitions/genericObject"
        },
        "state": {
          "description": "The state",
          "type": "string"
        },
        "version": {
          "description": "The version",
          "type": "string"
        }
      }
    },
    "getAppSummaryResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/getAppSummaryResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "getDetailedStatsForStartedAppResponse": {
      "properties": {
        "state": {
          "description": "The state",
          "type": "string"
        },
        "stats": {
          "description": "The stats",
          "$ref": "#/definitions/genericObject"
        }
      }
    },
    "getDetailedStatsForStartedAppResponseResource": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/getDetailedStatsForStartedAppResponse"
      }
    },
    "getEnvForAppResponse": {
      "properties": {
        "application_env_json": {
          "description": "The application Env Json",
          "$ref": "#/definitions/genericObject"
        },
        "environment_json": {
          "description": "The environment Json",
          "$ref": "#/definitions/genericObject"
        },
        "running_env_json": {
          "description": "The running Env Json",
          "$ref": "#/definitions/genericObject"
        },
        "staging_env_json": {
          "description": "The staging Env Json",
          "$ref": "#/definitions/genericObject"
        },
        "system_env_json": {
          "description": "The system Env Json",
          "$ref": "#/definitions/genericObject"
        }
      }
    },
    "getEnvForAppResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/getEnvForAppResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "getInfoResponse": {
      "properties": {
        "api_version": {
          "description": "The api Version",
          "type": "string"
        },
        "authorization_endpoint": {
          "description": "The authorization Endpoint",
          "type": "string"
        },
        "build": {
          "description": "The build",
          "type": "string"
        },
        "description": {
          "description": "The description",
          "type": "string"
        },
        "logging_endpoint": {
          "description": "The logging Endpoint",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "support": {
          "description": "The support",
          "type": "string"
        },
        "token_endpoint": {
          "description": "The token Endpoint",
          "type": "string"
        },
        "version": {
          "description": "The version",
          "type": "integer"
        }
      }
    },
    "getInfoResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/getInfoResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "getInstanceInformationForStartedAppResponse": {
      "properties": {
        "console_ip": {
          "description": "The console Ip",
          "$ref": "#/definitions/genericObject"
        },
        "console_port": {
          "description": "The console Port",
          "$ref": "#/definitions/genericObject"
        },
        "debug_ip": {
          "description": "The debug Ip",
          "$ref": "#/definitions/genericObject"
        },
        "debug_port": {
          "description": "The debug Port",
          "$ref": "#/definitions/genericObject"
        },
        "since": {
          "description": "The since",
          "type": "number"
        },
        "state": {
          "description": "The state",
          "type": "string"
        }
      }
    },
    "getInstanceInformationForStartedAppResponseResource": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/getInstanceInformationForStartedAppResponse"
      }
    },
    "getOrganizationSummaryResponse": {
      "properties": {
        "guid": {
          "description": "The guid",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "spaces": {
          "description": "The spaces",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "status": {
          "description": "The status",
          "type": "string"
        }
      }
    },
    "getOrganizationSummaryResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/getOrganizationSummaryResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "getPrivateDomainCreationFeatureFlagResponse": {
      "properties": {
        "enabled": {
          "description": "The enabled",
          "type": "boolean"
        },
        "error_message": {
          "description": "The error Message",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "url": {
          "description": "The url",
          "type": "string"
        }
      }
    },
    "getPrivateDomainCreationFeatureFlagResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/getPrivateDomainCreationFeatureFlagResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "getRouteCreationFeatureFlagResponse": {
      "properties": {
        "enabled": {
          "description": "The enabled",
          "type": "boolean"
        },
        "error_message": {
          "description": "The error Message",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "url": {
          "description": "The url",
          "type": "string"
        }
      }
    },
    "getRouteCreationFeatureFlagResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/getRouteCreationFeatureFlagResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "getServiceInstanceCreationFeatureFlagResponse": {
      "properties": {
        "enabled": {
          "description": "The enabled",
          "type": "boolean"
        },
        "error_message": {
          "description": "The error Message",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "url": {
          "description": "The url",
          "type": "string"
        }
      }
    },
    "getServiceInstanceCreationFeatureFlagResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/getServiceInstanceCreationFeatureFlagResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "getSpaceSummaryResponse": {
      "properties": {
        "apps": {
          "description": "The apps",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "guid": {
          "description": "The guid",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "services": {
          "description": "The services",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        }
      }
    },
    "getSpaceSummaryResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/getSpaceSummaryResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "getUserOrgCreationFeatureFlagResponse": {
      "properties": {
        "enabled": {
          "description": "The enabled",
          "type": "boolean"
        },
        "error_message": {
          "description": "The error Message",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "url": {
          "description": "The url",
          "type": "string"
        }
      }
    },
    "getUserOrgCreationFeatureFlagResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/getUserOrgCreationFeatureFlagResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "getUserSummaryResponse": {
      "properties": {
        "audited_organizations": {
          "description": "The audited Organizations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "audited_spaces": {
          "description": "The audited Spaces",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "billing_managed_organizations": {
          "description": "The billing Managed Organizations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "managed_organizations": {
          "description": "The managed Organizations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "managed_spaces": {
          "description": "The managed Spaces",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "organizations": {
          "description": "The organizations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "spaces": {
          "description": "The spaces",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        }
      }
    },
    "getUserSummaryResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/getUserSummaryResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "gettingContentsOfRunningEnvironmentVariableGroupResponse": {
      "properties": {
        "abc": {
          "description": "The abc",
          "type": "integer"
        },
        "do-re-me": {
          "description": "The doreme",
          "type": "string"
        }
      }
    },
    "gettingContentsOfRunningEnvironmentVariableGroupResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/gettingContentsOfRunningEnvironmentVariableGroupResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "gettingContentsOfStagingEnvironmentVariableGroupResponse": {
      "properties": {
        "abc": {
          "description": "The abc",
          "type": "integer"
        },
        "do-re-me": {
          "description": "The doreme",
          "type": "string"
        }
      }
    },
    "gettingContentsOfStagingEnvironmentVariableGroupResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/gettingContentsOfStagingEnvironmentVariableGroupResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllAppUsageEventsResponse": {
      "properties": {
        "app_guid": {
          "description": "The app Guid",
          "type": "string"
        },
        "app_name": {
          "description": "The app Name",
          "type": "string"
        },
        "buildpack_guid": {
          "description": "The buildpack Guid",
          "type": "string"
        },
        "buildpack_name": {
          "description": "The buildpack Name",
          "type": "string"
        },
        "instance_count": {
          "description": "The instance Count",
          "type": "integer"
        },
        "memory_in_mb_per_instance": {
          "description": "The memory In Mb Per Instance",
          "type": "integer"
        },
        "org_guid": {
          "description": "The org Guid",
          "type": "string"
        },
        "package_state": {
          "description": "The package State",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_name": {
          "description": "The space Name",
          "type": "string"
        },
        "state": {
          "description": "The state",
          "type": "string"
        }
      }
    },
    "listAllAppUsageEventsResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllAppUsageEventsResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllAppUsageEventsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllAppUsageEventsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllAppsForRouteResponse": {
      "properties": {
        "buildpack": {
          "description": "The buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "command": {
          "description": "The command",
          "$ref": "#/definitions/genericObject"
        },
        "console": {
          "description": "The console",
          "type": "boolean"
        },
        "debug": {
          "description": "The debug",
          "$ref": "#/definitions/genericObject"
        },
        "detected_buildpack": {
          "description": "The detected Buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "detected_start_command": {
          "description": "The detected Start Command",
          "type": "string"
        },
        "disk_quota": {
          "description": "The disk Quota",
          "type": "integer"
        },
        "docker_image": {
          "description": "The docker Image",
          "$ref": "#/definitions/genericObject"
        },
        "environment_json": {
          "description": "The environment Json",
          "$ref": "#/definitions/genericObject"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "health_check_timeout": {
          "description": "The health Check Timeout",
          "$ref": "#/definitions/genericObject"
        },
        "health_check_type": {
          "description": "The health Check Type",
          "type": "string"
        },
        "instances": {
          "description": "The instances",
          "type": "integer"
        },
        "memory": {
          "description": "The memory",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "package_state": {
          "description": "The package State",
          "type": "string"
        },
        "package_updated_at": {
          "description": "The package Updated At",
          "type": "string"
        },
        "production": {
          "description": "The production",
          "type": "boolean"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "service_bindings_url": {
          "description": "The service Bindings Url",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        },
        "stack_guid": {
          "description": "The stack Guid",
          "type": "string"
        },
        "stack_url": {
          "description": "The stack Url",
          "type": "string"
        },
        "staging_failed_reason": {
          "description": "The staging Failed Reason",
          "$ref": "#/definitions/genericObject"
        },
        "staging_task_id": {
          "description": "The staging Task Id",
          "$ref": "#/definitions/genericObject"
        },
        "state": {
          "description": "The state",
          "type": "string"
        },
        "version": {
          "description": "The version",
          "type": "string"
        }
      }
    },
    "listAllAppsForRouteResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllAppsForRouteResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllAppsForRouteResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllAppsForRouteResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllAppsForSpaceResponse": {
      "properties": {
        "buildpack": {
          "description": "The buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "command": {
          "description": "The command",
          "$ref": "#/definitions/genericObject"
        },
        "console": {
          "description": "The console",
          "type": "boolean"
        },
        "debug": {
          "description": "The debug",
          "$ref": "#/definitions/genericObject"
        },
        "detected_buildpack": {
          "description": "The detected Buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "detected_start_command": {
          "description": "The detected Start Command",
          "type": "string"
        },
        "disk_quota": {
          "description": "The disk Quota",
          "type": "integer"
        },
        "docker_image": {
          "description": "The docker Image",
          "$ref": "#/definitions/genericObject"
        },
        "environment_json": {
          "description": "The environment Json",
          "$ref": "#/definitions/genericObject"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "health_check_timeout": {
          "description": "The health Check Timeout",
          "$ref": "#/definitions/genericObject"
        },
        "health_check_type": {
          "description": "The health Check Type",
          "type": "string"
        },
        "instances": {
          "description": "The instances",
          "type": "integer"
        },
        "memory": {
          "description": "The memory",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "package_state": {
          "description": "The package State",
          "type": "string"
        },
        "package_updated_at": {
          "description": "The package Updated At",
          "type": "string"
        },
        "production": {
          "description": "The production",
          "type": "boolean"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "service_bindings_url": {
          "description": "The service Bindings Url",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        },
        "stack_guid": {
          "description": "The stack Guid",
          "type": "string"
        },
        "stack_url": {
          "description": "The stack Url",
          "type": "string"
        },
        "staging_failed_reason": {
          "description": "The staging Failed Reason",
          "$ref": "#/definitions/genericObject"
        },
        "staging_task_id": {
          "description": "The staging Task Id",
          "$ref": "#/definitions/genericObject"
        },
        "state": {
          "description": "The state",
          "type": "string"
        },
        "version": {
          "description": "The version",
          "type": "string"
        }
      }
    },
    "listAllAppsForSpaceResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllAppsForSpaceResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllAppsForSpaceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllAppsForSpaceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllAppsResponse": {
      "properties": {
        "buildpack": {
          "description": "The buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "command": {
          "description": "The command",
          "$ref": "#/definitions/genericObject"
        },
        "console": {
          "description": "The console",
          "type": "boolean"
        },
        "debug": {
          "description": "The debug",
          "$ref": "#/definitions/genericObject"
        },
        "detected_buildpack": {
          "description": "The detected Buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "detected_start_command": {
          "description": "The detected Start Command",
          "type": "string"
        },
        "disk_quota": {
          "description": "The disk Quota",
          "type": "integer"
        },
        "docker_image": {
          "description": "The docker Image",
          "$ref": "#/definitions/genericObject"
        },
        "environment_json": {
          "description": "The environment Json",
          "$ref": "#/definitions/genericObject"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "health_check_timeout": {
          "description": "The health Check Timeout",
          "$ref": "#/definitions/genericObject"
        },
        "health_check_type": {
          "description": "The health Check Type",
          "type": "string"
        },
        "instances": {
          "description": "The instances",
          "type": "integer"
        },
        "memory": {
          "description": "The memory",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "package_state": {
          "description": "The package State",
          "type": "string"
        },
        "package_updated_at": {
          "description": "The package Updated At",
          "type": "string"
        },
        "production": {
          "description": "The production",
          "type": "boolean"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "service_bindings_url": {
          "description": "The service Bindings Url",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        },
        "stack_guid": {
          "description": "The stack Guid",
          "type": "string"
        },
        "stack_url": {
          "description": "The stack Url",
          "type": "string"
        },
        "staging_failed_reason": {
          "description": "The staging Failed Reason",
          "$ref": "#/definitions/genericObject"
        },
        "staging_task_id": {
          "description": "The staging Task Id",
          "$ref": "#/definitions/genericObject"
        },
        "state": {
          "description": "The state",
          "type": "string"
        },
        "version": {
          "description": "The version",
          "type": "string"
        }
      }
    },
    "listAllAppsResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllAppsResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllAppsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllAppsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllAuditedOrganizationsForUserResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "billing_enabled": {
          "description": "The billing Enabled",
          "type": "boolean"
        },
        "billing_managers_url": {
          "description": "The billing Managers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "private_domains_url": {
          "description": "The private Domains Url",
          "type": "string"
        },
        "quota_definition_guid": {
          "description": "The quota Definition Guid",
          "type": "string"
        },
        "quota_definition_url": {
          "description": "The quota Definition Url",
          "type": "string"
        },
        "space_quota_definitions_url": {
          "description": "The space Quota Definitions Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        },
        "users_url": {
          "description": "The users Url",
          "type": "string"
        }
      }
    },
    "listAllAuditedOrganizationsForUserResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllAuditedOrganizationsForUserResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllAuditedOrganizationsForUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllAuditedOrganizationsForUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllAuditedSpacesForUserResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "developers_url": {
          "description": "The developers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "security_groups_url": {
          "description": "The security Groups Url",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "space_quota_definition_guid": {
          "description": "The space Quota Definition Guid",
          "type": "string"
        }
      }
    },
    "listAllAuditedSpacesForUserResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllAuditedSpacesForUserResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllAuditedSpacesForUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllAuditedSpacesForUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllAuditorsForOrganizationResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "listAllAuditorsForOrganizationResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllAuditorsForOrganizationResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllAuditorsForOrganizationResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllAuditorsForOrganizationResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllAuditorsForSpaceResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "listAllAuditorsForSpaceResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllAuditorsForSpaceResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllAuditorsForSpaceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllAuditorsForSpaceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllBillingManagedOrganizationsForUserResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "billing_enabled": {
          "description": "The billing Enabled",
          "type": "boolean"
        },
        "billing_managers_url": {
          "description": "The billing Managers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "private_domains_url": {
          "description": "The private Domains Url",
          "type": "string"
        },
        "quota_definition_guid": {
          "description": "The quota Definition Guid",
          "type": "string"
        },
        "quota_definition_url": {
          "description": "The quota Definition Url",
          "type": "string"
        },
        "space_quota_definitions_url": {
          "description": "The space Quota Definitions Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        },
        "users_url": {
          "description": "The users Url",
          "type": "string"
        }
      }
    },
    "listAllBillingManagedOrganizationsForUserResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllBillingManagedOrganizationsForUserResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllBillingManagedOrganizationsForUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllBillingManagedOrganizationsForUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllBillingManagersForOrganizationResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "listAllBillingManagersForOrganizationResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllBillingManagersForOrganizationResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllBillingManagersForOrganizationResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllBillingManagersForOrganizationResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllBuildpacksResponse": {
      "properties": {
        "enabled": {
          "description": "The enabled",
          "type": "boolean"
        },
        "filename": {
          "description": "The filename",
          "type": "string"
        },
        "locked": {
          "description": "The locked",
          "type": "boolean"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "position": {
          "description": "The position",
          "type": "integer"
        }
      }
    },
    "listAllBuildpacksResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllBuildpacksResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllBuildpacksResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllBuildpacksResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllDevelopersForSpaceResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "listAllDevelopersForSpaceResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllDevelopersForSpaceResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllDevelopersForSpaceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllDevelopersForSpaceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllDomainsDeprecatedResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        },
        "owning_organization_guid": {
          "description": "The owning Organization Guid",
          "type": "string"
        },
        "owning_organization_url": {
          "description": "The owning Organization Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "listAllDomainsDeprecatedResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllDomainsDeprecatedResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllDomainsDeprecatedResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllDomainsDeprecatedResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllDomainsForOrganizationDeprecatedResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        }
      }
    },
    "listAllDomainsForOrganizationDeprecatedResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllDomainsForOrganizationDeprecatedResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllDomainsForOrganizationDeprecatedResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllDomainsForOrganizationDeprecatedResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllDomainsForSpaceDeprecatedResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        }
      }
    },
    "listAllDomainsForSpaceDeprecatedResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllDomainsForSpaceDeprecatedResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllDomainsForSpaceDeprecatedResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllDomainsForSpaceDeprecatedResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllEventsForSpaceResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listAllEventsForSpaceResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllEventsForSpaceResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllEventsForSpaceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllEventsForSpaceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllEventsResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listAllEventsResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllEventsResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllEventsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllEventsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllManagedOrganizationsForUserResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "billing_enabled": {
          "description": "The billing Enabled",
          "type": "boolean"
        },
        "billing_managers_url": {
          "description": "The billing Managers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "private_domains_url": {
          "description": "The private Domains Url",
          "type": "string"
        },
        "quota_definition_guid": {
          "description": "The quota Definition Guid",
          "type": "string"
        },
        "quota_definition_url": {
          "description": "The quota Definition Url",
          "type": "string"
        },
        "space_quota_definitions_url": {
          "description": "The space Quota Definitions Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        },
        "users_url": {
          "description": "The users Url",
          "type": "string"
        }
      }
    },
    "listAllManagedOrganizationsForUserResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllManagedOrganizationsForUserResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllManagedOrganizationsForUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllManagedOrganizationsForUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllManagedSpacesForUserResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "developers_url": {
          "description": "The developers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "security_groups_url": {
          "description": "The security Groups Url",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "space_quota_definition_guid": {
          "description": "The space Quota Definition Guid",
          "type": "string"
        }
      }
    },
    "listAllManagedSpacesForUserResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllManagedSpacesForUserResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllManagedSpacesForUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllManagedSpacesForUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllManagersForOrganizationResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "listAllManagersForOrganizationResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllManagersForOrganizationResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllManagersForOrganizationResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllManagersForOrganizationResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllManagersForSpaceResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "listAllManagersForSpaceResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllManagersForSpaceResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllManagersForSpaceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllManagersForSpaceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllMatchingResourcesRequest": {
      "properties": {
        "sha1": {
          "description": "The sha1",
          "type": "string"
        },
        "size": {
          "description": "The size",
          "type": "integer"
        }
      }
    },
    "listAllMatchingResourcesResponse": {
      "properties": {
        "sha1": {
          "description": "The sha1",
          "type": "string"
        },
        "size": {
          "description": "The size",
          "type": "integer"
        }
      }
    },
    "listAllMatchingResourcesResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllMatchingResourcesResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllOrganizationQuotaDefinitionsResponse": {
      "properties": {
        "instance_memory_limit": {
          "description": "The instance Memory Limit",
          "type": "integer"
        },
        "memory_limit": {
          "description": "The memory Limit",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "non_basic_services_allowed": {
          "description": "The non Basic Services Allowed",
          "type": "boolean"
        },
        "total_routes": {
          "description": "The total Routes",
          "type": "integer"
        },
        "total_services": {
          "description": "The total Services",
          "type": "integer"
        },
        "trial_db_allowed": {
          "description": "The trial Db Allowed",
          "type": "boolean"
        }
      }
    },
    "listAllOrganizationQuotaDefinitionsResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllOrganizationQuotaDefinitionsResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllOrganizationQuotaDefinitionsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllOrganizationQuotaDefinitionsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllOrganizationsForUserResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "billing_enabled": {
          "description": "The billing Enabled",
          "type": "boolean"
        },
        "billing_managers_url": {
          "description": "The billing Managers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "private_domains_url": {
          "description": "The private Domains Url",
          "type": "string"
        },
        "quota_definition_guid": {
          "description": "The quota Definition Guid",
          "type": "string"
        },
        "quota_definition_url": {
          "description": "The quota Definition Url",
          "type": "string"
        },
        "space_quota_definitions_url": {
          "description": "The space Quota Definitions Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        },
        "users_url": {
          "description": "The users Url",
          "type": "string"
        }
      }
    },
    "listAllOrganizationsForUserResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllOrganizationsForUserResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllOrganizationsForUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllOrganizationsForUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllOrganizationsResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "billing_enabled": {
          "description": "The billing Enabled",
          "type": "boolean"
        },
        "billing_managers_url": {
          "description": "The billing Managers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "private_domains_url": {
          "description": "The private Domains Url",
          "type": "string"
        },
        "quota_definition_guid": {
          "description": "The quota Definition Guid",
          "type": "string"
        },
        "quota_definition_url": {
          "description": "The quota Definition Url",
          "type": "string"
        },
        "space_quota_definitions_url": {
          "description": "The space Quota Definitions Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        },
        "users_url": {
          "description": "The users Url",
          "type": "string"
        }
      }
    },
    "listAllOrganizationsResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllOrganizationsResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllOrganizationsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllOrganizationsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllPrivateDomainsForOrganizationResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        },
        "owning_organization_guid": {
          "description": "The owning Organization Guid",
          "type": "string"
        },
        "owning_organization_url": {
          "description": "The owning Organization Url",
          "type": "string"
        }
      }
    },
    "listAllPrivateDomainsForOrganizationResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllPrivateDomainsForOrganizationResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllPrivateDomainsForOrganizationResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllPrivateDomainsForOrganizationResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllPrivateDomainsResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        },
        "owning_organization_guid": {
          "description": "The owning Organization Guid",
          "type": "string"
        },
        "owning_organization_url": {
          "description": "The owning Organization Url",
          "type": "string"
        }
      }
    },
    "listAllPrivateDomainsResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllPrivateDomainsResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllPrivateDomainsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllPrivateDomainsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllRoutesForAppResponse": {
      "properties": {
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "domain_guid": {
          "description": "The domain Guid",
          "type": "string"
        },
        "domain_url": {
          "description": "The domain Url",
          "type": "string"
        },
        "host": {
          "description": "The host",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        }
      }
    },
    "listAllRoutesForAppResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllRoutesForAppResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllRoutesForAppResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllRoutesForAppResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllRoutesForSpaceResponse": {
      "properties": {
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "domain_guid": {
          "description": "The domain Guid",
          "type": "string"
        },
        "domain_url": {
          "description": "The domain Url",
          "type": "string"
        },
        "host": {
          "description": "The host",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        }
      }
    },
    "listAllRoutesForSpaceResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllRoutesForSpaceResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllRoutesForSpaceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllRoutesForSpaceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllRoutesResponse": {
      "properties": {
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "domain_guid": {
          "description": "The domain Guid",
          "type": "string"
        },
        "domain_url": {
          "description": "The domain Url",
          "type": "string"
        },
        "host": {
          "description": "The host",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        }
      }
    },
    "listAllRoutesResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllRoutesResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllRoutesResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllRoutesResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllSecurityGroupsForSpaceResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        },
        "rules": {
          "description": "The rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "running_default": {
          "description": "The running Default",
          "type": "boolean"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "staging_default": {
          "description": "The staging Default",
          "type": "boolean"
        }
      }
    },
    "listAllSecurityGroupsForSpaceResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllSecurityGroupsForSpaceResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllSecurityGroupsForSpaceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllSecurityGroupsForSpaceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllSecurityGroupsResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        },
        "rules": {
          "description": "The rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "running_default": {
          "description": "The running Default",
          "type": "boolean"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "staging_default": {
          "description": "The staging Default",
          "type": "boolean"
        }
      }
    },
    "listAllSecurityGroupsResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllSecurityGroupsResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllSecurityGroupsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllSecurityGroupsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllServiceAuthTokensDeprecatedResponse": {
      "properties": {
        "label": {
          "description": "The label",
          "type": "string"
        },
        "provider": {
          "description": "The provider",
          "type": "string"
        }
      }
    },
    "listAllServiceAuthTokensDeprecatedResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllServiceAuthTokensDeprecatedResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllServiceAuthTokensDeprecatedResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllServiceAuthTokensDeprecatedResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllServiceBindingsForAppResponse": {
      "properties": {
        "app_guid": {
          "description": "The app Guid",
          "type": "string"
        },
        "app_url": {
          "description": "The app Url",
          "type": "string"
        },
        "binding_options": {
          "description": "The binding Options",
          "$ref": "#/definitions/genericObject"
        },
        "credentials": {
          "description": "The credentials",
          "$ref": "#/definitions/genericObject"
        },
        "gateway_data": {
          "description": "The gateway Data",
          "$ref": "#/definitions/genericObject"
        },
        "gateway_name": {
          "description": "The gateway Name",
          "type": "string"
        },
        "service_instance_guid": {
          "description": "The service Instance Guid",
          "type": "string"
        },
        "service_instance_url": {
          "description": "The service Instance Url",
          "type": "string"
        },
        "syslog_drain_url": {
          "description": "The syslog Drain Url",
          "$ref": "#/definitions/genericObject"
        }
      }
    },
    "listAllServiceBindingsForAppResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllServiceBindingsForAppResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllServiceBindingsForAppResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllServiceBindingsForAppResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllServiceBindingsForServiceInstanceResponse": {
      "properties": {
        "app_guid": {
          "description": "The app Guid",
          "type": "string"
        },
        "app_url": {
          "description": "The app Url",
          "type": "string"
        },
        "binding_options": {
          "description": "The binding Options",
          "$ref": "#/definitions/genericObject"
        },
        "credentials": {
          "description": "The credentials",
          "$ref": "#/definitions/genericObject"
        },
        "gateway_data": {
          "description": "The gateway Data",
          "$ref": "#/definitions/genericObject"
        },
        "gateway_name": {
          "description": "The gateway Name",
          "type": "string"
        },
        "service_instance_guid": {
          "description": "The service Instance Guid",
          "type": "string"
        },
        "service_instance_url": {
          "description": "The service Instance Url",
          "type": "string"
        },
        "syslog_drain_url": {
          "description": "The syslog Drain Url",
          "$ref": "#/definitions/genericObject"
        }
      }
    },
    "listAllServiceBindingsForServiceInstanceResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllServiceBindingsForServiceInstanceResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllServiceBindingsForServiceInstanceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllServiceBindingsForServiceInstanceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllServiceBindingsForUserProvidedServiceInstanceResponse": {
      "properties": {
        "app_guid": {
          "description": "The app Guid",
          "type": "string"
        },
        "app_url": {
          "description": "The app Url",
          "type": "string"
        },
        "binding_options": {
          "description": "The binding Options",
          "$ref": "#/definitions/genericObject"
        },
        "credentials": {
          "description": "The credentials",
          "$ref": "#/definitions/genericObject"
        },
        "gateway_data": {
          "description": "The gateway Data",
          "$ref": "#/definitions/genericObject"
        },
        "gateway_name": {
          "description": "The gateway Name",
          "type": "string"
        },
        "service_instance_guid": {
          "description": "The service Instance Guid",
          "type": "string"
        },
        "service_instance_url": {
          "description": "The service Instance Url",
          "type": "string"
        },
        "syslog_drain_url": {
          "description": "The syslog Drain Url",
          "$ref": "#/definitions/genericObject"
        }
      }
    },
    "listAllServiceBindingsForUserProvidedServiceInstanceResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllServiceBindingsForUserProvidedServiceInstanceResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllServiceBindingsForUserProvidedServiceInstanceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllServiceBindingsForUserProvidedServiceInstanceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllServiceBindingsResponse": {
      "properties": {
        "app_guid": {
          "description": "The app Guid",
          "type": "string"
        },
        "app_url": {
          "description": "The app Url",
          "type": "string"
        },
        "binding_options": {
          "description": "The binding Options",
          "$ref": "#/definitions/genericObject"
        },
        "credentials": {
          "description": "The credentials",
          "$ref": "#/definitions/genericObject"
        },
        "gateway_data": {
          "description": "The gateway Data",
          "$ref": "#/definitions/genericObject"
        },
        "gateway_name": {
          "description": "The gateway Name",
          "type": "string"
        },
        "service_instance_guid": {
          "description": "The service Instance Guid",
          "type": "string"
        },
        "service_instance_url": {
          "description": "The service Instance Url",
          "type": "string"
        },
        "syslog_drain_url": {
          "description": "The syslog Drain Url",
          "$ref": "#/definitions/genericObject"
        }
      }
    },
    "listAllServiceBindingsResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllServiceBindingsResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllServiceBindingsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllServiceBindingsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllServiceBrokersResponse": {
      "properties": {
        "auth_username": {
          "description": "The auth Username",
          "type": "string"
        },
        "broker_url": {
          "description": "The broker Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        }
      }
    },
    "listAllServiceBrokersResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllServiceBrokersResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllServiceBrokersResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllServiceBrokersResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllServiceInstancesForServicePlanResponse": {
      "properties": {
        "credentials": {
          "description": "The credentials",
          "$ref": "#/definitions/genericObject"
        },
        "dashboard_url": {
          "description": "The dashboard Url",
          "$ref": "#/definitions/genericObject"
        },
        "gateway_data": {
          "description": "The gateway Data",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "service_bindings_url": {
          "description": "The service Bindings Url",
          "type": "string"
        },
        "service_plan_guid": {
          "description": "The service Plan Guid",
          "type": "string"
        },
        "service_plan_url": {
          "description": "The service Plan Url",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listAllServiceInstancesForServicePlanResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllServiceInstancesForServicePlanResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllServiceInstancesForServicePlanResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllServiceInstancesForServicePlanResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllServiceInstancesForSpaceResponse": {
      "properties": {
        "credentials": {
          "description": "The credentials",
          "$ref": "#/definitions/genericObject"
        },
        "dashboard_url": {
          "description": "The dashboard Url",
          "$ref": "#/definitions/genericObject"
        },
        "gateway_data": {
          "description": "The gateway Data",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "service_bindings_url": {
          "description": "The service Bindings Url",
          "type": "string"
        },
        "service_plan_guid": {
          "description": "The service Plan Guid",
          "type": "string"
        },
        "service_plan_url": {
          "description": "The service Plan Url",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listAllServiceInstancesForSpaceResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllServiceInstancesForSpaceResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllServiceInstancesForSpaceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllServiceInstancesForSpaceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllServiceInstancesResponse": {
      "properties": {
        "credentials": {
          "description": "The credentials",
          "$ref": "#/definitions/genericObject"
        },
        "dashboard_url": {
          "description": "The dashboard Url",
          "$ref": "#/definitions/genericObject"
        },
        "gateway_data": {
          "description": "The gateway Data",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "service_bindings_url": {
          "description": "The service Bindings Url",
          "type": "string"
        },
        "service_plan_guid": {
          "description": "The service Plan Guid",
          "type": "string"
        },
        "service_plan_url": {
          "description": "The service Plan Url",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listAllServiceInstancesResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllServiceInstancesResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllServiceInstancesResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllServiceInstancesResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllServicePlanVisibilitiesResponse": {
      "properties": {
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "service_plan_guid": {
          "description": "The service Plan Guid",
          "type": "string"
        },
        "service_plan_url": {
          "description": "The service Plan Url",
          "type": "string"
        }
      }
    },
    "listAllServicePlanVisibilitiesResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllServicePlanVisibilitiesResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllServicePlanVisibilitiesResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllServicePlanVisibilitiesResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllServicePlansForServiceResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "description": {
          "description": "The description",
          "type": "string"
        },
        "extra": {
          "description": "The extra",
          "$ref": "#/definitions/genericObject"
        },
        "free": {
          "description": "The free",
          "type": "boolean"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "public": {
          "description": "The public",
          "type": "boolean"
        },
        "service_guid": {
          "description": "The service Guid",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "service_url": {
          "description": "The service Url",
          "type": "string"
        },
        "unique_id": {
          "description": "The unique Id",
          "type": "string"
        }
      }
    },
    "listAllServicePlansForServiceResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllServicePlansForServiceResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllServicePlansForServiceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllServicePlansForServiceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllServicePlansResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "description": {
          "description": "The description",
          "type": "string"
        },
        "extra": {
          "description": "The extra",
          "$ref": "#/definitions/genericObject"
        },
        "free": {
          "description": "The free",
          "type": "boolean"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "public": {
          "description": "The public",
          "type": "boolean"
        },
        "service_guid": {
          "description": "The service Guid",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "service_url": {
          "description": "The service Url",
          "type": "string"
        },
        "unique_id": {
          "description": "The unique Id",
          "type": "string"
        }
      }
    },
    "listAllServicePlansResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllServicePlansResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllServicePlansResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllServicePlansResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllServicesForOrganizationResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "bindable": {
          "description": "The bindable",
          "type": "boolean"
        },
        "description": {
          "description": "The description",
          "type": "string"
        },
        "documentation_url": {
          "description": "The documentation Url",
          "$ref": "#/definitions/genericObject"
        },
        "extra": {
          "description": "The extra",
          "$ref": "#/definitions/genericObject"
        },
        "info_url": {
          "description": "The info Url",
          "$ref": "#/definitions/genericObject"
        },
        "label": {
          "description": "The label",
          "type": "string"
        },
        "long_description": {
          "description": "The long Description",
          "$ref": "#/definitions/genericObject"
        },
        "plan_updateable": {
          "description": "The plan Updateable",
          "type": "boolean"
        },
        "provider": {
          "description": "The provider",
          "type": "string"
        },
        "requires": {
          "description": "The requires",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "service_broker_guid": {
          "description": "The service Broker Guid",
          "type": "string"
        },
        "service_plans_url": {
          "description": "The service Plans Url",
          "type": "string"
        },
        "tags": {
          "description": "The tags",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "unique_id": {
          "description": "The unique Id",
          "type": "string"
        },
        "url": {
          "description": "The url",
          "type": "string"
        },
        "version": {
          "description": "The version",
          "type": "string"
        }
      }
    },
    "listAllServicesForOrganizationResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllServicesForOrganizationResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllServicesForOrganizationResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllServicesForOrganizationResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllServicesForSpaceResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "bindable": {
          "description": "The bindable",
          "type": "boolean"
        },
        "description": {
          "description": "The description",
          "type": "string"
        },
        "documentation_url": {
          "description": "The documentation Url",
          "$ref": "#/definitions/genericObject"
        },
        "extra": {
          "description": "The extra",
          "$ref": "#/definitions/genericObject"
        },
        "info_url": {
          "description": "The info Url",
          "$ref": "#/definitions/genericObject"
        },
        "label": {
          "description": "The label",
          "type": "string"
        },
        "long_description": {
          "description": "The long Description",
          "$ref": "#/definitions/genericObject"
        },
        "plan_updateable": {
          "description": "The plan Updateable",
          "type": "boolean"
        },
        "provider": {
          "description": "The provider",
          "type": "string"
        },
        "requires": {
          "description": "The requires",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "service_broker_guid": {
          "description": "The service Broker Guid",
          "type": "string"
        },
        "service_plans_url": {
          "description": "The service Plans Url",
          "type": "string"
        },
        "tags": {
          "description": "The tags",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "unique_id": {
          "description": "The unique Id",
          "type": "string"
        },
        "url": {
          "description": "The url",
          "type": "string"
        },
        "version": {
          "description": "The version",
          "type": "string"
        }
      }
    },
    "listAllServicesForSpaceResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllServicesForSpaceResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllServicesForSpaceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllServicesForSpaceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllServicesResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "bindable": {
          "description": "The bindable",
          "type": "boolean"
        },
        "description": {
          "description": "The description",
          "type": "string"
        },
        "documentation_url": {
          "description": "The documentation Url",
          "$ref": "#/definitions/genericObject"
        },
        "extra": {
          "description": "The extra",
          "$ref": "#/definitions/genericObject"
        },
        "info_url": {
          "description": "The info Url",
          "$ref": "#/definitions/genericObject"
        },
        "label": {
          "description": "The label",
          "type": "string"
        },
        "long_description": {
          "description": "The long Description",
          "$ref": "#/definitions/genericObject"
        },
        "plan_updateable": {
          "description": "The plan Updateable",
          "type": "boolean"
        },
        "provider": {
          "description": "The provider",
          "type": "string"
        },
        "requires": {
          "description": "The requires",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "service_broker_guid": {
          "description": "The service Broker Guid",
          "type": "string"
        },
        "service_plans_url": {
          "description": "The service Plans Url",
          "type": "string"
        },
        "tags": {
          "description": "The tags",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "unique_id": {
          "description": "The unique Id",
          "type": "string"
        },
        "url": {
          "description": "The url",
          "type": "string"
        },
        "version": {
          "description": "The version",
          "type": "string"
        }
      }
    },
    "listAllServicesResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllServicesResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllServicesResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllServicesResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllSharedDomainsResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        }
      }
    },
    "listAllSharedDomainsResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllSharedDomainsResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllSharedDomainsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllSharedDomainsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllSpaceQuotaDefinitionsForOrganizationResponse": {
      "properties": {
        "instance_memory_limit": {
          "description": "The instance Memory Limit",
          "type": "integer"
        },
        "memory_limit": {
          "description": "The memory Limit",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "non_basic_services_allowed": {
          "description": "The non Basic Services Allowed",
          "type": "boolean"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "total_routes": {
          "description": "The total Routes",
          "type": "integer"
        },
        "total_services": {
          "description": "The total Services",
          "type": "integer"
        }
      }
    },
    "listAllSpaceQuotaDefinitionsForOrganizationResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllSpaceQuotaDefinitionsForOrganizationResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllSpaceQuotaDefinitionsForOrganizationResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllSpaceQuotaDefinitionsForOrganizationResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllSpaceQuotaDefinitionsResponse": {
      "properties": {
        "instance_memory_limit": {
          "description": "The instance Memory Limit",
          "type": "integer"
        },
        "memory_limit": {
          "description": "The memory Limit",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "non_basic_services_allowed": {
          "description": "The non Basic Services Allowed",
          "type": "boolean"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "total_routes": {
          "description": "The total Routes",
          "type": "integer"
        },
        "total_services": {
          "description": "The total Services",
          "type": "integer"
        }
      }
    },
    "listAllSpaceQuotaDefinitionsResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllSpaceQuotaDefinitionsResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllSpaceQuotaDefinitionsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllSpaceQuotaDefinitionsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllSpacesForDomainDeprecatedResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "developers_url": {
          "description": "The developers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "security_groups_url": {
          "description": "The security Groups Url",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "space_quota_definition_guid": {
          "description": "The space Quota Definition Guid",
          "type": "string"
        }
      }
    },
    "listAllSpacesForDomainDeprecatedResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllSpacesForDomainDeprecatedResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllSpacesForDomainDeprecatedResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllSpacesForDomainDeprecatedResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllSpacesForOrganizationResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "developers_url": {
          "description": "The developers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "security_groups_url": {
          "description": "The security Groups Url",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "space_quota_definition_guid": {
          "description": "The space Quota Definition Guid",
          "type": "string"
        }
      }
    },
    "listAllSpacesForOrganizationResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllSpacesForOrganizationResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllSpacesForOrganizationResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllSpacesForOrganizationResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllSpacesForSecurityGroupResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "developers_url": {
          "description": "The developers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "security_groups_url": {
          "description": "The security Groups Url",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "space_quota_definition_guid": {
          "description": "The space Quota Definition Guid",
          "type": "string"
        }
      }
    },
    "listAllSpacesForSecurityGroupResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllSpacesForSecurityGroupResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllSpacesForSecurityGroupResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllSpacesForSecurityGroupResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllSpacesForSpaceQuotaDefinitionResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "developers_url": {
          "description": "The developers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "security_groups_url": {
          "description": "The security Groups Url",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "space_quota_definition_guid": {
          "description": "The space Quota Definition Guid",
          "type": "string"
        },
        "space_quota_definition_url": {
          "description": "The space Quota Definition Url",
          "type": "string"
        }
      }
    },
    "listAllSpacesForSpaceQuotaDefinitionResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllSpacesForSpaceQuotaDefinitionResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllSpacesForSpaceQuotaDefinitionResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllSpacesForSpaceQuotaDefinitionResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllSpacesForUserResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "developers_url": {
          "description": "The developers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "security_groups_url": {
          "description": "The security Groups Url",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "space_quota_definition_guid": {
          "description": "The space Quota Definition Guid",
          "type": "string"
        }
      }
    },
    "listAllSpacesForUserResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllSpacesForUserResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllSpacesForUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllSpacesForUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllSpacesResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "developers_url": {
          "description": "The developers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "security_groups_url": {
          "description": "The security Groups Url",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "space_quota_definition_guid": {
          "description": "The space Quota Definition Guid",
          "type": "string"
        }
      }
    },
    "listAllSpacesResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllSpacesResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllSpacesResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllSpacesResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllStacksResponse": {
      "properties": {
        "description": {
          "description": "The description",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        }
      }
    },
    "listAllStacksResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllStacksResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllStacksResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllStacksResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllUserProvidedServiceInstancesResponse": {
      "properties": {
        "credentials": {
          "description": "The credentials",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "service_bindings_url": {
          "description": "The service Bindings Url",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        },
        "syslog_drain_url": {
          "description": "The syslog Drain Url",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listAllUserProvidedServiceInstancesResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllUserProvidedServiceInstancesResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllUserProvidedServiceInstancesResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllUserProvidedServiceInstancesResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllUsersForOrganizationResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "listAllUsersForOrganizationResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllUsersForOrganizationResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllUsersForOrganizationResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllUsersForOrganizationResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllUsersResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "default_space_url": {
          "description": "The default Space Url",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "listAllUsersResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllUsersResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllUsersResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllUsersResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAppCreateEventsResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listAppCreateEventsResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAppCreateEventsResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAppCreateEventsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAppCreateEventsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAppDeleteEventsResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listAppDeleteEventsResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAppDeleteEventsResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAppDeleteEventsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAppDeleteEventsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAppExitedEventsResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listAppExitedEventsResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAppExitedEventsResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAppExitedEventsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAppExitedEventsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAppUpdateEventsResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listAppUpdateEventsResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAppUpdateEventsResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAppUpdateEventsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAppUpdateEventsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listEventsAssociatedWithAppSinceJanuary12014Response": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listEventsAssociatedWithAppSinceJanuary12014ResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listEventsAssociatedWithAppSinceJanuary12014ResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listEventsAssociatedWithAppSinceJanuary12014ResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listEventsAssociatedWithAppSinceJanuary12014Response"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listServiceBindingCreateEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listServiceBindingCreateEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listServiceBindingCreateEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listServiceBindingCreateEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listServiceBindingCreateEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listServiceBindingDeleteEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listServiceBindingDeleteEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listServiceBindingDeleteEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listServiceBindingDeleteEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listServiceBindingDeleteEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listServiceBrokerCreateEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listServiceBrokerCreateEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listServiceBrokerCreateEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listServiceBrokerCreateEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listServiceBrokerCreateEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listServiceBrokerDeleteEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listServiceBrokerDeleteEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listServiceBrokerDeleteEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listServiceBrokerDeleteEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listServiceBrokerDeleteEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listServiceBrokerUpdateEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listServiceBrokerUpdateEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listServiceBrokerUpdateEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listServiceBrokerUpdateEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listServiceBrokerUpdateEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listServiceCreateEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listServiceCreateEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listServiceCreateEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listServiceCreateEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listServiceCreateEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listServiceDashboardClientCreateEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listServiceDashboardClientCreateEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listServiceDashboardClientCreateEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listServiceDashboardClientCreateEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listServiceDashboardClientCreateEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listServiceDashboardClientDeleteEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listServiceDashboardClientDeleteEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listServiceDashboardClientDeleteEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listServiceDashboardClientDeleteEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listServiceDashboardClientDeleteEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listServiceDeleteEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listServiceDeleteEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listServiceDeleteEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listServiceDeleteEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listServiceDeleteEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listServiceInstanceCreateEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listServiceInstanceCreateEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listServiceInstanceCreateEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listServiceInstanceCreateEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listServiceInstanceCreateEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listServiceInstanceDeleteEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listServiceInstanceDeleteEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listServiceInstanceDeleteEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listServiceInstanceDeleteEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listServiceInstanceDeleteEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listServiceInstanceUpdateEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listServiceInstanceUpdateEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listServiceInstanceUpdateEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listServiceInstanceUpdateEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listServiceInstanceUpdateEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listServicePlanCreateEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listServicePlanCreateEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listServicePlanCreateEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listServicePlanCreateEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listServicePlanCreateEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listServicePlanDeleteEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listServicePlanDeleteEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listServicePlanDeleteEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listServicePlanDeleteEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listServicePlanDeleteEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listServicePlanUpdateEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listServicePlanUpdateEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listServicePlanUpdateEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listServicePlanUpdateEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listServicePlanUpdateEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listServicePlanVisibilityCreateEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listServicePlanVisibilityCreateEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listServicePlanVisibilityCreateEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listServicePlanVisibilityCreateEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listServicePlanVisibilityCreateEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listServicePlanVisibilityDeleteEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listServicePlanVisibilityDeleteEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listServicePlanVisibilityDeleteEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listServicePlanVisibilityDeleteEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listServicePlanVisibilityDeleteEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listServicePlanVisibilityUpdateEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listServicePlanVisibilityUpdateEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listServicePlanVisibilityUpdateEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listServicePlanVisibilityUpdateEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listServicePlanVisibilityUpdateEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listServiceUpdateEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listServiceUpdateEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listServiceUpdateEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listServiceUpdateEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listServiceUpdateEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listServiceUsageEventsResponse": {
      "properties": {
        "org_guid": {
          "description": "The org Guid",
          "type": "string"
        },
        "service_guid": {
          "description": "The service Guid",
          "type": "string"
        },
        "service_instance_guid": {
          "description": "The service Instance Guid",
          "type": "string"
        },
        "service_instance_name": {
          "description": "The service Instance Name",
          "type": "string"
        },
        "service_instance_type": {
          "description": "The service Instance Type",
          "type": "string"
        },
        "service_label": {
          "description": "The service Label",
          "type": "string"
        },
        "service_plan_guid": {
          "description": "The service Plan Guid",
          "type": "string"
        },
        "service_plan_name": {
          "description": "The service Plan Name",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_name": {
          "description": "The space Name",
          "type": "string"
        },
        "state": {
          "description": "The state",
          "type": "string"
        }
      }
    },
    "listServiceUsageEventsResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listServiceUsageEventsResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listServiceUsageEventsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listServiceUsageEventsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listSpaceCreateEventsResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listSpaceCreateEventsResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listSpaceCreateEventsResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listSpaceCreateEventsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listSpaceCreateEventsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listSpaceDeleteEventsResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listSpaceDeleteEventsResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listSpaceDeleteEventsResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listSpaceDeleteEventsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listSpaceDeleteEventsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listSpaceUpdateEventsResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listSpaceUpdateEventsResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listSpaceUpdateEventsResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listSpaceUpdateEventsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listSpaceUpdateEventsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listUserProvidedServiceInstanceCreateEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listUserProvidedServiceInstanceCreateEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listUserProvidedServiceInstanceCreateEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listUserProvidedServiceInstanceCreateEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listUserProvidedServiceInstanceCreateEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listUserProvidedServiceInstanceDeleteEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listUserProvidedServiceInstanceDeleteEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listUserProvidedServiceInstanceDeleteEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listUserProvidedServiceInstanceDeleteEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listUserProvidedServiceInstanceDeleteEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listUserProvidedServiceInstanceUpdateEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listUserProvidedServiceInstanceUpdateEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listUserProvidedServiceInstanceUpdateEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listUserProvidedServiceInstanceUpdateEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listUserProvidedServiceInstanceUpdateEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "lockOrUnlockBuildpackRequest": {
      "properties": {
        "enabled": {
          "description": "Whether or not the buildpack will be used for staging",
          "$ref": "#/definitions/genericObject"
        },
        "filename": {
          "description": "The name of the uploaded buildpack file",
          "$ref": "#/definitions/genericObject"
        },
        "locked": {
          "description": "Whether or not the buildpack is locked to prevent updates",
          "type": "boolean"
        },
        "name": {
          "description": "The name of the buildpack. To be used by app buildpack field. (only alphanumeric characters)",
          "type": "string"
        },
        "position": {
          "description": "The order in which the buildpacks are checked during buildpack auto-detection.",
          "$ref": "#/definitions/genericObject"
        }
      }
    },
    "lockOrUnlockBuildpackResponse": {
      "properties": {
        "enabled": {
          "description": "The enabled",
          "type": "boolean"
        },
        "filename": {
          "description": "The filename",
          "type": "string"
        },
        "locked": {
          "description": "The locked",
          "type": "boolean"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "position": {
          "description": "The position",
          "type": "integer"
        }
      }
    },
    "lockOrUnlockBuildpackResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/lockOrUnlockBuildpackResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "migrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalRequest": {
      "properties": {
        "service_plan_guid": {
          "description": "The guid of the plan to move the existing instances to",
          "type": "string"
        }
      }
    },
    "migrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalResponse": {
      "properties": {
        "changed_count": {
          "description": "The changed Count",
          "type": "integer"
        }
      }
    },
    "migrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/migrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "removeAppFromRouteResponse": {
      "properties": {
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "domain_guid": {
          "description": "The domain Guid",
          "type": "string"
        },
        "domain_url": {
          "description": "The domain Url",
          "type": "string"
        },
        "host": {
          "description": "The host",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        }
      }
    },
    "removeAppFromRouteResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/removeAppFromRouteResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "removeAuditedOrganizationFromUserResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "default_space_url": {
          "description": "The default Space Url",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "removeAuditedOrganizationFromUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/removeAuditedOrganizationFromUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "removeAuditedSpaceFromUserResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "default_space_url": {
          "description": "The default Space Url",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "removeAuditedSpaceFromUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/removeAuditedSpaceFromUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "removeAuditorFromOrganizationResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "billing_enabled": {
          "description": "The billing Enabled",
          "type": "boolean"
        },
        "billing_managers_url": {
          "description": "The billing Managers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "private_domains_url": {
          "description": "The private Domains Url",
          "type": "string"
        },
        "quota_definition_guid": {
          "description": "The quota Definition Guid",
          "type": "string"
        },
        "quota_definition_url": {
          "description": "The quota Definition Url",
          "type": "string"
        },
        "space_quota_definitions_url": {
          "description": "The space Quota Definitions Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        },
        "users_url": {
          "description": "The users Url",
          "type": "string"
        }
      }
    },
    "removeAuditorFromOrganizationResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/removeAuditorFromOrganizationResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "removeAuditorFromSpaceResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "developers_url": {
          "description": "The developers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "security_groups_url": {
          "description": "The security Groups Url",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "space_quota_definition_guid": {
          "description": "The space Quota Definition Guid",
          "type": "string"
        }
      }
    },
    "removeAuditorFromSpaceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/removeAuditorFromSpaceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "removeBillingManagedOrganizationFromUserResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "default_space_url": {
          "description": "The default Space Url",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "removeBillingManagedOrganizationFromUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/removeBillingManagedOrganizationFromUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "removeBillingManagerFromOrganizationResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "billing_enabled": {
          "description": "The billing Enabled",
          "type": "boolean"
        },
        "billing_managers_url": {
          "description": "The billing Managers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "private_domains_url": {
          "description": "The private Domains Url",
          "type": "string"
        },
        "quota_definition_guid": {
          "description": "The quota Definition Guid",
          "type": "string"
        },
        "quota_definition_url": {
          "description": "The quota Definition Url",
          "type": "string"
        },
        "space_quota_definitions_url": {
          "description": "The space Quota Definitions Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        },
        "users_url": {
          "description": "The users Url",
          "type": "string"
        }
      }
    },
    "removeBillingManagerFromOrganizationResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/removeBillingManagerFromOrganizationResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "removeDeveloperFromSpaceResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "developers_url": {
          "description": "The developers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "security_groups_url": {
          "description": "The security Groups Url",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "space_quota_definition_guid": {
          "description": "The space Quota Definition Guid",
          "type": "string"
        }
      }
    },
    "removeDeveloperFromSpaceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/removeDeveloperFromSpaceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "removeManagedOrganizationFromUserResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "default_space_url": {
          "description": "The default Space Url",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "removeManagedOrganizationFromUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/removeManagedOrganizationFromUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "removeManagedSpaceFromUserResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "default_space_url": {
          "description": "The default Space Url",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "removeManagedSpaceFromUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/removeManagedSpaceFromUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "removeManagerFromOrganizationResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "billing_enabled": {
          "description": "The billing Enabled",
          "type": "boolean"
        },
        "billing_managers_url": {
          "description": "The billing Managers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "private_domains_url": {
          "description": "The private Domains Url",
          "type": "string"
        },
        "quota_definition_guid": {
          "description": "The quota Definition Guid",
          "type": "string"
        },
        "quota_definition_url": {
          "description": "The quota Definition Url",
          "type": "string"
        },
        "space_quota_definitions_url": {
          "description": "The space Quota Definitions Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        },
        "users_url": {
          "description": "The users Url",
          "type": "string"
        }
      }
    },
    "removeManagerFromOrganizationResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/removeManagerFromOrganizationResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "removeManagerFromSpaceResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "developers_url": {
          "description": "The developers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "security_groups_url": {
          "description": "The security Groups Url",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "space_quota_definition_guid": {
          "description": "The space Quota Definition Guid",
          "type": "string"
        }
      }
    },
    "removeManagerFromSpaceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/removeManagerFromSpaceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "removeOrganizationFromUserResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "default_space_url": {
          "description": "The default Space Url",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "removeOrganizationFromUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/removeOrganizationFromUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "removeRouteFromAppResponse": {
      "properties": {
        "buildpack": {
          "description": "The buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "command": {
          "description": "The command",
          "$ref": "#/definitions/genericObject"
        },
        "console": {
          "description": "The console",
          "type": "boolean"
        },
        "debug": {
          "description": "The debug",
          "$ref": "#/definitions/genericObject"
        },
        "detected_buildpack": {
          "description": "The detected Buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "detected_start_command": {
          "description": "The detected Start Command",
          "type": "string"
        },
        "disk_quota": {
          "description": "The disk Quota",
          "type": "integer"
        },
        "docker_image": {
          "description": "The docker Image",
          "$ref": "#/definitions/genericObject"
        },
        "environment_json": {
          "description": "The environment Json",
          "$ref": "#/definitions/genericObject"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "health_check_timeout": {
          "description": "The health Check Timeout",
          "$ref": "#/definitions/genericObject"
        },
        "health_check_type": {
          "description": "The health Check Type",
          "type": "string"
        },
        "instances": {
          "description": "The instances",
          "type": "integer"
        },
        "memory": {
          "description": "The memory",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "package_state": {
          "description": "The package State",
          "type": "string"
        },
        "package_updated_at": {
          "description": "The package Updated At",
          "type": "string"
        },
        "production": {
          "description": "The production",
          "type": "boolean"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "service_bindings_url": {
          "description": "The service Bindings Url",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        },
        "stack_guid": {
          "description": "The stack Guid",
          "type": "string"
        },
        "stack_url": {
          "description": "The stack Url",
          "type": "string"
        },
        "staging_failed_reason": {
          "description": "The staging Failed Reason",
          "$ref": "#/definitions/genericObject"
        },
        "staging_task_id": {
          "description": "The staging Task Id",
          "$ref": "#/definitions/genericObject"
        },
        "state": {
          "description": "The state",
          "type": "string"
        },
        "version": {
          "description": "The version",
          "type": "string"
        }
      }
    },
    "removeRouteFromAppResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/removeRouteFromAppResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "removeSecurityGroupFromSpaceResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "developers_url": {
          "description": "The developers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "security_groups_url": {
          "description": "The security Groups Url",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "space_quota_definition_guid": {
          "description": "The space Quota Definition Guid",
          "type": "string"
        }
      }
    },
    "removeSecurityGroupFromSpaceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/removeSecurityGroupFromSpaceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "removeServiceBindingFromAppResponse": {
      "properties": {
        "buildpack": {
          "description": "The buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "command": {
          "description": "The command",
          "$ref": "#/definitions/genericObject"
        },
        "console": {
          "description": "The console",
          "type": "boolean"
        },
        "debug": {
          "description": "The debug",
          "$ref": "#/definitions/genericObject"
        },
        "detected_buildpack": {
          "description": "The detected Buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "detected_start_command": {
          "description": "The detected Start Command",
          "type": "string"
        },
        "disk_quota": {
          "description": "The disk Quota",
          "type": "integer"
        },
        "docker_image": {
          "description": "The docker Image",
          "$ref": "#/definitions/genericObject"
        },
        "environment_json": {
          "description": "The environment Json",
          "$ref": "#/definitions/genericObject"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "health_check_timeout": {
          "description": "The health Check Timeout",
          "$ref": "#/definitions/genericObject"
        },
        "health_check_type": {
          "description": "The health Check Type",
          "type": "string"
        },
        "instances": {
          "description": "The instances",
          "type": "integer"
        },
        "memory": {
          "description": "The memory",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "package_state": {
          "description": "The package State",
          "type": "string"
        },
        "package_updated_at": {
          "description": "The package Updated At",
          "type": "string"
        },
        "production": {
          "description": "The production",
          "type": "boolean"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "service_bindings_url": {
          "description": "The service Bindings Url",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        },
        "stack_guid": {
          "description": "The stack Guid",
          "type": "string"
        },
        "stack_url": {
          "description": "The stack Url",
          "type": "string"
        },
        "staging_failed_reason": {
          "description": "The staging Failed Reason",
          "$ref": "#/definitions/genericObject"
        },
        "staging_task_id": {
          "description": "The staging Task Id",
          "$ref": "#/definitions/genericObject"
        },
        "state": {
          "description": "The state",
          "type": "string"
        },
        "version": {
          "description": "The version",
          "type": "string"
        }
      }
    },
    "removeServiceBindingFromAppResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/removeServiceBindingFromAppResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "removeSpaceFromSecurityGroupResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        },
        "rules": {
          "description": "The rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "running_default": {
          "description": "The running Default",
          "type": "boolean"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "staging_default": {
          "description": "The staging Default",
          "type": "boolean"
        }
      }
    },
    "removeSpaceFromSecurityGroupResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/removeSpaceFromSecurityGroupResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "removeSpaceFromSpaceQuotaDefinitionResponse": {
      "properties": {
        "instance_memory_limit": {
          "description": "The instance Memory Limit",
          "type": "integer"
        },
        "memory_limit": {
          "description": "The memory Limit",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "non_basic_services_allowed": {
          "description": "The non Basic Services Allowed",
          "type": "boolean"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "total_routes": {
          "description": "The total Routes",
          "type": "integer"
        },
        "total_services": {
          "description": "The total Services",
          "type": "integer"
        }
      }
    },
    "removeSpaceFromSpaceQuotaDefinitionResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/removeSpaceFromSpaceQuotaDefinitionResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "removeSpaceFromUserResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "default_space_url": {
          "description": "The default Space Url",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "removeSpaceFromUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/removeSpaceFromUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "removeUserFromOrganizationResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "billing_enabled": {
          "description": "The billing Enabled",
          "type": "boolean"
        },
        "billing_managers_url": {
          "description": "The billing Managers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "private_domains_url": {
          "description": "The private Domains Url",
          "type": "string"
        },
        "quota_definition_guid": {
          "description": "The quota Definition Guid",
          "type": "string"
        },
        "quota_definition_url": {
          "description": "The quota Definition Url",
          "type": "string"
        },
        "space_quota_definitions_url": {
          "description": "The space Quota Definitions Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        },
        "users_url": {
          "description": "The users Url",
          "type": "string"
        }
      }
    },
    "removeUserFromOrganizationResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/removeUserFromOrganizationResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "restageAppResponse": {
      "properties": {
        "buildpack": {
          "description": "The buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "command": {
          "description": "The command",
          "$ref": "#/definitions/genericObject"
        },
        "console": {
          "description": "The console",
          "type": "boolean"
        },
        "debug": {
          "description": "The debug",
          "$ref": "#/definitions/genericObject"
        },
        "detected_buildpack": {
          "description": "The detected Buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "detected_start_command": {
          "description": "The detected Start Command",
          "type": "string"
        },
        "disk_quota": {
          "description": "The disk Quota",
          "type": "integer"
        },
        "docker_image": {
          "description": "The docker Image",
          "$ref": "#/definitions/genericObject"
        },
        "environment_json": {
          "description": "The environment Json",
          "$ref": "#/definitions/genericObject"
        },
        "health_check_timeout": {
          "description": "The health Check Timeout",
          "$ref": "#/definitions/genericObject"
        },
        "health_check_type": {
          "description": "The health Check Type",
          "type": "string"
        },
        "instances": {
          "description": "The instances",
          "type": "integer"
        },
        "memory": {
          "description": "The memory",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "package_state": {
          "description": "The package State",
          "type": "string"
        },
        "package_updated_at": {
          "description": "The package Updated At",
          "type": "string"
        },
        "production": {
          "description": "The production",
          "type": "boolean"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "stack_guid": {
          "description": "The stack Guid",
          "type": "string"
        },
        "staging_failed_reason": {
          "description": "The staging Failed Reason",
          "$ref": "#/definitions/genericObject"
        },
        "staging_task_id": {
          "description": "The staging Task Id",
          "$ref": "#/definitions/genericObject"
        },
        "state": {
          "description": "The state",
          "type": "string"
        },
        "version": {
          "description": "The version",
          "type": "string"
        }
      }
    },
    "restageAppResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/restageAppResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveAppResponse": {
      "properties": {
        "buildpack": {
          "description": "The buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "command": {
          "description": "The command",
          "$ref": "#/definitions/genericObject"
        },
        "console": {
          "description": "The console",
          "type": "boolean"
        },
        "debug": {
          "description": "The debug",
          "$ref": "#/definitions/genericObject"
        },
        "detected_buildpack": {
          "description": "The detected Buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "detected_start_command": {
          "description": "The detected Start Command",
          "type": "string"
        },
        "disk_quota": {
          "description": "The disk Quota",
          "type": "integer"
        },
        "docker_image": {
          "description": "The docker Image",
          "$ref": "#/definitions/genericObject"
        },
        "environment_json": {
          "description": "The environment Json",
          "$ref": "#/definitions/genericObject"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "health_check_timeout": {
          "description": "The health Check Timeout",
          "$ref": "#/definitions/genericObject"
        },
        "health_check_type": {
          "description": "The health Check Type",
          "type": "string"
        },
        "instances": {
          "description": "The instances",
          "type": "integer"
        },
        "memory": {
          "description": "The memory",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "package_state": {
          "description": "The package State",
          "type": "string"
        },
        "package_updated_at": {
          "description": "The package Updated At",
          "type": "string"
        },
        "production": {
          "description": "The production",
          "type": "boolean"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "service_bindings_url": {
          "description": "The service Bindings Url",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        },
        "stack_guid": {
          "description": "The stack Guid",
          "type": "string"
        },
        "stack_url": {
          "description": "The stack Url",
          "type": "string"
        },
        "staging_failed_reason": {
          "description": "The staging Failed Reason",
          "$ref": "#/definitions/genericObject"
        },
        "staging_task_id": {
          "description": "The staging Task Id",
          "$ref": "#/definitions/genericObject"
        },
        "state": {
          "description": "The state",
          "type": "string"
        },
        "version": {
          "description": "The version",
          "type": "string"
        }
      }
    },
    "retrieveAppResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveAppResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveAppUsageEventResponse": {
      "properties": {
        "app_guid": {
          "description": "The app Guid",
          "type": "string"
        },
        "app_name": {
          "description": "The app Name",
          "type": "string"
        },
        "buildpack_guid": {
          "description": "The buildpack Guid",
          "type": "string"
        },
        "buildpack_name": {
          "description": "The buildpack Name",
          "type": "string"
        },
        "instance_count": {
          "description": "The instance Count",
          "type": "integer"
        },
        "memory_in_mb_per_instance": {
          "description": "The memory In Mb Per Instance",
          "type": "integer"
        },
        "org_guid": {
          "description": "The org Guid",
          "type": "string"
        },
        "package_state": {
          "description": "The package State",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_name": {
          "description": "The space Name",
          "type": "string"
        },
        "state": {
          "description": "The state",
          "type": "string"
        }
      }
    },
    "retrieveAppUsageEventResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveAppUsageEventResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveAuthLogin": {
      "properties": {
        "app": {
          "type": "object",
          "properties": {
            "version": {
              "description": "The version of the auth server",
              "type": "string"
            }
          }
        },
        "commit_id": {
          "description": "The GIT sha for the UAA version",
          "type": "string"
        },
        "entityID": {
          "description": "The UAA is always a SAML service provider. This field contains the configured entityID",
          "type": "string"
        },
        "idpDefinitions": {
          "description": "Object  A list of alias/url pairs of SAML IDP providers configured. Each url is the starting point to initiate the authentication process for the SAML identity provider.",
          "type": "object"
        },
        "links": {
          "description": "A list of alias/url pairs of configured action URLs for the UAA",
          "type": "object",
          "properties": {
            "login": {
              "description": "The link to the login host alias of the UAA",
              "type": "string"
            },
            "passwd": {
              "description": "The link to the 'Forgot Password' functionality. Can be external or internal to the UAA",
              "type": "string"
            },
            "register": {
              "description": "The link to the 'Create Account' functionality. Can be external or internal to the UAA",
              "type": "string"
            },
            "uaa": {
              "description": "The link to the uaa alias host of the UAA",
              "type": "string"
            }
          }
        },
        "prompts": {
          "description": "A list of name/value pairs of configured prompts that the UAA will login a user. Format for each prompt is [type, display name] where type can be 'text' or 'password'",
          "type": "object",
          "properties": {
            "passcode": {
              "description": "If a SAML identity provider is configured, this prompt contains a URL to where the user can initiate the SAML authentication flow.",
              "type": "array",
              "items": {
                "type": "object"
              },
              "x-omitempty": true
            },
            "password": {
              "description": "Information about the password prompt.",
              "type": "array",
              "items": {
                "type": "object"
              },
              "x-omitempty": true
            },
            "username": {
              "description": "Information about the username prompt.",
              "type": "array",
              "items": {
                "type": "object"
              },
              "x-omitempty": true
            }
          }
        },
        "showLoginLinks": {
          "description": "Set to true if there are SAML or OAUTH/OIDC providers with a visible link on the login page.",
          "type": "boolean"
        },
        "timestamp": {
          "description": "JSON timestamp for the commit of the UAA version",
          "type": "string"
        },
        "zone_name": {
          "description": "The name of the zone invoked",
          "type": "string"
        }
      }
    },
    "retrieveBuildpackResponse": {
      "properties": {
        "enabled": {
          "description": "The enabled",
          "type": "boolean"
        },
        "filename": {
          "description": "The filename",
          "type": "string"
        },
        "locked": {
          "description": "The locked",
          "type": "boolean"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "position": {
          "description": "The position",
          "type": "integer"
        }
      }
    },
    "retrieveBuildpackResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveBuildpackResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveDomainDeprecatedResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        }
      }
    },
    "retrieveDomainDeprecatedResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveDomainDeprecatedResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveEventResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "retrieveEventResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveEventResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveJobThatIsQueuedResponse": {
      "properties": {
        "guid": {
          "description": "The guid",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        }
      }
    },
    "retrieveJobThatIsQueuedResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveJobThatIsQueuedResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveJobThatWasSuccessfulResponse": {
      "properties": {
        "guid": {
          "description": "The guid",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        }
      }
    },
    "retrieveJobThatWasSuccessfulResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveJobThatWasSuccessfulResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveJobWithKnownFailureResponse": {
      "properties": {
        "error": {
          "description": "The error",
          "type": "string"
        },
        "error_details": {
          "description": "The error Details",
          "$ref": "#/definitions/genericObject"
        },
        "guid": {
          "description": "The guid",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        }
      }
    },
    "retrieveJobWithKnownFailureResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveJobWithKnownFailureResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveJobWithUnknownFailureResponse": {
      "properties": {
        "error": {
          "description": "The error",
          "type": "string"
        },
        "error_details": {
          "description": "The error Details",
          "$ref": "#/definitions/genericObject"
        },
        "guid": {
          "description": "The guid",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        }
      }
    },
    "retrieveJobWithUnknownFailureResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveJobWithUnknownFailureResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveOrganizationQuotaDefinitionResponse": {
      "properties": {
        "instance_memory_limit": {
          "description": "The instance Memory Limit",
          "type": "integer"
        },
        "memory_limit": {
          "description": "The memory Limit",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "non_basic_services_allowed": {
          "description": "The non Basic Services Allowed",
          "type": "boolean"
        },
        "total_routes": {
          "description": "The total Routes",
          "type": "integer"
        },
        "total_services": {
          "description": "The total Services",
          "type": "integer"
        },
        "trial_db_allowed": {
          "description": "The trial Db Allowed",
          "type": "boolean"
        }
      }
    },
    "retrieveOrganizationQuotaDefinitionResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveOrganizationQuotaDefinitionResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveOrganizationResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "billing_enabled": {
          "description": "The billing Enabled",
          "type": "boolean"
        },
        "billing_managers_url": {
          "description": "The billing Managers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "private_domains_url": {
          "description": "The private Domains Url",
          "type": "string"
        },
        "quota_definition_guid": {
          "description": "The quota Definition Guid",
          "type": "string"
        },
        "quota_definition_url": {
          "description": "The quota Definition Url",
          "type": "string"
        },
        "space_quota_definitions_url": {
          "description": "The space Quota Definitions Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        },
        "users_url": {
          "description": "The users Url",
          "type": "string"
        }
      }
    },
    "retrieveOrganizationResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveOrganizationResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrievePrivateDomainResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        },
        "owning_organization_guid": {
          "description": "The owning Organization Guid",
          "type": "string"
        },
        "owning_organization_url": {
          "description": "The owning Organization Url",
          "type": "string"
        }
      }
    },
    "retrievePrivateDomainResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrievePrivateDomainResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveRouteResponse": {
      "properties": {
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "domain_guid": {
          "description": "The domain Guid",
          "type": "string"
        },
        "domain_url": {
          "description": "The domain Url",
          "type": "string"
        },
        "host": {
          "description": "The host",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        }
      }
    },
    "retrieveRouteResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveRouteResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveSecurityGroupResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        },
        "rules": {
          "description": "The rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "running_default": {
          "description": "The running Default",
          "type": "boolean"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "staging_default": {
          "description": "The staging Default",
          "type": "boolean"
        }
      }
    },
    "retrieveSecurityGroupResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveSecurityGroupResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveServiceAuthTokenDeprecatedResponse": {
      "properties": {
        "label": {
          "description": "The label",
          "type": "string"
        },
        "provider": {
          "description": "The provider",
          "type": "string"
        }
      }
    },
    "retrieveServiceAuthTokenDeprecatedResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveServiceAuthTokenDeprecatedResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveServiceBindingResponse": {
      "properties": {
        "app_guid": {
          "description": "The app Guid",
          "type": "string"
        },
        "app_url": {
          "description": "The app Url",
          "type": "string"
        },
        "binding_options": {
          "description": "The binding Options",
          "$ref": "#/definitions/genericObject"
        },
        "credentials": {
          "description": "The credentials",
          "$ref": "#/definitions/genericObject"
        },
        "gateway_data": {
          "description": "The gateway Data",
          "$ref": "#/definitions/genericObject"
        },
        "gateway_name": {
          "description": "The gateway Name",
          "type": "string"
        },
        "service_instance_guid": {
          "description": "The service Instance Guid",
          "type": "string"
        },
        "service_instance_url": {
          "description": "The service Instance Url",
          "type": "string"
        },
        "syslog_drain_url": {
          "description": "The syslog Drain Url",
          "$ref": "#/definitions/genericObject"
        }
      }
    },
    "retrieveServiceBindingResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveServiceBindingResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveServiceBrokerResponse": {
      "properties": {
        "auth_username": {
          "description": "The auth Username",
          "type": "string"
        },
        "broker_url": {
          "description": "The broker Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        }
      }
    },
    "retrieveServiceBrokerResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveServiceBrokerResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveServiceInstanceResponse": {
      "properties": {
        "credentials": {
          "description": "The credentials",
          "$ref": "#/definitions/genericObject"
        },
        "dashboard_url": {
          "description": "The dashboard Url",
          "$ref": "#/definitions/genericObject"
        },
        "gateway_data": {
          "description": "The gateway Data",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "service_bindings_url": {
          "description": "The service Bindings Url",
          "type": "string"
        },
        "service_plan_guid": {
          "description": "The service Plan Guid",
          "type": "string"
        },
        "service_plan_url": {
          "description": "The service Plan Url",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "retrieveServiceInstanceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveServiceInstanceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveServicePlanResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "description": {
          "description": "The description",
          "type": "string"
        },
        "extra": {
          "description": "The extra",
          "$ref": "#/definitions/genericObject"
        },
        "free": {
          "description": "The free",
          "type": "boolean"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "public": {
          "description": "The public",
          "type": "boolean"
        },
        "service_guid": {
          "description": "The service Guid",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "service_url": {
          "description": "The service Url",
          "type": "string"
        },
        "unique_id": {
          "description": "The unique Id",
          "type": "string"
        }
      }
    },
    "retrieveServicePlanResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveServicePlanResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveServicePlanVisibilityResponse": {
      "properties": {
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "service_plan_guid": {
          "description": "The service Plan Guid",
          "type": "string"
        },
        "service_plan_url": {
          "description": "The service Plan Url",
          "type": "string"
        }
      }
    },
    "retrieveServicePlanVisibilityResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveServicePlanVisibilityResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveServiceResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "bindable": {
          "description": "The bindable",
          "type": "boolean"
        },
        "description": {
          "description": "The description",
          "type": "string"
        },
        "documentation_url": {
          "description": "The documentation Url",
          "$ref": "#/definitions/genericObject"
        },
        "extra": {
          "description": "The extra",
          "$ref": "#/definitions/genericObject"
        },
        "info_url": {
          "description": "The info Url",
          "$ref": "#/definitions/genericObject"
        },
        "label": {
          "description": "The label",
          "type": "string"
        },
        "long_description": {
          "description": "The long Description",
          "$ref": "#/definitions/genericObject"
        },
        "plan_updateable": {
          "description": "The plan Updateable",
          "type": "boolean"
        },
        "provider": {
          "description": "The provider",
          "type": "string"
        },
        "requires": {
          "description": "The requires",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "service_broker_guid": {
          "description": "The service Broker Guid",
          "type": "string"
        },
        "service_plans_url": {
          "description": "The service Plans Url",
          "type": "string"
        },
        "tags": {
          "description": "The tags",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "unique_id": {
          "description": "The unique Id",
          "type": "string"
        },
        "url": {
          "description": "The url",
          "type": "string"
        },
        "version": {
          "description": "The version",
          "type": "string"
        }
      }
    },
    "retrieveServiceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveServiceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveServiceUsageEventResponse": {
      "properties": {
        "org_guid": {
          "description": "The org Guid",
          "type": "string"
        },
        "service_guid": {
          "description": "The service Guid",
          "type": "string"
        },
        "service_instance_guid": {
          "description": "The service Instance Guid",
          "type": "string"
        },
        "service_instance_name": {
          "description": "The service Instance Name",
          "type": "string"
        },
        "service_instance_type": {
          "description": "The service Instance Type",
          "type": "string"
        },
        "service_label": {
          "description": "The service Label",
          "type": "string"
        },
        "service_plan_guid": {
          "description": "The service Plan Guid",
          "type": "string"
        },
        "service_plan_name": {
          "description": "The service Plan Name",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_name": {
          "description": "The space Name",
          "type": "string"
        },
        "state": {
          "description": "The state",
          "type": "string"
        }
      }
    },
    "retrieveServiceUsageEventResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveServiceUsageEventResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveSharedDomainResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        }
      }
    },
    "retrieveSharedDomainResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveSharedDomainResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveSpaceQuotaDefinitionResponse": {
      "properties": {
        "instance_memory_limit": {
          "description": "The instance Memory Limit",
          "type": "integer"
        },
        "memory_limit": {
          "description": "The memory Limit",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "non_basic_services_allowed": {
          "description": "The non Basic Services Allowed",
          "type": "boolean"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "total_routes": {
          "description": "The total Routes",
          "type": "integer"
        },
        "total_services": {
          "description": "The total Services",
          "type": "integer"
        }
      }
    },
    "retrieveSpaceQuotaDefinitionResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveSpaceQuotaDefinitionResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveSpaceResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "developers_url": {
          "description": "The developers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "security_groups_url": {
          "description": "The security Groups Url",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "space_quota_definition_guid": {
          "description": "The space Quota Definition Guid",
          "type": "string"
        }
      }
    },
    "retrieveSpaceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveSpaceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveStackResponse": {
      "properties": {
        "description": {
          "description": "The description",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        }
      }
    },
    "retrieveStackResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveStackResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveUserProvidedServiceInstanceResponse": {
      "properties": {
        "credentials": {
          "description": "The credentials",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "service_bindings_url": {
          "description": "The service Bindings Url",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        },
        "syslog_drain_url": {
          "description": "The syslog Drain Url",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "retrieveUserProvidedServiceInstanceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveUserProvidedServiceInstanceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveUserResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "default_space_url": {
          "description": "The default Space Url",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "retrieveUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrievingOrganizationMemoryUsageResponse": {
      "properties": {
        "memory_usage_in_mb": {
          "description": "The memory Usage In Mb",
          "type": "integer"
        }
      }
    },
    "retrievingOrganizationMemoryUsageResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrievingOrganizationMemoryUsageResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrievingPermissionsOnServiceInstanceResponse": {
      "properties": {
        "manage": {
          "description": "The manage",
          "type": "boolean"
        }
      }
    },
    "retrievingPermissionsOnServiceInstanceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrievingPermissionsOnServiceInstanceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "returnSecurityGroupsUsedForRunningAppsResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        },
        "rules": {
          "description": "The rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "running_default": {
          "description": "The running Default",
          "type": "boolean"
        },
        "staging_default": {
          "description": "The staging Default",
          "type": "boolean"
        }
      }
    },
    "returnSecurityGroupsUsedForRunningAppsResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/returnSecurityGroupsUsedForRunningAppsResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "returnSecurityGroupsUsedForRunningAppsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/returnSecurityGroupsUsedForRunningAppsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "returnSecurityGroupsUsedForStagingResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        },
        "rules": {
          "description": "The rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "running_default": {
          "description": "The running Default",
          "type": "boolean"
        },
        "staging_default": {
          "description": "The staging Default",
          "type": "boolean"
        }
      }
    },
    "returnSecurityGroupsUsedForStagingResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/returnSecurityGroupsUsedForStagingResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "returnSecurityGroupsUsedForStagingResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/returnSecurityGroupsUsedForStagingResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "setFeatureFlagRequest": {
      "properties": {
        "enabled": {
          "description": "The state of the feature flag.",
          "type": "boolean"
        },
        "error_message": {
          "description": "The custom error message for the feature flag.",
          "type": "string"
        }
      }
    },
    "setFeatureFlagResponse": {
      "properties": {
        "enabled": {
          "description": "The enabled",
          "type": "boolean"
        },
        "error_message": {
          "description": "The error Message",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "url": {
          "description": "The url",
          "type": "string"
        }
      }
    },
    "setFeatureFlagResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/setFeatureFlagResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "setSecurityGroupAsDefaultForRunningAppsResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        },
        "rules": {
          "description": "The rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "running_default": {
          "description": "The running Default",
          "type": "boolean"
        },
        "staging_default": {
          "description": "The staging Default",
          "type": "boolean"
        }
      }
    },
    "setSecurityGroupAsDefaultForRunningAppsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/setSecurityGroupAsDefaultForRunningAppsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "setSecurityGroupAsDefaultForStagingResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        },
        "rules": {
          "description": "The rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "running_default": {
          "description": "The running Default",
          "type": "boolean"
        },
        "staging_default": {
          "description": "The staging Default",
          "type": "boolean"
        }
      }
    },
    "setSecurityGroupAsDefaultForStagingResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/setSecurityGroupAsDefaultForStagingResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "updateAppRequest": {
      "properties": {
        "buildpack": {
          "description": "Buildpack to build the app. 3 options: a) Blank means autodetection; b) A Git Url pointing to a buildpack; c) Name of an installed buildpack.",
          "$ref": "#/definitions/genericObject"
        },
        "command": {
          "description": "The command to start an app after it is staged (e.g. 'rails s -p $PORT' or 'java com.org.Server $PORT').",
          "$ref": "#/definitions/genericObject"
        },
        "console": {
          "description": "Open the console port for the app (at $CONSOLE_PORT).",
          "type": "boolean"
        },
        "debug": {
          "description": "Open the debug port for the app (at $DEBUG_PORT).",
          "type": "boolean"
        },
        "detected_start_command": {
          "description": "The command detected by the buildpack during staging.",
          "$ref": "#/definitions/genericObject"
        },
        "disk_quota": {
          "description": "The maximum amount of disk available to an instance of an app. In megabytes.",
          "type": "string"
        },
        "docker_image": {
          "description": "Name of the Docker image containing the app",
          "type": "string"
        },
        "environment_json": {
          "description": "Key/value pairs of all the environment variables to run in your app. Does not include any system or service variables.",
          "$ref": "#/definitions/genericObject"
        },
        "health_check_timeout": {
          "description": "Timeout for health checking of an staged app when starting up",
          "$ref": "#/definitions/genericObject"
        },
        "health_check_type": {
          "description": "Type of health check to perform.",
          "type": "string"
        },
        "instances": {
          "description": "The number of instances of the app to run. To ensure optimal availability ensure there are at least 2 instances.",
          "type": "string"
        },
        "memory": {
          "description": "The amount of memory each instance should have. In megabytes.",
          "type": "string"
        },
        "name": {
          "description": "The name of the app.",
          "type": "string"
        },
        "production": {
          "description": "Deprecated.",
          "type": "boolean"
        },
        "space_guid": {
          "description": "The guid of the associated space.",
          "type": "string"
        },
        "stack_guid": {
          "description": "The guid of the associated stack.",
          "type": "string"
        },
        "state": {
          "description": "The current desired state of the app. One of STOPPED or STARTED.",
          "type": "string"
        }
      }
    },
    "updateAppResponse": {
      "properties": {
        "buildpack": {
          "description": "The buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "command": {
          "description": "The command",
          "$ref": "#/definitions/genericObject"
        },
        "console": {
          "description": "The console",
          "type": "boolean"
        },
        "debug": {
          "description": "The debug",
          "$ref": "#/definitions/genericObject"
        },
        "detected_buildpack": {
          "description": "The detected Buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "detected_start_command": {
          "description": "The detected Start Command",
          "type": "string"
        },
        "disk_quota": {
          "description": "The disk Quota",
          "type": "integer"
        },
        "docker_image": {
          "description": "The docker Image",
          "$ref": "#/definitions/genericObject"
        },
        "environment_json": {
          "description": "The environment Json",
          "$ref": "#/definitions/genericObject"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "health_check_timeout": {
          "description": "The health Check Timeout",
          "$ref": "#/definitions/genericObject"
        },
        "health_check_type": {
          "description": "The health Check Type",
          "type": "string"
        },
        "instances": {
          "description": "The instances",
          "type": "integer"
        },
        "memory": {
          "description": "The memory",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "package_state": {
          "description": "The package State",
          "type": "string"
        },
        "package_updated_at": {
          "description": "The package Updated At",
          "type": "string"
        },
        "production": {
          "description": "The production",
          "type": "boolean"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "service_bindings_url": {
          "description": "The service Bindings Url",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        },
        "stack_guid": {
          "description": "The stack Guid",
          "type": "string"
        },
        "stack_url": {
          "description": "The stack Url",
          "type": "string"
        },
        "staging_failed_reason": {
          "description": "The staging Failed Reason",
          "$ref": "#/definitions/genericObject"
        },
        "staging_task_id": {
          "description": "The staging Task Id",
          "$ref": "#/definitions/genericObject"
        },
        "state": {
          "description": "The state",
          "type": "string"
        },
        "version": {
          "description": "The version",
          "type": "string"
        }
      }
    },
    "updateAppResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/updateAppResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "updateContentsOfRunningEnvironmentVariableGroupRequest": {
      "properties": {
        "abc": {
          "description": "The abc",
          "type": "integer"
        },
        "do-re-me": {
          "description": "The doreme",
          "type": "string"
        }
      }
    },
    "updateContentsOfRunningEnvironmentVariableGroupResponse": {
      "properties": {
        "abc": {
          "description": "The abc",
          "type": "integer"
        },
        "do-re-me": {
          "description": "The doreme",
          "type": "string"
        }
      }
    },
    "updateContentsOfRunningEnvironmentVariableGroupResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/updateContentsOfRunningEnvironmentVariableGroupResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "updateContentsOfStagingEnvironmentVariableGroupRequest": {
      "properties": {
        "abc": {
          "description": "The abc",
          "type": "integer"
        },
        "do-re-me": {
          "description": "The doreme",
          "type": "string"
        }
      }
    },
    "updateContentsOfStagingEnvironmentVariableGroupResponse": {
      "properties": {
        "abc": {
          "description": "The abc",
          "type": "integer"
        },
        "do-re-me": {
          "description": "The doreme",
          "type": "string"
        }
      }
    },
    "updateContentsOfStagingEnvironmentVariableGroupResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/updateContentsOfStagingEnvironmentVariableGroupResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "updateOrganizationQuotaDefinitionRequest": {
      "properties": {
        "instance_memory_limit": {
          "description": "The maximum amount of memory in megabyte an application instance can have. (-1 represents an unlimited amount)",
          "type": "string"
        },
        "memory_limit": {
          "description": "How much memory in megabyte an organization can have.",
          "type": "string"
        },
        "name": {
          "description": "The name for the Organization Quota Definition.",
          "type": "string"
        },
        "non_basic_services_allowed": {
          "description": "If an organization can have non basic services",
          "type": "boolean"
        },
        "total_routes": {
          "description": "How many routes an organization can have.",
          "type": "string"
        },
        "total_services": {
          "description": "How many services an organization can have.",
          "type": "string"
        },
        "trial_db_allowed": {
          "description": "If an organization can have a trial db.",
          "$ref": "#/definitions/genericObject"
        }
      }
    },
    "updateOrganizationQuotaDefinitionResponse": {
      "properties": {
        "instance_memory_limit": {
          "description": "The instance Memory Limit",
          "type": "integer"
        },
        "memory_limit": {
          "description": "The memory Limit",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "non_basic_services_allowed": {
          "description": "The non Basic Services Allowed",
          "type": "boolean"
        },
        "total_routes": {
          "description": "The total Routes",
          "type": "integer"
        },
        "total_services": {
          "description": "The total Services",
          "type": "integer"
        },
        "trial_db_allowed": {
          "description": "The trial Db Allowed",
          "type": "boolean"
        }
      }
    },
    "updateOrganizationQuotaDefinitionResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/updateOrganizationQuotaDefinitionResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "updateOrganizationRequest": {
      "properties": {
        "billing_enabled": {
          "description": "If billing is enabled for this organization",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name of the organization",
          "type": "string"
        },
        "quota_definition_guid": {
          "description": "The guid of quota to associate with this organization",
          "type": "string"
        },
        "status": {
          "description": "Status of the organization",
          "$ref": "#/definitions/genericObject"
        }
      }
    },
    "updateOrganizationResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "billing_enabled": {
          "description": "The billing Enabled",
          "type": "boolean"
        },
        "billing_managers_url": {
          "description": "The billing Managers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "private_domains_url": {
          "description": "The private Domains Url",
          "type": "string"
        },
        "quota_definition_guid": {
          "description": "The quota Definition Guid",
          "type": "string"
        },
        "quota_definition_url": {
          "description": "The quota Definition Url",
          "type": "string"
        },
        "space_quota_definitions_url": {
          "description": "The space Quota Definitions Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        },
        "users_url": {
          "description": "The users Url",
          "type": "string"
        }
      }
    },
    "updateOrganizationResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/updateOrganizationResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "updateRouteRequest": {
      "properties": {
        "domain_guid": {
          "description": "The guid of the associated domain",
          "type": "string"
        },
        "guid": {
          "description": "The guid of the route.",
          "type": "string"
        },
        "host": {
          "description": "The host portion of the route",
          "type": "string"
        },
        "space_guid": {
          "description": "The guid of the associated space",
          "type": "string"
        }
      }
    },
    "updateRouteResponse": {
      "properties": {
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "domain_guid": {
          "description": "The domain Guid",
          "type": "string"
        },
        "domain_url": {
          "description": "The domain Url",
          "type": "string"
        },
        "host": {
          "description": "The host",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        }
      }
    },
    "updateRouteResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/updateRouteResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "updateSecurityGroupRequest": {
      "properties": {
        "name": {
          "description": "The name of the security group.",
          "type": "string"
        },
        "rules": {
          "description": "The egress rules for apps that belong to this security group. A rule consists of a protocol (tcp icmp udp all) destination CIDR or destination range  port or port range (tcp udp all) type (control signal for icmp) code (control signal for icmp)  log (enables logging for the egress rule)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "space_guids": {
          "description": "The list of associated spaces.",
          "$ref": "#/definitions/genericObject"
        }
      }
    },
    "updateSecurityGroupResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        },
        "rules": {
          "description": "The rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "running_default": {
          "description": "The running Default",
          "type": "boolean"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "staging_default": {
          "description": "The staging Default",
          "type": "boolean"
        }
      }
    },
    "updateSecurityGroupResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/updateSecurityGroupResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "updateServiceBrokerRequest": {
      "properties": {
        "auth_password": {
          "description": "The password with which to authenticate against the service broker.",
          "type": "string"
        },
        "auth_username": {
          "description": "The username with which to authenticate against the service broker.",
          "type": "string"
        },
        "broker_url": {
          "description": "The URL of the service broker.",
          "type": "string"
        },
        "name": {
          "description": "The name of the service broker.",
          "type": "string"
        }
      }
    },
    "updateServiceBrokerResponse": {
      "properties": {
        "auth_username": {
          "description": "The auth Username",
          "type": "string"
        },
        "broker_url": {
          "description": "The broker Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        }
      }
    },
    "updateServiceBrokerResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/updateServiceBrokerResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "updateServiceDeprecatedRequest": {
      "properties": {
        "active": {
          "description": "A boolean describing that the service can be provisioned by users",
          "$ref": "#/definitions/genericObject"
        },
        "bindable": {
          "description": "A boolean describing that the service can be bound to applications",
          "$ref": "#/definitions/genericObject"
        },
        "description": {
          "description": "A short blurb describing the service",
          "type": "string"
        },
        "documentation_url": {
          "description": "A url that points to a documentation page for the service",
          "type": "string"
        },
        "extra": {
          "description": "A JSON field with extra data pertaining to the service",
          "type": "string"
        },
        "guid": {
          "description": "The guid of the service",
          "type": "string"
        },
        "info_url": {
          "description": "A url that points to an info page for the service",
          "type": "string"
        },
        "label": {
          "description": "The name of the service",
          "type": "string"
        },
        "long_description": {
          "description": "A longer description of the service",
          "type": "string"
        },
        "provider": {
          "description": "The name of the service provider (used only by v1 service gateways)",
          "type": "string"
        },
        "requires": {
          "description": "A list of dependencies for services",
          "type": "string"
        },
        "service_broker_guid": {
          "description": "The guid of the v2 service broker associated with the service",
          "type": "string"
        },
        "tags": {
          "description": "A list of tags for the service",
          "type": "string"
        },
        "timeout": {
          "description": "A timeout used by the v1 service gateway client",
          "$ref": "#/definitions/genericObject"
        },
        "unique_id": {
          "description": "A guid that identifies the service with the broker (not the same as the guid above)",
          "$ref": "#/definitions/genericObject"
        },
        "url": {
          "description": "The url of ther service provider (used only by v1 service gateways)",
          "type": "string"
        },
        "version": {
          "description": "The version of the service (used only by v1 service gateways)",
          "type": "string"
        }
      }
    },
    "updateServiceDeprecatedResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "bindable": {
          "description": "The bindable",
          "type": "boolean"
        },
        "description": {
          "description": "The description",
          "type": "string"
        },
        "documentation_url": {
          "description": "The documentation Url",
          "$ref": "#/definitions/genericObject"
        },
        "extra": {
          "description": "The extra",
          "$ref": "#/definitions/genericObject"
        },
        "info_url": {
          "description": "The info Url",
          "$ref": "#/definitions/genericObject"
        },
        "label": {
          "description": "The label",
          "type": "string"
        },
        "long_description": {
          "description": "The long Description",
          "$ref": "#/definitions/genericObject"
        },
        "plan_updateable": {
          "description": "The plan Updateable",
          "type": "boolean"
        },
        "provider": {
          "description": "The provider",
          "type": "string"
        },
        "requires": {
          "description": "The requires",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "service_broker_guid": {
          "description": "The service Broker Guid",
          "type": "string"
        },
        "service_plans_url": {
          "description": "The service Plans Url",
          "type": "string"
        },
        "tags": {
          "description": "The tags",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "unique_id": {
          "description": "The unique Id",
          "type": "string"
        },
        "url": {
          "description": "The url",
          "type": "string"
        },
        "version": {
          "description": "The version",
          "type": "string"
        }
      }
    },
    "updateServiceDeprecatedResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/updateServiceDeprecatedResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "updateServiceInstanceRequest": {
      "properties": {
        "name": {
          "description": "The new name for the service instance",
          "type": "string"
        },
        "service_plan_guid": {
          "description": "The new plan guid for the service instance",
          "type": "string"
        }
      }
    },
    "updateServiceInstanceResponse": {
      "properties": {
        "credentials": {
          "description": "The credentials",
          "$ref": "#/definitions/genericObject"
        },
        "dashboard_url": {
          "description": "The dashboard Url",
          "$ref": "#/definitions/genericObject"
        },
        "gateway_data": {
          "description": "The gateway Data",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "service_bindings_url": {
          "description": "The service Bindings Url",
          "type": "string"
        },
        "service_plan_guid": {
          "description": "The service Plan Guid",
          "type": "string"
        },
        "service_plan_url": {
          "description": "The service Plan Url",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "updateServiceInstanceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/updateServiceInstanceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "updateServicePlanDeprecatedRequest": {
      "properties": {
        "active": {
          "description": "A boolean that determines whether plans can be used to create new instances.",
          "type": "boolean"
        },
        "description": {
          "description": "A description of the service plan",
          "type": "string"
        },
        "extra": {
          "description": "A JSON string with additional data about the plan",
          "type": "string"
        },
        "free": {
          "description": "A boolean describing if the service plan is free",
          "type": "boolean"
        },
        "guid": {
          "description": "The guid of the service plan",
          "type": "string"
        },
        "name": {
          "description": "The name of the service plan",
          "type": "string"
        },
        "public": {
          "description": "A boolean describing that the plan is visible to the all users",
          "$ref": "#/definitions/genericObject"
        },
        "service_guid": {
          "description": "The guid of the related service",
          "type": "string"
        },
        "unique_id": {
          "description": "A guid for the service plan in the service broker (not the same as the cloud controller guid)",
          "$ref": "#/definitions/genericObject"
        }
      }
    },
    "updateServicePlanDeprecatedResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "description": {
          "description": "The description",
          "type": "string"
        },
        "extra": {
          "description": "The extra",
          "$ref": "#/definitions/genericObject"
        },
        "free": {
          "description": "The free",
          "type": "boolean"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "public": {
          "description": "The public",
          "type": "boolean"
        },
        "service_guid": {
          "description": "The service Guid",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "service_url": {
          "description": "The service Url",
          "type": "string"
        },
        "unique_id": {
          "description": "The unique Id",
          "type": "string"
        }
      }
    },
    "updateServicePlanDeprecatedResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/updateServicePlanDeprecatedResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "updateServicePlanVisibilityRequest": {
      "properties": {
        "organization_guid": {
          "description": "The guid of the organization the plan will be visible to",
          "type": "string"
        },
        "service_plan_guid": {
          "description": "The guid of the plan that will be made visible",
          "type": "string"
        }
      }
    },
    "updateServicePlanVisibilityResponse": {
      "properties": {
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "service_plan_guid": {
          "description": "The service Plan Guid",
          "type": "string"
        },
        "service_plan_url": {
          "description": "The service Plan Url",
          "type": "string"
        }
      }
    },
    "updateServicePlanVisibilityResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/updateServicePlanVisibilityResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "updateSpaceQuotaDefinitionRequest": {
      "properties": {
        "instance_memory_limit": {
          "description": "The maximum amount of memory in megabytes an application instance can have. (-1 represents an unlimited amount)",
          "type": "string"
        },
        "memory_limit": {
          "description": "How much memory in megabytes a space can have.",
          "type": "string"
        },
        "name": {
          "description": "The name for the Space Quota Definition.",
          "type": "string"
        },
        "non_basic_services_allowed": {
          "description": "If a space can have non basic services",
          "type": "boolean"
        },
        "organization_guid": {
          "description": "The owning organization of the space quota",
          "type": "string"
        },
        "total_routes": {
          "description": "How many routes a space can have.",
          "type": "string"
        },
        "total_services": {
          "description": "How many services a space can have.",
          "type": "string"
        }
      }
    },
    "updateSpaceQuotaDefinitionResponse": {
      "properties": {
        "instance_memory_limit": {
          "description": "The instance Memory Limit",
          "type": "integer"
        },
        "memory_limit": {
          "description": "The memory Limit",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "non_basic_services_allowed": {
          "description": "The non Basic Services Allowed",
          "type": "boolean"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "total_routes": {
          "description": "The total Routes",
          "type": "integer"
        },
        "total_services": {
          "description": "The total Services",
          "type": "integer"
        }
      }
    },
    "updateSpaceQuotaDefinitionResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/updateSpaceQuotaDefinitionResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "updateSpaceRequest": {
      "properties": {
        "auditor_guids": {
          "description": "The list of the associated auditors",
          "$ref": "#/definitions/genericObject"
        },
        "developer_guids": {
          "description": "The list of the associated developers",
          "$ref": "#/definitions/genericObject"
        },
        "domain_guids": {
          "description": "The list of the associated domains",
          "$ref": "#/definitions/genericObject"
        },
        "manager_guids": {
          "description": "The list of the associated managers",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name of the space",
          "type": "string"
        },
        "organization_guid": {
          "description": "The guid of the associated organization",
          "type": "string"
        },
        "security_group_guids": {
          "description": "The list of the associated security groups",
          "$ref": "#/definitions/genericObject"
        }
      }
    },
    "updateSpaceResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "developers_url": {
          "description": "The developers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "security_groups_url": {
          "description": "The security Groups Url",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "space_quota_definition_guid": {
          "description": "The space Quota Definition Guid",
          "type": "string"
        }
      }
    },
    "updateSpaceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/updateSpaceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "updateUserProvidedServiceInstanceRequest": {
      "properties": {
        "credentials": {
          "description": "A hash that can be used to store credentials",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "A name for the service instance",
          "type": "string"
        },
        "syslog_drain_url": {
          "description": "The url for the syslog_drain to direct to",
          "type": "string"
        }
      }
    },
    "updateUserProvidedServiceInstanceResponse": {
      "properties": {
        "credentials": {
          "description": "The credentials",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "service_bindings_url": {
          "description": "The service Bindings Url",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        },
        "syslog_drain_url": {
          "description": "The syslog Drain Url",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "updateUserProvidedServiceInstanceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/updateUserProvidedServiceInstanceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "updateUserRequest": {
      "properties": {
        "admin": {
          "description": "Whether the user is an admin (Use UAA instead).",
          "$ref": "#/definitions/genericObject"
        },
        "default_space_guid": {
          "description": "The guid of the default space for apps created by this user.",
          "type": "string"
        }
      }
    },
    "updateUserResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "default_space_url": {
          "description": "The default Space Url",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "updateUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/updateUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "uploadsBitsForAppResponse": {
      "properties": {
        "guid": {
          "description": "The guid",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        }
      }
    },
    "uploadsBitsForAppResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/uploadsBitsForAppResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    }
  },
  "securityDefinitions": {
    "basicAuth": {
      "description": "HTTP Basic Authentication. Works over ` + "`" + `HTTP` + "`" + ` and ` + "`" + `HTTPS` + "`" + `",
      "type": "basic"
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This is the specification for a Cloud Foundry server.\n",
    "title": "Cloud Foundry",
    "contact": {
      "name": "Cloud Foundry Foundation"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "2.217.0"
  },
  "basePath": "/v2",
  "paths": {
    "/app_usage_events": {
      "get": {
        "description": "curl --insecure -i %s/v2/app_usage_events -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "appUsageEvents"
        ],
        "summary": "List all App Usage Events",
        "operationId": "listAllAppUsageEvents",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllAppUsageEventsResponsePaged"
            }
          }
        }
      }
    },
    "/app_usage_events/destructively_purge_all_and_reseed_started_apps": {
      "post": {
        "description": "curl --insecure -i %s/v2/app_usage_events/destructively_purge_all_and_reseed_started_apps -X POST -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "appUsageEvents"
        ],
        "summary": "Purge and reseed App Usage Events",
        "operationId": "purgeAndReseedAppUsageEvents",
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/app_usage_events/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/app_usage_events/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "appUsageEvents"
        ],
        "summary": "Retrieve a Particular App Usage Event",
        "operationId": "retrieveAppUsageEvent",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/app_usage_events/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveAppUsageEventResponseResource"
            }
          }
        }
      }
    },
    "/apps": {
      "get": {
        "description": "curl --insecure -i %s/v2/apps -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "apps"
        ],
        "summary": "List all Apps",
        "operationId": "listAllApps",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllAppsResponsePaged"
            }
          }
        }
      },
      "post": {
        "description": "curl --insecure -i %s/v2/apps -X POST -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "apps"
        ],
        "summary": "Creating an App",
        "operationId": "createApp",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createAppRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/createAppResponseResource"
            }
          }
        }
      }
    },
    "/apps/{app_guid}/instances/{instance_index}/files/{file_path}": {
      "get": {
        "description": "curl --insecure -i %s/v2/apps/{app_guid}/instances/{instance_index}/files/{file_path} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "files"
        ],
        "summary": "Retrieve File",
        "operationId": "retrieveFile",
        "parameters": [
          {
            "type": "string",
            "description": "The app_guid parameter is used as a part of the request URL: '/v2/apps/:app_guid/instances/:instance_index/files/:file_path'",
            "name": "app_guid",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "The instance_index parameter is used as a part of the request URL: '/v2/apps/:app_guid/instances/:instance_index/files/:file_path'",
            "name": "instance_index",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The file_path parameter is used as a part of the request URL: '/v2/apps/:app_guid/instances/:instance_index/files/:file_path'",
            "name": "file_path",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "302": {
            "description": "successful response"
          }
        }
      }
    },
    "/apps/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/apps/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "apps"
        ],
        "summary": "Retrieve a Particular App",
        "operationId": "retrieveApp",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/apps/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveAppResponseResource"
            }
          }
        }
      },
      "put": {
        "description": "curl --insecure -i %s/v2/apps/{guid} -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "apps"
        ],
        "summary": "Updating an App",
        "operationId": "updateApp",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/apps/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateAppRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/updateAppResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/apps/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "apps"
        ],
        "summary": "Delete a Particular App",
        "operationId": "deleteApp",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/apps/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/apps/{guid}/bits": {
      "put": {
        "description": "curl --insecure -i %s/v2/apps/{guid}/bits -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "apps"
        ],
        "summary": "Uploads the bits for an App",
        "operationId": "uploadsBitsForApp",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/apps/:guid/bits'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "file",
            "description": "A binary zip file containing the application bits.",
            "name": "application",
            "in": "formData",
            "required": true
          },
          {
            "type": "boolean",
            "description": "If true, a new asynchronous job is submitted to persist the bits and the job id is included in the response. The client will need to poll the job's status until persistence is completed successfully. If false, the request will block until the bits are persisted synchronously. Defaults to false.",
            "name": "async",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "Fingerprints of the application bits that have previously been pushed to Cloud Foundry. Each fingerprint must include the file path, sha1 hash, and file size in bytes. Each fingerprint may include the file mode, which must be an octal string with at least read and write permissions for owners. If a mode is not provided, the default mode of 0744 will be used. Fingerprinted bits MUST exist in the Cloud Foundry resource cache or the request (or job, if async) will fail.",
            "name": "resources",
            "in": "formData"
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/uploadsBitsForAppResponseResource"
            }
          }
        }
      }
    },
    "/apps/{guid}/copy_bits": {
      "post": {
        "description": "curl --insecure -i %s/v2/apps/{guid}/copy_bits -X POST -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "apps"
        ],
        "summary": "Copy the app bits for an App",
        "operationId": "copyAppBitsForApp",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/apps/:guid/copy_bits'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/copyAppBitsForAppRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/copyAppBitsForAppResponseResource"
            }
          }
        }
      }
    },
    "/apps/{guid}/download": {
      "get": {
        "description": "curl --insecure -i %s/v2/apps/{guid}/download -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "apps"
        ],
        "summary": "Downloads the bits for an App",
        "operationId": "downloadsBitsForApp",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/apps/:guid/download'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "302": {
            "description": "successful response"
          }
        }
      }
    },
    "/apps/{guid}/env": {
      "get": {
        "description": "curl --insecure -i %s/v2/apps/{guid}/env -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "apps"
        ],
        "summary": "Get the env for an App",
        "operationId": "getEnvForApp",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/apps/:guid/env'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/getEnvForAppResponseResource"
            }
          }
        }
      }
    },
    "/apps/{guid}/instances": {
      "get": {
        "description": "curl --insecure -i %s/v2/apps/{guid}/instances -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "apps"
        ],
        "summary": "Get the instance information for a STARTED App",
        "operationId": "getInstanceInformationForStartedApp",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/apps/:guid/instances'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/getInstanceInformationForStartedAppResponseResource"
            }
          }
        }
      }
    },
    "/apps/{guid}/instances/{index}": {
      "delete": {
        "description": "curl --insecure -i %s/v2/apps/{guid}/instances/{index} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "apps"
        ],
        "summary": "Terminate the running App Instance at the given index",
        "operationId": "terminateRunningAppInstanceAtGivenIndex",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/apps/:guid/instances/:index'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "The index parameter is used as a part of the request URL: '/v2/apps/:guid/instances/:index'",
            "name": "index",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/apps/{guid}/restage": {
      "post": {
        "description": "curl --insecure -i %s/v2/apps/{guid}/restage -X POST -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "apps"
        ],
        "summary": "Restage an App",
        "operationId": "restageApp",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/apps/:guid/restage'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/restageAppResponseResource"
            }
          }
        }
      }
    },
    "/apps/{guid}/routes": {
      "get": {
        "description": "curl --insecure -i %s/v2/apps/{guid}/routes -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "apps"
        ],
        "summary": "List all Routes for the App",
        "operationId": "listAllRoutesForApp",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/apps/:guid/routes'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllRoutesForAppResponsePaged"
            }
          }
        }
      }
    },
    "/apps/{guid}/routes/{route_guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/apps/{guid}/routes/{route_guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "apps"
        ],
        "summary": "Associate Route with the App",
        "operationId": "associateRouteWithApp",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/apps/:guid/routes/:route_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The route_guid parameter is used as a part of the request URL: '/v2/apps/:guid/routes/:route_guid'",
            "name": "route_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/associateRouteWithAppResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/apps/{guid}/routes/{route_guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "apps"
        ],
        "summary": "Remove Route from the App",
        "operationId": "removeRouteFromApp",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/apps/:guid/routes/:route_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The route_guid parameter is used as a part of the request URL: '/v2/apps/:guid/routes/:route_guid'",
            "name": "route_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/removeRouteFromAppResponseResource"
            }
          }
        }
      }
    },
    "/apps/{guid}/service_bindings": {
      "get": {
        "description": "curl --insecure -i %s/v2/apps/{guid}/service_bindings -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "apps"
        ],
        "summary": "List all Service Bindings for the App",
        "operationId": "listAllServiceBindingsForApp",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/apps/:guid/service_bindings'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllServiceBindingsForAppResponsePaged"
            }
          }
        }
      }
    },
    "/apps/{guid}/service_bindings/{service_binding_guid}": {
      "delete": {
        "description": "curl --insecure -i %s/v2/apps/{guid}/service_bindings/{service_binding_guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "apps"
        ],
        "summary": "Remove Service Binding from the App",
        "operationId": "removeServiceBindingFromApp",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/apps/:guid/service_bindings/:service_binding_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The service_binding_guid parameter is used as a part of the request URL: '/v2/apps/:guid/service_bindings/:service_binding_guid'",
            "name": "service_binding_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/removeServiceBindingFromAppResponseResource"
            }
          }
        }
      }
    },
    "/apps/{guid}/stats": {
      "get": {
        "description": "curl --insecure -i %s/v2/apps/{guid}/stats -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "apps"
        ],
        "summary": "Get detailed stats for a STARTED App",
        "operationId": "getDetailedStatsForStartedApp",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/apps/:guid/stats'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/getDetailedStatsForStartedAppResponseResource"
            }
          }
        }
      }
    },
    "/apps/{guid}/summary": {
      "get": {
        "description": "curl --insecure -i %s/v2/apps/{guid}/summary -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "apps"
        ],
        "summary": "Get App summary",
        "operationId": "getAppSummary",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/apps/:guid/summary'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/getAppSummaryResponse"
            }
          }
        }
      }
    },
    "/auth/login": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Supports both JSON and HTML output. The HTML output is intended for browser user agents to display a login page.",
        "parameters": [
          {
            "type": "string",
            "description": "Use the configured prompts of the OpenID Connect Provider with the given origin key in the response. Fallback to zone values if no prompts are configured or origin is invalid.",
            "name": "origin",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveAuthLogin"
            }
          }
        }
      }
    },
    "/auth/oauth/token": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ],
        "summary": "The /oauth/token endpoint requires client authentication to be accessed. Client Authentication can be passed as as part of the request authorization header, using basic authentication, or as part of the request parameters, using the client_id and client_secret parameter names.",
        "parameters": [
          {
            "type": "string",
            "description": "Client ID and secret may be passed as a basic authorization header, per RFC 6749 or as request parameters.",
            "name": "Authorization",
            "in": "header"
          },
          {
            "type": "string",
            "description": "A unique string representing the registration information provided by the client, the recipient of the token. Optional if it is passed as part of the Basic Authorization header.",
            "name": "client_id",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "Redirection URI to which the authorization server will send the user-agent back once access is granted (or denied)",
            "name": "redirect_uri",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "The authorization code, obtained from /oauth/authorize, issued for the user",
            "name": "code",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "The type of authentication being used to obtain the token, in this case authorization_code",
            "name": "grant_type",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "The secret passphrase configured for the OAuth client. Optional if it is passed as part of the Basic Authorization header.",
            "name": "client_secret",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "Can be set to opaque to retrieve an opaque and revocable token or to jwt to retrieve a JWT token. If not set the zone setting config.tokenPolicy.jwtRevocable is used.",
            "name": "token_format",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/createsOAuthTokenResponse"
            }
          }
        }
      }
    },
    "/buildpacks": {
      "get": {
        "description": "curl --insecure -i %s/v2/buildpacks -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "buildpacks"
        ],
        "summary": "List all Buildpacks",
        "operationId": "listAllBuildpacks",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllBuildpacksResponsePaged"
            }
          }
        }
      },
      "post": {
        "description": "curl --insecure -i %s/v2/buildpacks -X POST -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "buildpacks"
        ],
        "summary": "Creates an admin Buildpack",
        "operationId": "createsAdminBuildpack",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createsAdminBuildpackRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/createsAdminBuildpackResponseResource"
            }
          }
        }
      }
    },
    "/buildpacks/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/buildpacks/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "buildpacks"
        ],
        "summary": "Retrieve a Particular Buildpack",
        "operationId": "retrieveBuildpack",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/buildpacks/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveBuildpackResponseResource"
            }
          }
        }
      },
      "put": {
        "description": "curl --insecure -i %s/v2/buildpacks/{guid} -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "buildpacks"
        ],
        "summary": "Lock or unlock a Buildpack",
        "operationId": "lockOrUnlockBuildpack",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/buildpacks/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/lockOrUnlockBuildpackRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/lockOrUnlockBuildpackResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/buildpacks/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "buildpacks"
        ],
        "summary": "Delete a Particular Buildpack",
        "operationId": "deleteBuildpack",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/buildpacks/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/config/environment_variable_groups/running": {
      "get": {
        "description": "curl --insecure -i %s/v2/config/environment_variable_groups/running -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "environmentVariableGroups"
        ],
        "summary": "Getting the contents of the running environment variable group",
        "operationId": "gettingContentsOfRunningEnvironmentVariableGroup",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/gettingContentsOfRunningEnvironmentVariableGroupResponseResource"
            }
          }
        }
      },
      "put": {
        "description": "curl --insecure -i %s/v2/config/environment_variable_groups/running -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "environmentVariableGroups"
        ],
        "summary": "Updating the contents of the running environment variable group",
        "operationId": "updateContentsOfRunningEnvironmentVariableGroup",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateContentsOfRunningEnvironmentVariableGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/updateContentsOfRunningEnvironmentVariableGroupResponseResource"
            }
          }
        }
      }
    },
    "/config/environment_variable_groups/staging": {
      "get": {
        "description": "curl --insecure -i %s/v2/config/environment_variable_groups/staging -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "environmentVariableGroups"
        ],
        "summary": "Getting the contents of the staging environment variable group",
        "operationId": "gettingContentsOfStagingEnvironmentVariableGroup",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/gettingContentsOfStagingEnvironmentVariableGroupResponseResource"
            }
          }
        }
      },
      "put": {
        "description": "curl --insecure -i %s/v2/config/environment_variable_groups/staging -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "environmentVariableGroups"
        ],
        "summary": "Updating the contents of the staging environment variable group",
        "operationId": "updateContentsOfStagingEnvironmentVariableGroup",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateContentsOfStagingEnvironmentVariableGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/updateContentsOfStagingEnvironmentVariableGroupResponseResource"
            }
          }
        }
      }
    },
    "/config/feature_flags": {
      "get": {
        "description": "curl --insecure -i %s/v2/config/feature_flags -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "featureFlags"
        ],
        "summary": "Get all feature flags",
        "operationId": "getAllFeatureFlags",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/getAllFeatureFlagsResponseResource"
            }
          }
        }
      }
    },
    "/config/feature_flags/app_bits_upload": {
      "get": {
        "description": "curl --insecure -i %s/v2/config/feature_flags/app_bits_upload -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "featureFlags"
        ],
        "summary": "Get the App Bits Upload feature flag",
        "operationId": "getAppBitsUploadFeatureFlag",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/getAppBitsUploadFeatureFlagResponseResource"
            }
          }
        }
      }
    },
    "/config/feature_flags/app_scaling": {
      "get": {
        "description": "curl --insecure -i %s/v2/config/feature_flags/app_scaling -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "featureFlags"
        ],
        "summary": "Get the App Scaling feature flag",
        "operationId": "getAppScalingFeatureFlag",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/getAppScalingFeatureFlagResponseResource"
            }
          }
        }
      }
    },
    "/config/feature_flags/private_domain_creation": {
      "get": {
        "description": "curl --insecure -i %s/v2/config/feature_flags/private_domain_creation -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "featureFlags"
        ],
        "summary": "Get the Private Domain Creation feature flag",
        "operationId": "getPrivateDomainCreationFeatureFlag",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/getPrivateDomainCreationFeatureFlagResponseResource"
            }
          }
        }
      }
    },
    "/config/feature_flags/route_creation": {
      "get": {
        "description": "curl --insecure -i %s/v2/config/feature_flags/route_creation -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "featureFlags"
        ],
        "summary": "Get the Route Creation feature flag",
        "operationId": "getRouteCreationFeatureFlag",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/getRouteCreationFeatureFlagResponseResource"
            }
          }
        }
      }
    },
    "/config/feature_flags/service_instance_creation": {
      "get": {
        "description": "curl --insecure -i %s/v2/config/feature_flags/service_instance_creation -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "featureFlags"
        ],
        "summary": "Get the Service Instance Creation feature flag",
        "operationId": "getServiceInstanceCreationFeatureFlag",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/getServiceInstanceCreationFeatureFlagResponseResource"
            }
          }
        }
      }
    },
    "/config/feature_flags/user_org_creation": {
      "get": {
        "description": "curl --insecure -i %s/v2/config/feature_flags/user_org_creation -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "featureFlags"
        ],
        "summary": "Get the User Org Creation feature flag",
        "operationId": "getUserOrgCreationFeatureFlag",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/getUserOrgCreationFeatureFlagResponseResource"
            }
          }
        }
      }
    },
    "/config/feature_flags/{name}": {
      "put": {
        "description": "curl --insecure -i %s/v2/config/feature_flags/{name} -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "featureFlags"
        ],
        "summary": "Set a feature flag",
        "operationId": "setFeatureFlag",
        "parameters": [
          {
            "type": "string",
            "description": "The name parameter is used as a part of the request URL: '/v2/config/feature_flags/:name'",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/setFeatureFlagRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/setFeatureFlagResponseResource"
            }
          }
        }
      }
    },
    "/config/running_security_groups": {
      "get": {
        "description": "curl --insecure -i %s/v2/config/running_security_groups -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "securityGroupRunningDefaults"
        ],
        "summary": "Return the Security Groups used for running Apps",
        "operationId": "returnSecurityGroupsUsedForRunningApps",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/returnSecurityGroupsUsedForRunningAppsResponsePaged"
            }
          }
        }
      }
    },
    "/config/running_security_groups/{guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/config/running_security_groups/{guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "securityGroupRunningDefaults"
        ],
        "summary": "Set a Security Group as a default for running Apps",
        "operationId": "setSecurityGroupAsDefaultForRunningApps",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/config/running_security_groups/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/setSecurityGroupAsDefaultForRunningAppsResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/config/running_security_groups/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "securityGroupRunningDefaults"
        ],
        "summary": "Removing a Security Group as a default for running Apps",
        "operationId": "removingSecurityGroupAsDefaultForRunningApps",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/config/running_security_groups/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/config/staging_security_groups": {
      "get": {
        "description": "curl --insecure -i %s/v2/config/staging_security_groups -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "securityGroupStagingDefaults"
        ],
        "summary": "Return the Security Groups used for staging",
        "operationId": "returnSecurityGroupsUsedForStaging",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/returnSecurityGroupsUsedForStagingResponsePaged"
            }
          }
        }
      }
    },
    "/config/staging_security_groups/{guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/config/staging_security_groups/{guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "securityGroupStagingDefaults"
        ],
        "summary": "Set a Security Group as a default for staging",
        "operationId": "setSecurityGroupAsDefaultForStaging",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/config/staging_security_groups/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/setSecurityGroupAsDefaultForStagingResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/config/staging_security_groups/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "securityGroupStagingDefaults"
        ],
        "summary": "Removing a Security Group as a default for staging",
        "operationId": "removingSecurityGroupAsDefaultForStaging",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/config/staging_security_groups/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/domains": {
      "get": {
        "description": "curl --insecure -i %s/v2/domains -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "domainsDeprecated"
        ],
        "summary": "List all Domains (deprecated)",
        "operationId": "listAllDomainsDeprecated",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllDomainsDeprecatedResponsePaged"
            }
          }
        }
      },
      "post": {
        "description": "curl --insecure -i %s/v2/domains -X POST -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "domainsDeprecated"
        ],
        "summary": "creates a domain owned by the given organization (deprecated)",
        "operationId": "createsDomainOwnedByGivenOrganizationDeprecated",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createsDomainOwnedByGivenOrganizationDeprecatedRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/createsDomainOwnedByGivenOrganizationDeprecatedResponseResource"
            }
          }
        }
      }
    },
    "/domains/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/domains/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "domainsDeprecated"
        ],
        "summary": "Retrieve a Particular Domain (deprecated)",
        "operationId": "retrieveDomainDeprecated",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/domains/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveDomainDeprecatedResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/domains/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "domainsDeprecated"
        ],
        "summary": "Delete a Particular Domain (deprecated)",
        "operationId": "deleteDomainDeprecated",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/domains/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/domains/{guid}/spaces": {
      "get": {
        "description": "curl --insecure -i %s/v2/domains/{guid}/spaces -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "domainsDeprecated"
        ],
        "summary": "List all Spaces for the Domain (deprecated)",
        "operationId": "listAllSpacesForDomainDeprecated",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/domains/:guid/spaces'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllSpacesForDomainDeprecatedResponsePaged"
            }
          }
        }
      }
    },
    "/events": {
      "get": {
        "description": "curl --insecure -i %s/v2/events -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "events"
        ],
        "summary": "List Service Broker Delete Events (experimental)",
        "operationId": "listServiceBrokerDeleteEventsExperimental",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listServiceBrokerDeleteEventsExperimentalResponsePaged"
            }
          }
        }
      }
    },
    "/events/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/events/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "events"
        ],
        "summary": "Retrieve a Particular Event",
        "operationId": "retrieveEvent",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/events/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveEventResponseResource"
            }
          }
        }
      }
    },
    "/info": {
      "get": {
        "description": "curl --insecure -i %s/v2/info -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "info"
        ],
        "summary": "Get Info",
        "operationId": "getInfo",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/getInfoResponse"
            }
          }
        }
      }
    },
    "/jobs/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/jobs/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "jobs"
        ],
        "summary": "Retrieve Job that was successful",
        "operationId": "retrieveJobThatWasSuccessful",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/jobs/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveJobThatWasSuccessfulResponseResource"
            }
          }
        }
      }
    },
    "/organizations": {
      "get": {
        "description": "curl --insecure -i %s/v2/organizations -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "List all Organizations",
        "operationId": "listAllOrganizations",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllOrganizationsResponsePaged"
            }
          }
        }
      },
      "post": {
        "description": "curl --insecure -i %s/v2/organizations -X POST -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "Creating an Organization",
        "operationId": "createOrganization",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createOrganizationRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/createOrganizationResponseResource"
            }
          }
        }
      }
    },
    "/organizations/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/organizations/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "Retrieve a Particular Organization",
        "operationId": "retrieveOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveOrganizationResponseResource"
            }
          }
        }
      },
      "put": {
        "description": "curl --insecure -i %s/v2/organizations/{guid} -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "Update an Organization",
        "operationId": "updateOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateOrganizationRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/updateOrganizationResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/organizations/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "Delete a Particular Organization",
        "operationId": "deleteOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/organizations/{guid}/auditors": {
      "get": {
        "description": "curl --insecure -i %s/v2/organizations/{guid}/auditors -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "List all Auditors for the Organization",
        "operationId": "listAllAuditorsForOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid/auditors'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllAuditorsForOrganizationResponsePaged"
            }
          }
        }
      }
    },
    "/organizations/{guid}/auditors/{auditor_guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/organizations/{guid}/auditors/{auditor_guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "Associate Auditor with the Organization",
        "operationId": "associateAuditorWithOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid/auditors/:auditor_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The auditor_guid parameter is used as a part of the request URL: '/v2/organizations/:guid/auditors/:auditor_guid'",
            "name": "auditor_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/associateAuditorWithOrganizationResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/organizations/{guid}/auditors/{auditor_guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "Remove Auditor from the Organization",
        "operationId": "removeAuditorFromOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid/auditors/:auditor_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The auditor_guid parameter is used as a part of the request URL: '/v2/organizations/:guid/auditors/:auditor_guid'",
            "name": "auditor_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/removeAuditorFromOrganizationResponseResource"
            }
          }
        }
      }
    },
    "/organizations/{guid}/billing_managers": {
      "get": {
        "description": "curl --insecure -i %s/v2/organizations/{guid}/billing_managers -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "List all Billing Managers for the Organization",
        "operationId": "listAllBillingManagersForOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid/billing_managers'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllBillingManagersForOrganizationResponsePaged"
            }
          }
        }
      }
    },
    "/organizations/{guid}/billing_managers/{billing_manager_guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/organizations/{guid}/billing_managers/{billing_manager_guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "Associate Billing Manager with the Organization",
        "operationId": "associateBillingManagerWithOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid/billing_managers/:billing_manager_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The billing_manager_guid parameter is used as a part of the request URL: '/v2/organizations/:guid/billing_managers/:billing_manager_guid'",
            "name": "billing_manager_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/associateBillingManagerWithOrganizationResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/organizations/{guid}/billing_managers/{billing_manager_guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "Remove Billing Manager from the Organization",
        "operationId": "removeBillingManagerFromOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid/billing_managers/:billing_manager_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The billing_manager_guid parameter is used as a part of the request URL: '/v2/organizations/:guid/billing_managers/:billing_manager_guid'",
            "name": "billing_manager_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/removeBillingManagerFromOrganizationResponseResource"
            }
          }
        }
      }
    },
    "/organizations/{guid}/domains": {
      "get": {
        "description": "curl --insecure -i %s/v2/organizations/{guid}/domains -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "List all Domains for the Organization (deprecated)",
        "operationId": "listAllDomainsForOrganizationDeprecated",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid/domains'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllDomainsForOrganizationDeprecatedResponsePaged"
            }
          }
        }
      }
    },
    "/organizations/{guid}/managers": {
      "get": {
        "description": "curl --insecure -i %s/v2/organizations/{guid}/managers -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "List all Managers for the Organization",
        "operationId": "listAllManagersForOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid/managers'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllManagersForOrganizationResponsePaged"
            }
          }
        }
      }
    },
    "/organizations/{guid}/managers/{manager_guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/organizations/{guid}/managers/{manager_guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "Associate Manager with the Organization",
        "operationId": "associateManagerWithOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid/managers/:manager_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The manager_guid parameter is used as a part of the request URL: '/v2/organizations/:guid/managers/:manager_guid'",
            "name": "manager_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/associateManagerWithOrganizationResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/organizations/{guid}/managers/{manager_guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "Remove Manager from the Organization",
        "operationId": "removeManagerFromOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid/managers/:manager_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The manager_guid parameter is used as a part of the request URL: '/v2/organizations/:guid/managers/:manager_guid'",
            "name": "manager_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/removeManagerFromOrganizationResponseResource"
            }
          }
        }
      }
    },
    "/organizations/{guid}/memory_usage": {
      "get": {
        "description": "curl --insecure -i %s/v2/organizations/{guid}/memory_usage -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "Retrieving organization memory usage",
        "operationId": "retrievingOrganizationMemoryUsage",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid/memory_usage'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrievingOrganizationMemoryUsageResponseResource"
            }
          }
        }
      }
    },
    "/organizations/{guid}/private_domains": {
      "get": {
        "description": "curl --insecure -i %s/v2/organizations/{guid}/private_domains -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "List all Private Domains for the Organization",
        "operationId": "listAllPrivateDomainsForOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid/private_domains'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllPrivateDomainsForOrganizationResponsePaged"
            }
          }
        }
      }
    },
    "/organizations/{guid}/services": {
      "get": {
        "description": "curl --insecure -i %s/v2/organizations/{guid}/services -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "List all Services for the Organization",
        "operationId": "listAllServicesForOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid/services'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllServicesForOrganizationResponsePaged"
            }
          }
        }
      }
    },
    "/organizations/{guid}/space_quota_definitions": {
      "get": {
        "description": "curl --insecure -i %s/v2/organizations/{guid}/space_quota_definitions -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "List all Space Quota Definitions for the Organization",
        "operationId": "listAllSpaceQuotaDefinitionsForOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid/space_quota_definitions'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllSpaceQuotaDefinitionsForOrganizationResponsePaged"
            }
          }
        }
      }
    },
    "/organizations/{guid}/spaces": {
      "get": {
        "description": "curl --insecure -i %s/v2/organizations/{guid}/spaces -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "List all Spaces for the Organization",
        "operationId": "listAllSpacesForOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid/spaces'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllSpacesForOrganizationResponsePaged"
            }
          }
        }
      }
    },
    "/organizations/{guid}/summary": {
      "get": {
        "description": "curl --insecure -i %s/v2/organizations/{guid}/summary -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "Get Organization summary",
        "operationId": "getOrganizationSummary",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid/summary'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/getOrganizationSummaryResponseResource"
            }
          }
        }
      }
    },
    "/organizations/{guid}/users": {
      "get": {
        "description": "curl --insecure -i %s/v2/organizations/{guid}/users -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "List all Users for the Organization",
        "operationId": "listAllUsersForOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid/users'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllUsersForOrganizationResponsePaged"
            }
          }
        }
      }
    },
    "/organizations/{guid}/users/{user_guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/organizations/{guid}/users/{user_guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "Associate User with the Organization",
        "operationId": "associateUserWithOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid/users/:user_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The user_guid parameter is used as a part of the request URL: '/v2/organizations/:guid/users/:user_guid'",
            "name": "user_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/associateUserWithOrganizationResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/organizations/{guid}/users/{user_guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizations"
        ],
        "summary": "Remove User from the Organization",
        "operationId": "removeUserFromOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/organizations/:guid/users/:user_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The user_guid parameter is used as a part of the request URL: '/v2/organizations/:guid/users/:user_guid'",
            "name": "user_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/removeUserFromOrganizationResponseResource"
            }
          }
        }
      }
    },
    "/private_domains": {
      "get": {
        "description": "curl --insecure -i %s/v2/private_domains -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "privateDomains"
        ],
        "summary": "Filtering Private Domains by name",
        "operationId": "filterPrivateDomainsByName",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/filterPrivateDomainsByNameResponsePaged"
            }
          }
        }
      },
      "post": {
        "description": "curl --insecure -i %s/v2/private_domains -X POST -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "privateDomains"
        ],
        "summary": "Create a Private Domain owned by the given Organization",
        "operationId": "createPrivateDomainOwnedByGivenOrganization",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createPrivateDomainOwnedByGivenOrganizationRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/createPrivateDomainOwnedByGivenOrganizationResponseResource"
            }
          }
        }
      }
    },
    "/private_domains/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/private_domains/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "privateDomains"
        ],
        "summary": "Retrieve a Particular Private Domain",
        "operationId": "retrievePrivateDomain",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/private_domains/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrievePrivateDomainResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/private_domains/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "privateDomains"
        ],
        "summary": "Delete a Particular Private Domain",
        "operationId": "deletePrivateDomain",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/private_domains/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/quota_definitions": {
      "get": {
        "description": "curl --insecure -i %s/v2/quota_definitions -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizationQuotaDefinitions"
        ],
        "summary": "List all Organization Quota Definitions",
        "operationId": "listAllOrganizationQuotaDefinitions",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllOrganizationQuotaDefinitionsResponsePaged"
            }
          }
        }
      },
      "post": {
        "description": "curl --insecure -i %s/v2/quota_definitions -X POST -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizationQuotaDefinitions"
        ],
        "summary": "Creating a Organization Quota Definition",
        "operationId": "createOrganizationQuotaDefinition",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createOrganizationQuotaDefinitionRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/createOrganizationQuotaDefinitionResponseResource"
            }
          }
        }
      }
    },
    "/quota_definitions/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/quota_definitions/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizationQuotaDefinitions"
        ],
        "summary": "Retrieve a Particular Organization Quota Definition",
        "operationId": "retrieveOrganizationQuotaDefinition",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/quota_definitions/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveOrganizationQuotaDefinitionResponseResource"
            }
          }
        }
      },
      "put": {
        "description": "curl --insecure -i %s/v2/quota_definitions/{guid} -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizationQuotaDefinitions"
        ],
        "summary": "Updating a Organization Quota Definition",
        "operationId": "updateOrganizationQuotaDefinition",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/quota_definitions/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateOrganizationQuotaDefinitionRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/updateOrganizationQuotaDefinitionResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/quota_definitions/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "organizationQuotaDefinitions"
        ],
        "summary": "Delete a Particular Organization Quota Definition",
        "operationId": "deleteOrganizationQuotaDefinition",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/quota_definitions/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/resource_match": {
      "put": {
        "description": "curl --insecure -i %s/v2/resource_match -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "resourceMatch"
        ],
        "summary": "List all matching resources",
        "operationId": "listAllMatchingResources",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/listAllMatchingResourcesRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/listAllMatchingResourcesResponse"
              }
            }
          }
        }
      }
    },
    "/routes": {
      "get": {
        "description": "curl --insecure -i %s/v2/routes -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "routes"
        ],
        "summary": "List all Routes",
        "operationId": "listAllRoutes",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllRoutesResponsePaged"
            }
          }
        }
      },
      "post": {
        "description": "curl --insecure -i %s/v2/routes -X POST -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "routes"
        ],
        "summary": "Creating a Route",
        "operationId": "createRoute",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createRouteRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/createRouteResponseResource"
            }
          }
        }
      }
    },
    "/routes/reserved/domain/{domain_guid}/host/{host}": {
      "get": {
        "description": "curl --insecure -i %s/v2/routes/reserved/domain/{domain_guid}/host/{host} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "routes"
        ],
        "summary": "Check a Route exists",
        "operationId": "checkRouteExists",
        "parameters": [
          {
            "type": "string",
            "description": "The domain_guid parameter is used as a part of the request URL: '/v2/routes/reserved/domain/:domain_guid/host/:host'",
            "name": "domain_guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The host parameter is used as a part of the request URL: '/v2/routes/reserved/domain/:domain_guid/host/:host'",
            "name": "host",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/routes/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/routes/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "routes"
        ],
        "summary": "Retrieve a Particular Route",
        "operationId": "retrieveRoute",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/routes/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveRouteResponseResource"
            }
          }
        }
      },
      "put": {
        "description": "curl --insecure -i %s/v2/routes/{guid} -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "routes"
        ],
        "summary": "Update a Route",
        "operationId": "updateRoute",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/routes/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateRouteRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/updateRouteResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/routes/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "routes"
        ],
        "summary": "Delete a Particular Route",
        "operationId": "deleteRoute",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/routes/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/routes/{guid}/apps": {
      "get": {
        "description": "curl --insecure -i %s/v2/routes/{guid}/apps -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "routes"
        ],
        "summary": "List all Apps for the Route",
        "operationId": "listAllAppsForRoute",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/routes/:guid/apps'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllAppsForRouteResponsePaged"
            }
          }
        }
      }
    },
    "/routes/{guid}/apps/{app_guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/routes/{guid}/apps/{app_guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "routes"
        ],
        "summary": "Associate App with the Route",
        "operationId": "associateAppWithRoute",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/routes/:guid/apps/:app_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The app_guid parameter is used as a part of the request URL: '/v2/routes/:guid/apps/:app_guid'",
            "name": "app_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/associateAppWithRouteResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/routes/{guid}/apps/{app_guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "routes"
        ],
        "summary": "Remove App from the Route",
        "operationId": "removeAppFromRoute",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/routes/:guid/apps/:app_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The app_guid parameter is used as a part of the request URL: '/v2/routes/:guid/apps/:app_guid'",
            "name": "app_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/removeAppFromRouteResponseResource"
            }
          }
        }
      }
    },
    "/security_groups": {
      "get": {
        "description": "curl --insecure -i %s/v2/security_groups -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "securityGroups"
        ],
        "summary": "List all Security Groups",
        "operationId": "listAllSecurityGroups",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllSecurityGroupsResponsePaged"
            }
          }
        }
      },
      "post": {
        "description": "curl --insecure -i %s/v2/security_groups -X POST -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "securityGroups"
        ],
        "summary": "Creating a Security Group",
        "operationId": "createSecurityGroup",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createSecurityGroupRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/createSecurityGroupResponseResource"
            }
          }
        }
      }
    },
    "/security_groups/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/security_groups/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "securityGroups"
        ],
        "summary": "Retrieve a Particular Security Group",
        "operationId": "retrieveSecurityGroup",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/security_groups/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveSecurityGroupResponseResource"
            }
          }
        }
      },
      "put": {
        "description": "curl --insecure -i %s/v2/security_groups/{guid} -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "securityGroups"
        ],
        "summary": "Updating a Security Group",
        "operationId": "updateSecurityGroup",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/security_groups/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateSecurityGroupRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/updateSecurityGroupResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/security_groups/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "securityGroups"
        ],
        "summary": "Delete a Particular Security Group",
        "operationId": "deleteSecurityGroup",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/security_groups/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/security_groups/{guid}/spaces": {
      "get": {
        "description": "curl --insecure -i %s/v2/security_groups/{guid}/spaces -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "securityGroups"
        ],
        "summary": "List all Spaces for the Security Group",
        "operationId": "listAllSpacesForSecurityGroup",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/security_groups/:guid/spaces'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllSpacesForSecurityGroupResponsePaged"
            }
          }
        }
      }
    },
    "/security_groups/{guid}/spaces/{space_guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/security_groups/{guid}/spaces/{space_guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "securityGroups"
        ],
        "summary": "Associate Space with the Security Group",
        "operationId": "associateSpaceWithSecurityGroup",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/security_groups/:guid/spaces/:space_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The space_guid parameter is used as a part of the request URL: '/v2/security_groups/:guid/spaces/:space_guid'",
            "name": "space_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/associateSpaceWithSecurityGroupResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/security_groups/{guid}/spaces/{space_guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "securityGroups"
        ],
        "summary": "Remove Space from the Security Group",
        "operationId": "removeSpaceFromSecurityGroup",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/security_groups/:guid/spaces/:space_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The space_guid parameter is used as a part of the request URL: '/v2/security_groups/:guid/spaces/:space_guid'",
            "name": "space_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/removeSpaceFromSecurityGroupResponseResource"
            }
          }
        }
      }
    },
    "/service_auth_tokens": {
      "get": {
        "description": "curl --insecure -i %s/v2/service_auth_tokens -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceAuthTokensDeprecated"
        ],
        "summary": "Filtering the result set by label (deprecated)",
        "operationId": "filterResultSetByLabelDeprecated",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/filterResultSetByLabelDeprecatedResponsePaged"
            }
          }
        }
      }
    },
    "/service_auth_tokens/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/service_auth_tokens/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceAuthTokensDeprecated"
        ],
        "summary": "Retrieve a Particular Service Auth Token (deprecated)",
        "operationId": "retrieveServiceAuthTokenDeprecated",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/service_auth_tokens/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveServiceAuthTokenDeprecatedResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/service_auth_tokens/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceAuthTokensDeprecated"
        ],
        "summary": "Delete a Particular Service Auth Token (deprecated)",
        "operationId": "deleteServiceAuthTokenDeprecated",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/service_auth_tokens/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/service_bindings": {
      "get": {
        "description": "curl --insecure -i %s/v2/service_bindings -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceBindings"
        ],
        "summary": "List all Service Bindings",
        "operationId": "listAllServiceBindings",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllServiceBindingsResponsePaged"
            }
          }
        }
      },
      "post": {
        "description": "curl --insecure -i %s/v2/service_bindings -X POST -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceBindings"
        ],
        "summary": "Create a Service Binding",
        "operationId": "createServiceBinding",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createServiceBindingRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/createServiceBindingResponseResource"
            }
          }
        }
      }
    },
    "/service_bindings/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/service_bindings/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceBindings"
        ],
        "summary": "Retrieve a Particular Service Binding",
        "operationId": "retrieveServiceBinding",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/service_bindings/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveServiceBindingResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/service_bindings/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceBindings"
        ],
        "summary": "Delete a Particular Service Binding",
        "operationId": "deleteServiceBinding",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/service_bindings/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/service_brokers": {
      "get": {
        "description": "curl --insecure -i %s/v2/service_brokers -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceBrokers"
        ],
        "summary": "List all Service Brokers",
        "operationId": "listAllServiceBrokers",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllServiceBrokersResponsePaged"
            }
          }
        }
      },
      "post": {
        "description": "curl --insecure -i %s/v2/service_brokers -X POST -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceBrokers"
        ],
        "summary": "Create a Service Broker",
        "operationId": "createServiceBroker",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createServiceBrokerRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/createServiceBrokerResponseResource"
            }
          }
        }
      }
    },
    "/service_brokers/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/service_brokers/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceBrokers"
        ],
        "summary": "Retrieve a Particular Service Broker",
        "operationId": "retrieveServiceBroker",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/service_brokers/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveServiceBrokerResponseResource"
            }
          }
        }
      },
      "put": {
        "description": "curl --insecure -i %s/v2/service_brokers/{guid} -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceBrokers"
        ],
        "summary": "Update a Service Broker",
        "operationId": "updateServiceBroker",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/service_brokers/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateServiceBrokerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/updateServiceBrokerResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/service_brokers/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceBrokers"
        ],
        "summary": "Delete a Particular Service Broker",
        "operationId": "deleteServiceBroker",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/service_brokers/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/service_instances": {
      "get": {
        "description": "curl --insecure -i %s/v2/service_instances -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceInstances"
        ],
        "summary": "List all Service Instances",
        "operationId": "listAllServiceInstances",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllServiceInstancesResponsePaged"
            }
          }
        }
      },
      "post": {
        "description": "curl --insecure -i %s/v2/service_instances -X POST -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceInstances"
        ],
        "summary": "Creating a Service Instance",
        "operationId": "createServiceInstance",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createServiceInstanceRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/createServiceInstanceResponseResource"
            }
          }
        }
      }
    },
    "/service_instances/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/service_instances/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceInstances"
        ],
        "summary": "Retrieve a Particular Service Instance",
        "operationId": "retrieveServiceInstance",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/service_instances/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveServiceInstanceResponseResource"
            }
          }
        }
      },
      "put": {
        "description": "curl --insecure -i %s/v2/service_instances/{guid} -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceInstances"
        ],
        "summary": "Updating a service instance",
        "operationId": "updateServiceInstance",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/service_instances/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateServiceInstanceRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/updateServiceInstanceResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/service_instances/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceInstances"
        ],
        "summary": "Delete a Particular Service Instance",
        "operationId": "deleteServiceInstance",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/service_instances/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/service_instances/{guid}/permissions": {
      "get": {
        "description": "curl --insecure -i %s/v2/service_instances/{guid}/permissions -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceInstances"
        ],
        "summary": "Retrieving permissions on a Service Instance",
        "operationId": "retrievingPermissionsOnServiceInstance",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/service_instances/:guid/permissions'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrievingPermissionsOnServiceInstanceResponseResource"
            }
          }
        }
      }
    },
    "/service_instances/{guid}/service_bindings": {
      "get": {
        "description": "curl --insecure -i %s/v2/service_instances/{guid}/service_bindings -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceInstances"
        ],
        "summary": "List all Service Bindings for the Service Instance",
        "operationId": "listAllServiceBindingsForServiceInstance",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/service_instances/:guid/service_bindings'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllServiceBindingsForServiceInstanceResponsePaged"
            }
          }
        }
      }
    },
    "/service_plan_visibilities": {
      "get": {
        "description": "curl --insecure -i %s/v2/service_plan_visibilities -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "servicePlanVisibilities"
        ],
        "summary": "List all Service Plan Visibilities",
        "operationId": "listAllServicePlanVisibilities",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllServicePlanVisibilitiesResponsePaged"
            }
          }
        }
      },
      "post": {
        "description": "curl --insecure -i %s/v2/service_plan_visibilities -X POST -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "servicePlanVisibilities"
        ],
        "summary": "Creating a Service Plan Visibility",
        "operationId": "createServicePlanVisibility",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createServicePlanVisibilityRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/createServicePlanVisibilityResponseResource"
            }
          }
        }
      }
    },
    "/service_plan_visibilities/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/service_plan_visibilities/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "servicePlanVisibilities"
        ],
        "summary": "Retrieve a Particular Service Plan Visibility",
        "operationId": "retrieveServicePlanVisibility",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/service_plan_visibilities/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveServicePlanVisibilityResponseResource"
            }
          }
        }
      },
      "put": {
        "description": "curl --insecure -i %s/v2/service_plan_visibilities/{guid} -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "servicePlanVisibilities"
        ],
        "summary": "Updating a Service Plan Visibility",
        "operationId": "updateServicePlanVisibility",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/service_plan_visibilities/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateServicePlanVisibilityRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/updateServicePlanVisibilityResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/service_plan_visibilities/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "servicePlanVisibilities"
        ],
        "summary": "Delete a Particular Service Plan Visibilities",
        "operationId": "deleteServicePlanVisibilities",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/service_plan_visibilities/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/service_plans": {
      "get": {
        "description": "curl --insecure -i %s/v2/service_plans -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "servicePlans"
        ],
        "summary": "List all Service Plans",
        "operationId": "listAllServicePlans",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllServicePlansResponsePaged"
            }
          }
        }
      },
      "put": {
        "description": "curl --insecure -i %s/v2/service_plans -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "servicePlans"
        ],
        "summary": "Updating a Service Plan (deprecated)",
        "operationId": "updateServicePlanDeprecated",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateServicePlanDeprecatedRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/updateServicePlanDeprecatedResponseResource"
            }
          }
        }
      },
      "post": {
        "description": "curl --insecure -i %s/v2/service_plans -X POST -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "servicePlans"
        ],
        "summary": "Creating a Service Plan (deprecated)",
        "operationId": "createServicePlanDeprecated",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createServicePlanDeprecatedRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/createServicePlanDeprecatedResponseResource"
            }
          }
        }
      }
    },
    "/service_plans/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/service_plans/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "servicePlans"
        ],
        "summary": "Retrieve a Particular Service Plan",
        "operationId": "retrieveServicePlan",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/service_plans/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveServicePlanResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/service_plans/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "servicePlans"
        ],
        "summary": "Delete a Particular Service Plans",
        "operationId": "deleteServicePlans",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/service_plans/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/service_plans/{guid}/service_instances": {
      "put": {
        "description": "curl --insecure -i %s/v2/service_plans/{guid}/service_instances -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceInstances"
        ],
        "summary": "Migrate Service Instances from one Service Plan to another Service Plan (experimental)",
        "operationId": "migrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimental",
        "parameters": [
          {
            "type": "string",
            "description": "The service_plan_guid parameter is used as a part of the request URL: '/v2/service_plans/:service_plan_guid/service_instances'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/migrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/migrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalResponseResource"
            }
          }
        }
      }
    },
    "/service_usage_events": {
      "get": {
        "description": "curl --insecure -i %s/v2/service_usage_events -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceUsageEventsExperimental"
        ],
        "summary": "List Service Usage Events",
        "operationId": "listServiceUsageEvents",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listServiceUsageEventsResponsePaged"
            }
          }
        }
      }
    },
    "/service_usage_events/destructively_purge_all_and_reseed_existing_instances": {
      "post": {
        "description": "curl --insecure -i %s/v2/service_usage_events/destructively_purge_all_and_reseed_existing_instances -X POST -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceUsageEventsExperimental"
        ],
        "summary": "Purge and reseed Service Usage Events",
        "operationId": "purgeAndReseedServiceUsageEvents",
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/service_usage_events/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/service_usage_events/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "serviceUsageEventsExperimental"
        ],
        "summary": "Retrieve a Particular Service Usage Event",
        "operationId": "retrieveServiceUsageEvent",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/service_usage_events/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveServiceUsageEventResponseResource"
            }
          }
        }
      }
    },
    "/services": {
      "get": {
        "description": "curl --insecure -i %s/v2/services -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "services"
        ],
        "summary": "List all Services",
        "operationId": "listAllServices",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllServicesResponsePaged"
            }
          }
        }
      },
      "put": {
        "description": "curl --insecure -i %s/v2/services -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "services"
        ],
        "summary": "Updating a Service (deprecated)",
        "operationId": "updateServiceDeprecated",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateServiceDeprecatedRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/updateServiceDeprecatedResponseResource"
            }
          }
        }
      },
      "post": {
        "description": "curl --insecure -i %s/v2/services -X POST -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "services"
        ],
        "summary": "Creating a Service (deprecated)",
        "operationId": "createServiceDeprecated",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createServiceDeprecatedRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/createServiceDeprecatedResponseResource"
            }
          }
        }
      }
    },
    "/services/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/services/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "services"
        ],
        "summary": "Retrieve a Particular Service",
        "operationId": "retrieveService",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/services/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveServiceResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/services/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "services"
        ],
        "summary": "Delete a Particular Service",
        "operationId": "deleteService",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/services/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/services/{guid}/service_plans": {
      "get": {
        "description": "curl --insecure -i %s/v2/services/{guid}/service_plans -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "services"
        ],
        "summary": "List all Service Plans for the Service",
        "operationId": "listAllServicePlansForService",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/services/:guid/service_plans'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllServicePlansForServiceResponsePaged"
            }
          }
        }
      }
    },
    "/shared_domains": {
      "get": {
        "description": "curl --insecure -i %s/v2/shared_domains -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "sharedDomains"
        ],
        "summary": "List all Shared Domains",
        "operationId": "listAllSharedDomains",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllSharedDomainsResponsePaged"
            }
          }
        }
      },
      "post": {
        "description": "curl --insecure -i %s/v2/shared_domains -X POST -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "sharedDomains"
        ],
        "summary": "Create a Shared Domain",
        "operationId": "createSharedDomain",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createSharedDomainRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/createSharedDomainResponseResource"
            }
          }
        }
      }
    },
    "/shared_domains/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/shared_domains/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "sharedDomains"
        ],
        "summary": "Retrieve a Particular Shared Domain",
        "operationId": "retrieveSharedDomain",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/shared_domains/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveSharedDomainResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/shared_domains/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "sharedDomains"
        ],
        "summary": "Delete a Particular Shared Domain",
        "operationId": "deleteSharedDomain",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/shared_domains/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/space_quota_definitions": {
      "get": {
        "description": "curl --insecure -i %s/v2/space_quota_definitions -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaceQuotaDefinitions"
        ],
        "summary": "List all Space Quota Definitions",
        "operationId": "listAllSpaceQuotaDefinitions",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllSpaceQuotaDefinitionsResponsePaged"
            }
          }
        }
      },
      "post": {
        "description": "curl --insecure -i %s/v2/space_quota_definitions -X POST -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaceQuotaDefinitions"
        ],
        "summary": "Creating a Space Quota Definition",
        "operationId": "createSpaceQuotaDefinition",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createSpaceQuotaDefinitionRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/createSpaceQuotaDefinitionResponseResource"
            }
          }
        }
      }
    },
    "/space_quota_definitions/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/space_quota_definitions/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaceQuotaDefinitions"
        ],
        "summary": "Retrieve a Particular Space Quota Definition",
        "operationId": "retrieveSpaceQuotaDefinition",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/space_quota_definitions/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveSpaceQuotaDefinitionResponseResource"
            }
          }
        }
      },
      "put": {
        "description": "curl --insecure -i %s/v2/space_quota_definitions/{guid} -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaceQuotaDefinitions"
        ],
        "summary": "Updating a Space Quota Definition",
        "operationId": "updateSpaceQuotaDefinition",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/space_quota_definitions/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateSpaceQuotaDefinitionRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/updateSpaceQuotaDefinitionResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/space_quota_definitions/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaceQuotaDefinitions"
        ],
        "summary": "Delete a Particular Space Quota Definition",
        "operationId": "deleteSpaceQuotaDefinition",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/space_quota_definitions/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/space_quota_definitions/{guid}/spaces": {
      "get": {
        "description": "curl --insecure -i %s/v2/space_quota_definitions/{guid}/spaces -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaceQuotaDefinitions"
        ],
        "summary": "List all Spaces for the Space Quota Definition",
        "operationId": "listAllSpacesForSpaceQuotaDefinition",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/space_quota_definitions/:guid/spaces'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllSpacesForSpaceQuotaDefinitionResponsePaged"
            }
          }
        }
      }
    },
    "/space_quota_definitions/{guid}/spaces/{space_guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/space_quota_definitions/{guid}/spaces/{space_guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaceQuotaDefinitions"
        ],
        "summary": "Associate Space with the Space Quota Definition",
        "operationId": "associateSpaceWithSpaceQuotaDefinition",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/space_quota_definitions/:guid/spaces/:space_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The space_guid parameter is used as a part of the request URL: '/v2/space_quota_definitions/:guid/spaces/:space_guid'",
            "name": "space_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/associateSpaceWithSpaceQuotaDefinitionResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/space_quota_definitions/{guid}/spaces/{space_guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaceQuotaDefinitions"
        ],
        "summary": "Remove Space from the Space Quota Definition",
        "operationId": "removeSpaceFromSpaceQuotaDefinition",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/space_quota_definitions/:guid/spaces/:space_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The space_guid parameter is used as a part of the request URL: '/v2/space_quota_definitions/:guid/spaces/:space_guid'",
            "name": "space_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/removeSpaceFromSpaceQuotaDefinitionResponseResource"
            }
          }
        }
      }
    },
    "/spaces": {
      "get": {
        "description": "curl --insecure -i %s/v2/spaces -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "List all Spaces",
        "operationId": "listAllSpaces",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllSpacesResponsePaged"
            }
          }
        }
      },
      "post": {
        "description": "curl --insecure -i %s/v2/spaces -X POST -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "Creating a Space",
        "operationId": "createSpace",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createSpaceRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/createSpaceResponseResource"
            }
          }
        }
      }
    },
    "/spaces/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/spaces/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "Retrieve a Particular Space",
        "operationId": "retrieveSpace",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveSpaceResponseResource"
            }
          }
        }
      },
      "put": {
        "description": "curl --insecure -i %s/v2/spaces/{guid} -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "Update a Space",
        "operationId": "updateSpace",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateSpaceRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/updateSpaceResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/spaces/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "Delete a Particular Space",
        "operationId": "deleteSpace",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/spaces/{guid}/apps": {
      "get": {
        "description": "curl --insecure -i %s/v2/spaces/{guid}/apps -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "List all Apps for the Space",
        "operationId": "listAllAppsForSpace",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid/apps'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllAppsForSpaceResponsePaged"
            }
          }
        }
      }
    },
    "/spaces/{guid}/auditors": {
      "get": {
        "description": "curl --insecure -i %s/v2/spaces/{guid}/auditors -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "List all Auditors for the Space",
        "operationId": "listAllAuditorsForSpace",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid/auditors'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllAuditorsForSpaceResponsePaged"
            }
          }
        }
      }
    },
    "/spaces/{guid}/auditors/{auditor_guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/spaces/{guid}/auditors/{auditor_guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "Associate Auditor with the Space",
        "operationId": "associateAuditorWithSpace",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid/auditors/:auditor_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The auditor_guid parameter is used as a part of the request URL: '/v2/spaces/:guid/auditors/:auditor_guid'",
            "name": "auditor_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/associateAuditorWithSpaceResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/spaces/{guid}/auditors/{auditor_guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "Remove Auditor from the Space",
        "operationId": "removeAuditorFromSpace",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid/auditors/:auditor_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The auditor_guid parameter is used as a part of the request URL: '/v2/spaces/:guid/auditors/:auditor_guid'",
            "name": "auditor_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/removeAuditorFromSpaceResponseResource"
            }
          }
        }
      }
    },
    "/spaces/{guid}/developers": {
      "get": {
        "description": "curl --insecure -i %s/v2/spaces/{guid}/developers -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "List all Developers for the Space",
        "operationId": "listAllDevelopersForSpace",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid/developers'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllDevelopersForSpaceResponsePaged"
            }
          }
        }
      }
    },
    "/spaces/{guid}/developers/{developer_guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/spaces/{guid}/developers/{developer_guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "Associate Developer with the Space",
        "operationId": "associateDeveloperWithSpace",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid/developers/:developer_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The developer_guid parameter is used as a part of the request URL: '/v2/spaces/:guid/developers/:developer_guid'",
            "name": "developer_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/associateDeveloperWithSpaceResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/spaces/{guid}/developers/{developer_guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "Remove Developer from the Space",
        "operationId": "removeDeveloperFromSpace",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid/developers/:developer_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The developer_guid parameter is used as a part of the request URL: '/v2/spaces/:guid/developers/:developer_guid'",
            "name": "developer_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/removeDeveloperFromSpaceResponseResource"
            }
          }
        }
      }
    },
    "/spaces/{guid}/domains": {
      "get": {
        "description": "curl --insecure -i %s/v2/spaces/{guid}/domains -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "List all Domains for the Space (deprecated)",
        "operationId": "listAllDomainsForSpaceDeprecated",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid/domains'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllDomainsForSpaceDeprecatedResponsePaged"
            }
          }
        }
      }
    },
    "/spaces/{guid}/events": {
      "get": {
        "description": "curl --insecure -i %s/v2/spaces/{guid}/events -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "List all Events for the Space",
        "operationId": "listAllEventsForSpace",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid/events'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllEventsForSpaceResponsePaged"
            }
          }
        }
      }
    },
    "/spaces/{guid}/managers": {
      "get": {
        "description": "curl --insecure -i %s/v2/spaces/{guid}/managers -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "List all Managers for the Space",
        "operationId": "listAllManagersForSpace",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid/managers'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllManagersForSpaceResponsePaged"
            }
          }
        }
      }
    },
    "/spaces/{guid}/managers/{manager_guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/spaces/{guid}/managers/{manager_guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "Associate Manager with the Space",
        "operationId": "associateManagerWithSpace",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid/managers/:manager_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The manager_guid parameter is used as a part of the request URL: '/v2/spaces/:guid/managers/:manager_guid'",
            "name": "manager_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/associateManagerWithSpaceResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/spaces/{guid}/managers/{manager_guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "Remove Manager from the Space",
        "operationId": "removeManagerFromSpace",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid/managers/:manager_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The manager_guid parameter is used as a part of the request URL: '/v2/spaces/:guid/managers/:manager_guid'",
            "name": "manager_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/removeManagerFromSpaceResponseResource"
            }
          }
        }
      }
    },
    "/spaces/{guid}/routes": {
      "get": {
        "description": "curl --insecure -i %s/v2/spaces/{guid}/routes -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "List all Routes for the Space",
        "operationId": "listAllRoutesForSpace",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid/routes'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllRoutesForSpaceResponsePaged"
            }
          }
        }
      }
    },
    "/spaces/{guid}/security_groups": {
      "get": {
        "description": "curl --insecure -i %s/v2/spaces/{guid}/security_groups -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "List all Security Groups for the Space",
        "operationId": "listAllSecurityGroupsForSpace",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid/security_groups'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllSecurityGroupsForSpaceResponsePaged"
            }
          }
        }
      }
    },
    "/spaces/{guid}/security_groups/{security_group_guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/spaces/{guid}/security_groups/{security_group_guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "Associate Security Group with the Space",
        "operationId": "associateSecurityGroupWithSpace",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid/security_groups/:security_group_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The security_group_guid parameter is used as a part of the request URL: '/v2/spaces/:guid/security_groups/:security_group_guid'",
            "name": "security_group_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/associateSecurityGroupWithSpaceResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/spaces/{guid}/security_groups/{security_group_guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "Remove Security Group from the Space",
        "operationId": "removeSecurityGroupFromSpace",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid/security_groups/:security_group_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The security_group_guid parameter is used as a part of the request URL: '/v2/spaces/:guid/security_groups/:security_group_guid'",
            "name": "security_group_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/removeSecurityGroupFromSpaceResponseResource"
            }
          }
        }
      }
    },
    "/spaces/{guid}/service_instances": {
      "get": {
        "description": "curl --insecure -i %s/v2/spaces/{guid}/service_instances -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "List all Service Instances for the Space",
        "operationId": "listAllServiceInstancesForSpace",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid/service_instances'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllServiceInstancesForSpaceResponsePaged"
            }
          }
        }
      }
    },
    "/spaces/{guid}/services": {
      "get": {
        "description": "curl --insecure -i %s/v2/spaces/{guid}/services -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "List all Services for the Space",
        "operationId": "listAllServicesForSpace",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid/services'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllServicesForSpaceResponsePaged"
            }
          }
        }
      }
    },
    "/spaces/{guid}/summary": {
      "get": {
        "description": "curl --insecure -i %s/v2/spaces/{guid}/summary -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "spaces"
        ],
        "summary": "Get Space summary",
        "operationId": "getSpaceSummary",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/spaces/:guid/summary'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/getSpaceSummaryResponseResource"
            }
          }
        }
      }
    },
    "/stacks": {
      "get": {
        "description": "curl --insecure -i %s/v2/stacks -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "stacks"
        ],
        "summary": "List all Stacks",
        "operationId": "listAllStacks",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllStacksResponsePaged"
            }
          }
        }
      }
    },
    "/stacks/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/stacks/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "stacks"
        ],
        "summary": "Retrieve a Particular Stack",
        "operationId": "retrieveStack",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/stacks/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveStackResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/stacks/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "stacks"
        ],
        "summary": "Delete a Particular Stack",
        "operationId": "deleteStack",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/stacks/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/user_provided_service_instances": {
      "get": {
        "description": "curl --insecure -i %s/v2/user_provided_service_instances -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "userProvidedServiceInstances"
        ],
        "summary": "List all User Provided Service Instances",
        "operationId": "listAllUserProvidedServiceInstances",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllUserProvidedServiceInstancesResponsePaged"
            }
          }
        }
      },
      "post": {
        "description": "curl --insecure -i %s/v2/user_provided_service_instances -X POST -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "userProvidedServiceInstances"
        ],
        "summary": "Creating a User Provided Service Instance",
        "operationId": "createUserProvidedServiceInstance",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createUserProvidedServiceInstanceRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/createUserProvidedServiceInstanceResponseResource"
            }
          }
        }
      }
    },
    "/user_provided_service_instances/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/user_provided_service_instances/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "userProvidedServiceInstances"
        ],
        "summary": "Retrieve a Particular User Provided Service Instance",
        "operationId": "retrieveUserProvidedServiceInstance",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/user_provided_service_instances/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveUserProvidedServiceInstanceResponseResource"
            }
          }
        }
      },
      "put": {
        "description": "curl --insecure -i %s/v2/user_provided_service_instances/{guid} -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "userProvidedServiceInstances"
        ],
        "summary": "Updating a User Provided Service Instance",
        "operationId": "updateUserProvidedServiceInstance",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/user_provided_service_instances/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateUserProvidedServiceInstanceRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/updateUserProvidedServiceInstanceResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/user_provided_service_instances/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "userProvidedServiceInstances"
        ],
        "summary": "Delete a Particular User Provided Service Instance",
        "operationId": "deleteUserProvidedServiceInstance",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/user_provided_service_instances/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/user_provided_service_instances/{guid}/service_bindings": {
      "get": {
        "description": "curl --insecure -i %s/v2/user_provided_service_instances/{guid}/service_bindings -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "userProvidedServiceInstances"
        ],
        "summary": "List all Service Bindings for the User Provided Service Instance",
        "operationId": "listAllServiceBindingsForUserProvidedServiceInstance",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/user_provided_service_instances/:guid/service_bindings'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllServiceBindingsForUserProvidedServiceInstanceResponsePaged"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "description": "curl --insecure -i %s/v2/users -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "List all Users",
        "operationId": "listAllUsers",
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllUsersResponsePaged"
            }
          }
        }
      },
      "post": {
        "description": "curl --insecure -i %s/v2/users -X POST -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Creating a User",
        "operationId": "createUser",
        "parameters": [
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createUserRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/createUserResponseResource"
            }
          }
        }
      }
    },
    "/users/{guid}": {
      "get": {
        "description": "curl --insecure -i %s/v2/users/{guid} -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Retrieve a Particular User",
        "operationId": "retrieveUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/retrieveUserResponseResource"
            }
          }
        }
      },
      "put": {
        "description": "curl --insecure -i %s/v2/users/{guid} -X PUT -H 'Authorization: %s' -d '%s'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Updating a User",
        "operationId": "updateUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "description": "An object instance that is serialized and sent as the request body.",
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateUserRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/updateUserResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/users/{guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Delete a Particular User",
        "operationId": "deleteUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successful response"
          }
        }
      }
    },
    "/users/{guid}/audited_organizations": {
      "get": {
        "description": "curl --insecure -i %s/v2/users/{guid}/audited_organizations -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "List all Audited Organizations for the User",
        "operationId": "listAllAuditedOrganizationsForUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/audited_organizations'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllAuditedOrganizationsForUserResponsePaged"
            }
          }
        }
      }
    },
    "/users/{guid}/audited_organizations/{audited_organization_guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/users/{guid}/audited_organizations/{audited_organization_guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Associate Audited Organization with the User",
        "operationId": "associateAuditedOrganizationWithUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/audited_organizations/:audited_organization_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The audited_organization_guid parameter is used as a part of the request URL: '/v2/users/:guid/audited_organizations/:audited_organization_guid'",
            "name": "audited_organization_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/associateAuditedOrganizationWithUserResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/users/{guid}/audited_organizations/{audited_organization_guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Remove Audited Organization from the User",
        "operationId": "removeAuditedOrganizationFromUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/audited_organizations/:audited_organization_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The audited_organization_guid parameter is used as a part of the request URL: '/v2/users/:guid/audited_organizations/:audited_organization_guid'",
            "name": "audited_organization_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/removeAuditedOrganizationFromUserResponseResource"
            }
          }
        }
      }
    },
    "/users/{guid}/audited_spaces": {
      "get": {
        "description": "curl --insecure -i %s/v2/users/{guid}/audited_spaces -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "List all Audited Spaces for the User",
        "operationId": "listAllAuditedSpacesForUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/audited_spaces'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllAuditedSpacesForUserResponsePaged"
            }
          }
        }
      }
    },
    "/users/{guid}/audited_spaces/{audited_space_guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/users/{guid}/audited_spaces/{audited_space_guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Associate Audited Space with the User",
        "operationId": "associateAuditedSpaceWithUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/audited_spaces/:audited_space_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The audited_space_guid parameter is used as a part of the request URL: '/v2/users/:guid/audited_spaces/:audited_space_guid'",
            "name": "audited_space_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/associateAuditedSpaceWithUserResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/users/{guid}/audited_spaces/{audited_space_guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Remove Audited Space from the User",
        "operationId": "removeAuditedSpaceFromUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/audited_spaces/:audited_space_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The audited_space_guid parameter is used as a part of the request URL: '/v2/users/:guid/audited_spaces/:audited_space_guid'",
            "name": "audited_space_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/removeAuditedSpaceFromUserResponseResource"
            }
          }
        }
      }
    },
    "/users/{guid}/billing_managed_organizations": {
      "get": {
        "description": "curl --insecure -i %s/v2/users/{guid}/billing_managed_organizations -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "List all Billing Managed Organizations for the User",
        "operationId": "listAllBillingManagedOrganizationsForUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/billing_managed_organizations'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllBillingManagedOrganizationsForUserResponsePaged"
            }
          }
        }
      }
    },
    "/users/{guid}/billing_managed_organizations/{billing_managed_organization_guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/users/{guid}/billing_managed_organizations/{billing_managed_organization_guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Associate Billing Managed Organization with the User",
        "operationId": "associateBillingManagedOrganizationWithUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/billing_managed_organizations/:billing_managed_organization_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The billing_managed_organization_guid parameter is used as a part of the request URL: '/v2/users/:guid/billing_managed_organizations/:billing_managed_organization_guid'",
            "name": "billing_managed_organization_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/associateBillingManagedOrganizationWithUserResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/users/{guid}/billing_managed_organizations/{billing_managed_organization_guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Remove Billing Managed Organization from the User",
        "operationId": "removeBillingManagedOrganizationFromUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/billing_managed_organizations/:billing_managed_organization_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The billing_managed_organization_guid parameter is used as a part of the request URL: '/v2/users/:guid/billing_managed_organizations/:billing_managed_organization_guid'",
            "name": "billing_managed_organization_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/removeBillingManagedOrganizationFromUserResponseResource"
            }
          }
        }
      }
    },
    "/users/{guid}/managed_organizations": {
      "get": {
        "description": "curl --insecure -i %s/v2/users/{guid}/managed_organizations -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "List all Managed Organizations for the User",
        "operationId": "listAllManagedOrganizationsForUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/managed_organizations'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllManagedOrganizationsForUserResponsePaged"
            }
          }
        }
      }
    },
    "/users/{guid}/managed_organizations/{managed_organization_guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/users/{guid}/managed_organizations/{managed_organization_guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Associate Managed Organization with the User",
        "operationId": "associateManagedOrganizationWithUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/managed_organizations/:managed_organization_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The managed_organization_guid parameter is used as a part of the request URL: '/v2/users/:guid/managed_organizations/:managed_organization_guid'",
            "name": "managed_organization_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/associateManagedOrganizationWithUserResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/users/{guid}/managed_organizations/{managed_organization_guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Remove Managed Organization from the User",
        "operationId": "removeManagedOrganizationFromUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/managed_organizations/:managed_organization_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The managed_organization_guid parameter is used as a part of the request URL: '/v2/users/:guid/managed_organizations/:managed_organization_guid'",
            "name": "managed_organization_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/removeManagedOrganizationFromUserResponseResource"
            }
          }
        }
      }
    },
    "/users/{guid}/managed_spaces": {
      "get": {
        "description": "curl --insecure -i %s/v2/users/{guid}/managed_spaces -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "List all Managed Spaces for the User",
        "operationId": "listAllManagedSpacesForUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/managed_spaces'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllManagedSpacesForUserResponsePaged"
            }
          }
        }
      }
    },
    "/users/{guid}/managed_spaces/{managed_space_guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/users/{guid}/managed_spaces/{managed_space_guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Associate Managed Space with the User",
        "operationId": "associateManagedSpaceWithUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/managed_spaces/:managed_space_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The managed_space_guid parameter is used as a part of the request URL: '/v2/users/:guid/managed_spaces/:managed_space_guid'",
            "name": "managed_space_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/associateManagedSpaceWithUserResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/users/{guid}/managed_spaces/{managed_space_guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Remove Managed Space from the User",
        "operationId": "removeManagedSpaceFromUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/managed_spaces/:managed_space_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The managed_space_guid parameter is used as a part of the request URL: '/v2/users/:guid/managed_spaces/:managed_space_guid'",
            "name": "managed_space_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/removeManagedSpaceFromUserResponseResource"
            }
          }
        }
      }
    },
    "/users/{guid}/organizations": {
      "get": {
        "description": "curl --insecure -i %s/v2/users/{guid}/organizations -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "List all Organizations for the User",
        "operationId": "listAllOrganizationsForUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/organizations'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllOrganizationsForUserResponsePaged"
            }
          }
        }
      }
    },
    "/users/{guid}/organizations/{organization_guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/users/{guid}/organizations/{organization_guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Associate Organization with the User",
        "operationId": "associateOrganizationWithUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/organizations/:organization_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The organization_guid parameter is used as a part of the request URL: '/v2/users/:guid/organizations/:organization_guid'",
            "name": "organization_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/associateOrganizationWithUserResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/users/{guid}/organizations/{organization_guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Remove Organization from the User",
        "operationId": "removeOrganizationFromUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/organizations/:organization_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The organization_guid parameter is used as a part of the request URL: '/v2/users/:guid/organizations/:organization_guid'",
            "name": "organization_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/removeOrganizationFromUserResponseResource"
            }
          }
        }
      }
    },
    "/users/{guid}/spaces": {
      "get": {
        "description": "curl --insecure -i %s/v2/users/{guid}/spaces -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "List all Spaces for the User",
        "operationId": "listAllSpacesForUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/spaces'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/listAllSpacesForUserResponsePaged"
            }
          }
        }
      }
    },
    "/users/{guid}/spaces/{space_guid}": {
      "put": {
        "description": "curl --insecure -i %s/v2/users/{guid}/spaces/{space_guid} -X PUT -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Associate Space with the User",
        "operationId": "associateSpaceWithUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/spaces/:space_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The space_guid parameter is used as a part of the request URL: '/v2/users/:guid/spaces/:space_guid'",
            "name": "space_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/associateSpaceWithUserResponseResource"
            }
          }
        }
      },
      "delete": {
        "description": "curl --insecure -i %s/v2/users/{guid}/spaces/{space_guid} -X DELETE -H 'Authorization: %s' ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Remove Space from the User",
        "operationId": "removeSpaceFromUser",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/spaces/:space_guid'",
            "name": "guid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The space_guid parameter is used as a part of the request URL: '/v2/users/:guid/spaces/:space_guid'",
            "name": "space_guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/removeSpaceFromUserResponseResource"
            }
          }
        }
      }
    },
    "/users/{guid}/summary": {
      "get": {
        "description": "curl --insecure -i %s/v2/users/{guid}/summary -X GET -H 'Authorization: %s' ",
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Get User summary",
        "operationId": "getUserSummary",
        "parameters": [
          {
            "type": "string",
            "description": "The guid parameter is used as a part of the request URL: '/v2/users/:guid/summary'",
            "name": "guid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/getUserSummaryResponseResource"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "RetrieveAuthLoginApp": {
      "type": "object",
      "properties": {
        "version": {
          "description": "The version of the auth server",
          "type": "string"
        }
      }
    },
    "RetrieveAuthLoginLinks": {
      "description": "A list of alias/url pairs of configured action URLs for the UAA",
      "type": "object",
      "properties": {
        "login": {
          "description": "The link to the login host alias of the UAA",
          "type": "string"
        },
        "passwd": {
          "description": "The link to the 'Forgot Password' functionality. Can be external or internal to the UAA",
          "type": "string"
        },
        "register": {
          "description": "The link to the 'Create Account' functionality. Can be external or internal to the UAA",
          "type": "string"
        },
        "uaa": {
          "description": "The link to the uaa alias host of the UAA",
          "type": "string"
        }
      }
    },
    "RetrieveAuthLoginPrompts": {
      "description": "A list of name/value pairs of configured prompts that the UAA will login a user. Format for each prompt is [type, display name] where type can be 'text' or 'password'",
      "type": "object",
      "properties": {
        "passcode": {
          "description": "If a SAML identity provider is configured, this prompt contains a URL to where the user can initiate the SAML authentication flow.",
          "type": "array",
          "items": {
            "type": "object"
          },
          "x-omitempty": true
        },
        "password": {
          "description": "Information about the password prompt.",
          "type": "array",
          "items": {
            "type": "object"
          },
          "x-omitempty": true
        },
        "username": {
          "description": "Information about the username prompt.",
          "type": "array",
          "items": {
            "type": "object"
          },
          "x-omitempty": true
        }
      }
    },
    "associateAppWithRouteResponse": {
      "properties": {
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "domain_guid": {
          "description": "The domain Guid",
          "type": "string"
        },
        "domain_url": {
          "description": "The domain Url",
          "type": "string"
        },
        "host": {
          "description": "The host",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        }
      }
    },
    "associateAppWithRouteResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/associateAppWithRouteResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "associateAuditedOrganizationWithUserResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "default_space_url": {
          "description": "The default Space Url",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "associateAuditedOrganizationWithUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/associateAuditedOrganizationWithUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "associateAuditedSpaceWithUserResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "default_space_url": {
          "description": "The default Space Url",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "associateAuditedSpaceWithUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/associateAuditedSpaceWithUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "associateAuditorWithOrganizationResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "billing_enabled": {
          "description": "The billing Enabled",
          "type": "boolean"
        },
        "billing_managers_url": {
          "description": "The billing Managers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "private_domains_url": {
          "description": "The private Domains Url",
          "type": "string"
        },
        "quota_definition_guid": {
          "description": "The quota Definition Guid",
          "type": "string"
        },
        "quota_definition_url": {
          "description": "The quota Definition Url",
          "type": "string"
        },
        "space_quota_definitions_url": {
          "description": "The space Quota Definitions Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        },
        "users_url": {
          "description": "The users Url",
          "type": "string"
        }
      }
    },
    "associateAuditorWithOrganizationResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/associateAuditorWithOrganizationResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "associateAuditorWithSpaceResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "developers_url": {
          "description": "The developers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "security_groups_url": {
          "description": "The security Groups Url",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "space_quota_definition_guid": {
          "description": "The space Quota Definition Guid",
          "type": "string"
        }
      }
    },
    "associateAuditorWithSpaceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/associateAuditorWithSpaceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "associateBillingManagedOrganizationWithUserResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "default_space_url": {
          "description": "The default Space Url",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "associateBillingManagedOrganizationWithUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/associateBillingManagedOrganizationWithUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "associateBillingManagerWithOrganizationResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "billing_enabled": {
          "description": "The billing Enabled",
          "type": "boolean"
        },
        "billing_managers_url": {
          "description": "The billing Managers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "private_domains_url": {
          "description": "The private Domains Url",
          "type": "string"
        },
        "quota_definition_guid": {
          "description": "The quota Definition Guid",
          "type": "string"
        },
        "quota_definition_url": {
          "description": "The quota Definition Url",
          "type": "string"
        },
        "space_quota_definitions_url": {
          "description": "The space Quota Definitions Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        },
        "users_url": {
          "description": "The users Url",
          "type": "string"
        }
      }
    },
    "associateBillingManagerWithOrganizationResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/associateBillingManagerWithOrganizationResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "associateDeveloperWithSpaceResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "developers_url": {
          "description": "The developers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "security_groups_url": {
          "description": "The security Groups Url",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "space_quota_definition_guid": {
          "description": "The space Quota Definition Guid",
          "type": "string"
        }
      }
    },
    "associateDeveloperWithSpaceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/associateDeveloperWithSpaceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "associateManagedOrganizationWithUserResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "default_space_url": {
          "description": "The default Space Url",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "associateManagedOrganizationWithUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/associateManagedOrganizationWithUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "associateManagedSpaceWithUserResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "default_space_url": {
          "description": "The default Space Url",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "associateManagedSpaceWithUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/associateManagedSpaceWithUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "associateManagerWithOrganizationResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "billing_enabled": {
          "description": "The billing Enabled",
          "type": "boolean"
        },
        "billing_managers_url": {
          "description": "The billing Managers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "private_domains_url": {
          "description": "The private Domains Url",
          "type": "string"
        },
        "quota_definition_guid": {
          "description": "The quota Definition Guid",
          "type": "string"
        },
        "quota_definition_url": {
          "description": "The quota Definition Url",
          "type": "string"
        },
        "space_quota_definitions_url": {
          "description": "The space Quota Definitions Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        },
        "users_url": {
          "description": "The users Url",
          "type": "string"
        }
      }
    },
    "associateManagerWithOrganizationResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/associateManagerWithOrganizationResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "associateManagerWithSpaceResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "developers_url": {
          "description": "The developers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "security_groups_url": {
          "description": "The security Groups Url",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "space_quota_definition_guid": {
          "description": "The space Quota Definition Guid",
          "type": "string"
        }
      }
    },
    "associateManagerWithSpaceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/associateManagerWithSpaceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "associateOrganizationWithUserResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "default_space_url": {
          "description": "The default Space Url",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "associateOrganizationWithUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/associateOrganizationWithUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "associateRouteWithAppResponse": {
      "properties": {
        "buildpack": {
          "description": "The buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "command": {
          "description": "The command",
          "$ref": "#/definitions/genericObject"
        },
        "console": {
          "description": "The console",
          "type": "boolean"
        },
        "debug": {
          "description": "The debug",
          "$ref": "#/definitions/genericObject"
        },
        "detected_buildpack": {
          "description": "The detected Buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "detected_start_command": {
          "description": "The detected Start Command",
          "type": "string"
        },
        "disk_quota": {
          "description": "The disk Quota",
          "type": "integer"
        },
        "docker_image": {
          "description": "The docker Image",
          "$ref": "#/definitions/genericObject"
        },
        "environment_json": {
          "description": "The environment Json",
          "$ref": "#/definitions/genericObject"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "health_check_timeout": {
          "description": "The health Check Timeout",
          "$ref": "#/definitions/genericObject"
        },
        "health_check_type": {
          "description": "The health Check Type",
          "type": "string"
        },
        "instances": {
          "description": "The instances",
          "type": "integer"
        },
        "memory": {
          "description": "The memory",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "package_state": {
          "description": "The package State",
          "type": "string"
        },
        "package_updated_at": {
          "description": "The package Updated At",
          "type": "string"
        },
        "production": {
          "description": "The production",
          "type": "boolean"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "service_bindings_url": {
          "description": "The service Bindings Url",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        },
        "stack_guid": {
          "description": "The stack Guid",
          "type": "string"
        },
        "stack_url": {
          "description": "The stack Url",
          "type": "string"
        },
        "staging_failed_reason": {
          "description": "The staging Failed Reason",
          "$ref": "#/definitions/genericObject"
        },
        "staging_task_id": {
          "description": "The staging Task Id",
          "$ref": "#/definitions/genericObject"
        },
        "state": {
          "description": "The state",
          "type": "string"
        },
        "version": {
          "description": "The version",
          "type": "string"
        }
      }
    },
    "associateRouteWithAppResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/associateRouteWithAppResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "associateSecurityGroupWithSpaceResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "developers_url": {
          "description": "The developers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "security_groups_url": {
          "description": "The security Groups Url",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "space_quota_definition_guid": {
          "description": "The space Quota Definition Guid",
          "type": "string"
        }
      }
    },
    "associateSecurityGroupWithSpaceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/associateSecurityGroupWithSpaceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "associateSpaceWithSecurityGroupResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        },
        "rules": {
          "description": "The rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "running_default": {
          "description": "The running Default",
          "type": "boolean"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "staging_default": {
          "description": "The staging Default",
          "type": "boolean"
        }
      }
    },
    "associateSpaceWithSecurityGroupResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/associateSpaceWithSecurityGroupResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "associateSpaceWithSpaceQuotaDefinitionResponse": {
      "properties": {
        "instance_memory_limit": {
          "description": "The instance Memory Limit",
          "type": "integer"
        },
        "memory_limit": {
          "description": "The memory Limit",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "non_basic_services_allowed": {
          "description": "The non Basic Services Allowed",
          "type": "boolean"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "total_routes": {
          "description": "The total Routes",
          "type": "integer"
        },
        "total_services": {
          "description": "The total Services",
          "type": "integer"
        }
      }
    },
    "associateSpaceWithSpaceQuotaDefinitionResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/associateSpaceWithSpaceQuotaDefinitionResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "associateSpaceWithUserResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "default_space_url": {
          "description": "The default Space Url",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "associateSpaceWithUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/associateSpaceWithUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "associateUserWithOrganizationResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "billing_enabled": {
          "description": "The billing Enabled",
          "type": "boolean"
        },
        "billing_managers_url": {
          "description": "The billing Managers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "private_domains_url": {
          "description": "The private Domains Url",
          "type": "string"
        },
        "quota_definition_guid": {
          "description": "The quota Definition Guid",
          "type": "string"
        },
        "quota_definition_url": {
          "description": "The quota Definition Url",
          "type": "string"
        },
        "space_quota_definitions_url": {
          "description": "The space Quota Definitions Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        },
        "users_url": {
          "description": "The users Url",
          "type": "string"
        }
      }
    },
    "associateUserWithOrganizationResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/associateUserWithOrganizationResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "changePositionOfBuildpackRequest": {
      "properties": {
        "enabled": {
          "description": "Whether or not the buildpack will be used for staging",
          "$ref": "#/definitions/genericObject"
        },
        "filename": {
          "description": "The name of the uploaded buildpack file",
          "$ref": "#/definitions/genericObject"
        },
        "locked": {
          "description": "Whether or not the buildpack is locked to prevent updates",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name of the buildpack. To be used by app buildpack field. (only alphanumeric characters)",
          "type": "string"
        },
        "position": {
          "description": "The order in which the buildpacks are checked during buildpack auto-detection.",
          "type": "integer"
        }
      }
    },
    "changePositionOfBuildpackResponse": {
      "properties": {
        "enabled": {
          "description": "The enabled",
          "type": "boolean"
        },
        "filename": {
          "description": "The filename",
          "type": "string"
        },
        "locked": {
          "description": "The locked",
          "type": "boolean"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "position": {
          "description": "The position",
          "type": "integer"
        }
      }
    },
    "changePositionOfBuildpackResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/changePositionOfBuildpackResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "copyAppBitsForAppRequest": {
      "properties": {
        "source_app_guid": {
          "description": "The guid for the source app",
          "type": "string"
        }
      }
    },
    "copyAppBitsForAppResponse": {
      "properties": {
        "guid": {
          "description": "The guid",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        }
      }
    },
    "copyAppBitsForAppResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/copyAppBitsForAppResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createAppRequest": {
      "properties": {
        "buildpack": {
          "description": "Buildpack to build the app. 3 options: a) Blank means autodetection; b) A Git Url pointing to a buildpack; c) Name of an installed buildpack.",
          "$ref": "#/definitions/genericObject"
        },
        "command": {
          "description": "The command to start an app after it is staged (e.g. 'rails s -p $PORT' or 'java com.org.Server $PORT').",
          "$ref": "#/definitions/genericObject"
        },
        "console": {
          "description": "Open the console port for the app (at $CONSOLE_PORT).",
          "type": "boolean"
        },
        "debug": {
          "description": "Open the debug port for the app (at $DEBUG_PORT).",
          "type": "boolean"
        },
        "detected_start_command": {
          "description": "The command detected by the buildpack during staging.",
          "$ref": "#/definitions/genericObject"
        },
        "disk_quota": {
          "description": "The maximum amount of disk available to an instance of an app. In megabytes.",
          "type": "string"
        },
        "docker_image": {
          "description": "Name of the Docker image containing the app",
          "type": "string"
        },
        "environment_json": {
          "description": "Key/value pairs of all the environment variables to run in your app. Does not include any system or service variables.",
          "$ref": "#/definitions/genericObject"
        },
        "health_check_timeout": {
          "description": "Timeout for health checking of an staged app when starting up",
          "$ref": "#/definitions/genericObject"
        },
        "health_check_type": {
          "description": "Type of health check to perform.",
          "type": "string"
        },
        "instances": {
          "description": "The number of instances of the app to run. To ensure optimal availability ensure there are at least 2 instances.",
          "type": "string"
        },
        "memory": {
          "description": "The amount of memory each instance should have. In megabytes.",
          "type": "string"
        },
        "name": {
          "description": "The name of the app.",
          "type": "string"
        },
        "production": {
          "description": "Deprecated.",
          "type": "boolean"
        },
        "space_guid": {
          "description": "The guid of the associated space.",
          "type": "string"
        },
        "stack_guid": {
          "description": "The guid of the associated stack.",
          "type": "string"
        },
        "state": {
          "description": "The current desired state of the app. One of STOPPED or STARTED.",
          "type": "string"
        }
      }
    },
    "createAppResponse": {
      "properties": {
        "buildpack": {
          "description": "The buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "command": {
          "description": "The command",
          "$ref": "#/definitions/genericObject"
        },
        "console": {
          "description": "The console",
          "type": "boolean"
        },
        "debug": {
          "description": "The debug",
          "$ref": "#/definitions/genericObject"
        },
        "detected_buildpack": {
          "description": "The detected Buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "detected_start_command": {
          "description": "The detected Start Command",
          "type": "string"
        },
        "disk_quota": {
          "description": "The disk Quota",
          "type": "integer"
        },
        "docker_image": {
          "description": "The docker Image",
          "$ref": "#/definitions/genericObject"
        },
        "environment_json": {
          "description": "The environment Json",
          "$ref": "#/definitions/genericObject"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "health_check_timeout": {
          "description": "The health Check Timeout",
          "$ref": "#/definitions/genericObject"
        },
        "health_check_type": {
          "description": "The health Check Type",
          "type": "string"
        },
        "instances": {
          "description": "The instances",
          "type": "integer"
        },
        "memory": {
          "description": "The memory",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "package_state": {
          "description": "The package State",
          "type": "string"
        },
        "package_updated_at": {
          "description": "The package Updated At",
          "$ref": "#/definitions/genericObject"
        },
        "production": {
          "description": "The production",
          "type": "boolean"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "service_bindings_url": {
          "description": "The service Bindings Url",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        },
        "stack_guid": {
          "description": "The stack Guid",
          "type": "string"
        },
        "stack_url": {
          "description": "The stack Url",
          "type": "string"
        },
        "staging_failed_reason": {
          "description": "The staging Failed Reason",
          "$ref": "#/definitions/genericObject"
        },
        "staging_task_id": {
          "description": "The staging Task Id",
          "$ref": "#/definitions/genericObject"
        },
        "state": {
          "description": "The state",
          "type": "string"
        },
        "version": {
          "description": "The version",
          "type": "string"
        }
      }
    },
    "createAppResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createAppResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createDockerAppExperimentalRequest": {
      "properties": {
        "buildpack": {
          "description": "Buildpack to build the app. 3 options: a) Blank means autodetection; b) A Git Url pointing to a buildpack; c) Name of an installed buildpack.",
          "$ref": "#/definitions/genericObject"
        },
        "command": {
          "description": "The command to start an app after it is staged (e.g. 'rails s -p $PORT' or 'java com.org.Server $PORT').",
          "$ref": "#/definitions/genericObject"
        },
        "console": {
          "description": "Open the console port for the app (at $CONSOLE_PORT).",
          "type": "boolean"
        },
        "debug": {
          "description": "Open the debug port for the app (at $DEBUG_PORT).",
          "type": "boolean"
        },
        "detected_start_command": {
          "description": "The command detected by the buildpack during staging.",
          "$ref": "#/definitions/genericObject"
        },
        "disk_quota": {
          "description": "The maximum amount of disk available to an instance of an app. In megabytes.",
          "type": "string"
        },
        "docker_image": {
          "description": "Name of the Docker image containing the app",
          "type": "string"
        },
        "environment_json": {
          "description": "Key/value pairs of all the environment variables to run in your app. Does not include any system or service variables.",
          "$ref": "#/definitions/genericObject"
        },
        "health_check_timeout": {
          "description": "Timeout for health checking of an staged app when starting up",
          "$ref": "#/definitions/genericObject"
        },
        "health_check_type": {
          "description": "Type of health check to perform.",
          "type": "string"
        },
        "instances": {
          "description": "The number of instances of the app to run. To ensure optimal availability ensure there are at least 2 instances.",
          "type": "string"
        },
        "memory": {
          "description": "The amount of memory each instance should have. In megabytes.",
          "type": "string"
        },
        "name": {
          "description": "The name of the app.",
          "type": "string"
        },
        "production": {
          "description": "Deprecated.",
          "type": "boolean"
        },
        "space_guid": {
          "description": "The guid of the associated space.",
          "type": "string"
        },
        "stack_guid": {
          "description": "The guid of the associated stack.",
          "type": "string"
        },
        "state": {
          "description": "The current desired state of the app. One of STOPPED or STARTED.",
          "type": "string"
        }
      }
    },
    "createDockerAppExperimentalResponse": {
      "properties": {
        "buildpack": {
          "description": "The buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "command": {
          "description": "The command",
          "$ref": "#/definitions/genericObject"
        },
        "console": {
          "description": "The console",
          "type": "boolean"
        },
        "debug": {
          "description": "The debug",
          "$ref": "#/definitions/genericObject"
        },
        "detected_buildpack": {
          "description": "The detected Buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "detected_start_command": {
          "description": "The detected Start Command",
          "type": "string"
        },
        "disk_quota": {
          "description": "The disk Quota",
          "type": "integer"
        },
        "docker_image": {
          "description": "The docker Image",
          "type": "string"
        },
        "environment_json": {
          "description": "The environment Json",
          "$ref": "#/definitions/genericObject"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "health_check_timeout": {
          "description": "The health Check Timeout",
          "$ref": "#/definitions/genericObject"
        },
        "health_check_type": {
          "description": "The health Check Type",
          "type": "string"
        },
        "instances": {
          "description": "The instances",
          "type": "integer"
        },
        "memory": {
          "description": "The memory",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "package_state": {
          "description": "The package State",
          "type": "string"
        },
        "package_updated_at": {
          "description": "The package Updated At",
          "type": "string"
        },
        "production": {
          "description": "The production",
          "type": "boolean"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "service_bindings_url": {
          "description": "The service Bindings Url",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        },
        "stack_guid": {
          "description": "The stack Guid",
          "type": "string"
        },
        "stack_url": {
          "description": "The stack Url",
          "type": "string"
        },
        "staging_failed_reason": {
          "description": "The staging Failed Reason",
          "$ref": "#/definitions/genericObject"
        },
        "staging_task_id": {
          "description": "The staging Task Id",
          "$ref": "#/definitions/genericObject"
        },
        "state": {
          "description": "The state",
          "type": "string"
        },
        "version": {
          "description": "The version",
          "type": "string"
        }
      }
    },
    "createDockerAppExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createDockerAppExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createOrganizationQuotaDefinitionRequest": {
      "properties": {
        "instance_memory_limit": {
          "description": "The maximum amount of memory in megabyte an application instance can have. (-1 represents an unlimited amount)",
          "type": "integer"
        },
        "memory_limit": {
          "description": "How much memory in megabyte an organization can have.",
          "type": "integer"
        },
        "name": {
          "description": "The name for the Organization Quota Definition.",
          "type": "string"
        },
        "non_basic_services_allowed": {
          "description": "If an organization can have non basic services",
          "type": "boolean"
        },
        "total_routes": {
          "description": "How many routes an organization can have.",
          "type": "integer"
        },
        "total_services": {
          "description": "How many services an organization can have.",
          "type": "integer"
        },
        "trial_db_allowed": {
          "description": "If an organization can have a trial db.",
          "$ref": "#/definitions/genericObject"
        }
      }
    },
    "createOrganizationQuotaDefinitionResponse": {
      "properties": {
        "instance_memory_limit": {
          "description": "The instance Memory Limit",
          "type": "integer"
        },
        "memory_limit": {
          "description": "The memory Limit",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "non_basic_services_allowed": {
          "description": "The non Basic Services Allowed",
          "type": "boolean"
        },
        "total_routes": {
          "description": "The total Routes",
          "type": "integer"
        },
        "total_services": {
          "description": "The total Services",
          "type": "integer"
        },
        "trial_db_allowed": {
          "description": "The trial Db Allowed",
          "type": "boolean"
        }
      }
    },
    "createOrganizationQuotaDefinitionResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createOrganizationQuotaDefinitionResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createOrganizationRequest": {
      "properties": {
        "billing_enabled": {
          "description": "If billing is enabled for this organization",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name of the organization",
          "type": "string"
        },
        "quota_definition_guid": {
          "description": "The guid of quota to associate with this organization",
          "type": "string"
        },
        "status": {
          "description": "Status of the organization",
          "$ref": "#/definitions/genericObject"
        }
      }
    },
    "createOrganizationResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "billing_enabled": {
          "description": "The billing Enabled",
          "type": "boolean"
        },
        "billing_managers_url": {
          "description": "The billing Managers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "private_domains_url": {
          "description": "The private Domains Url",
          "type": "string"
        },
        "quota_definition_guid": {
          "description": "The quota Definition Guid",
          "type": "string"
        },
        "quota_definition_url": {
          "description": "The quota Definition Url",
          "type": "string"
        },
        "space_quota_definitions_url": {
          "description": "The space Quota Definitions Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        },
        "users_url": {
          "description": "The users Url",
          "type": "string"
        }
      }
    },
    "createOrganizationResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createOrganizationResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createPrivateDomainOwnedByGivenOrganizationRequest": {
      "properties": {
        "guid": {
          "description": "The guid of the domain.",
          "type": "string"
        },
        "name": {
          "description": "The name of the domain.",
          "type": "string"
        },
        "owning_organization_guid": {
          "description": "The organization that owns the domain. If not specified the domain is shared.",
          "type": "string"
        }
      }
    },
    "createPrivateDomainOwnedByGivenOrganizationResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        },
        "owning_organization_guid": {
          "description": "The owning Organization Guid",
          "type": "string"
        },
        "owning_organization_url": {
          "description": "The owning Organization Url",
          "type": "string"
        }
      }
    },
    "createPrivateDomainOwnedByGivenOrganizationResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createPrivateDomainOwnedByGivenOrganizationResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createRouteRequest": {
      "properties": {
        "domain_guid": {
          "description": "The guid of the associated domain",
          "type": "string"
        },
        "guid": {
          "description": "The guid of the route.",
          "type": "string"
        },
        "host": {
          "description": "The host portion of the route",
          "$ref": "#/definitions/genericObject"
        },
        "space_guid": {
          "description": "The guid of the associated space",
          "type": "string"
        }
      }
    },
    "createRouteResponse": {
      "properties": {
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "domain_guid": {
          "description": "The domain Guid",
          "type": "string"
        },
        "domain_url": {
          "description": "The domain Url",
          "type": "string"
        },
        "host": {
          "description": "The host",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        }
      }
    },
    "createRouteResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createRouteResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createSecurityGroupRequest": {
      "properties": {
        "name": {
          "description": "The name of the security group.",
          "type": "string"
        },
        "rules": {
          "description": "The egress rules for apps that belong to this security group. A rule consists of a protocol (tcp icmp udp all) destination CIDR or destination range  port or port range (tcp udp all) type (control signal for icmp) code (control signal for icmp)  log (enables logging for the egress rule)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "space_guids": {
          "description": "The list of associated spaces.",
          "$ref": "#/definitions/genericObject"
        }
      }
    },
    "createSecurityGroupResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        },
        "rules": {
          "description": "The rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "running_default": {
          "description": "The running Default",
          "type": "boolean"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "staging_default": {
          "description": "The staging Default",
          "type": "boolean"
        }
      }
    },
    "createSecurityGroupResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createSecurityGroupResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createServiceBindingRequest": {
      "properties": {
        "app_guid": {
          "description": "The guid of the app to bind",
          "type": "string"
        },
        "binding_options": {
          "description": "A hash of options that are passed to v1 brokers",
          "$ref": "#/definitions/genericObject"
        },
        "service_instance_guid": {
          "description": "The guid of the service instance to bind",
          "type": "string"
        }
      }
    },
    "createServiceBindingResponse": {
      "properties": {
        "app_guid": {
          "description": "The app Guid",
          "type": "string"
        },
        "app_url": {
          "description": "The app Url",
          "type": "string"
        },
        "binding_options": {
          "description": "The binding Options",
          "$ref": "#/definitions/genericObject"
        },
        "credentials": {
          "description": "The credentials",
          "$ref": "#/definitions/genericObject"
        },
        "gateway_data": {
          "description": "The gateway Data",
          "$ref": "#/definitions/genericObject"
        },
        "gateway_name": {
          "description": "The gateway Name",
          "type": "string"
        },
        "service_instance_guid": {
          "description": "The service Instance Guid",
          "type": "string"
        },
        "service_instance_url": {
          "description": "The service Instance Url",
          "type": "string"
        },
        "syslog_drain_url": {
          "description": "The syslog Drain Url",
          "$ref": "#/definitions/genericObject"
        }
      }
    },
    "createServiceBindingResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createServiceBindingResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createServiceBrokerRequest": {
      "properties": {
        "auth_password": {
          "description": "The password with which to authenticate against the service broker.",
          "type": "string"
        },
        "auth_username": {
          "description": "The username with which to authenticate against the service broker.",
          "type": "string"
        },
        "broker_url": {
          "description": "The URL of the service broker.",
          "type": "string"
        },
        "name": {
          "description": "The name of the service broker.",
          "type": "string"
        }
      }
    },
    "createServiceBrokerResponse": {
      "properties": {
        "auth_username": {
          "description": "The auth Username",
          "type": "string"
        },
        "broker_url": {
          "description": "The broker Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        }
      }
    },
    "createServiceBrokerResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createServiceBrokerResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createServiceDeprecatedRequest": {
      "properties": {
        "active": {
          "description": "A boolean describing that the service can be provisioned by users",
          "$ref": "#/definitions/genericObject"
        },
        "bindable": {
          "description": "A boolean describing that the service can be bound to applications",
          "$ref": "#/definitions/genericObject"
        },
        "description": {
          "description": "A short blurb describing the service",
          "type": "string"
        },
        "documentation_url": {
          "description": "A url that points to a documentation page for the service",
          "type": "string"
        },
        "extra": {
          "description": "A JSON field with extra data pertaining to the service",
          "type": "string"
        },
        "guid": {
          "description": "The guid of the service",
          "type": "string"
        },
        "info_url": {
          "description": "A url that points to an info page for the service",
          "type": "string"
        },
        "label": {
          "description": "The name of the service",
          "type": "string"
        },
        "long_description": {
          "description": "A longer description of the service",
          "type": "string"
        },
        "provider": {
          "description": "The name of the service provider (used only by v1 service gateways)",
          "type": "string"
        },
        "requires": {
          "description": "A list of dependencies for services",
          "type": "string"
        },
        "service_broker_guid": {
          "description": "The guid of the v2 service broker associated with the service",
          "type": "string"
        },
        "tags": {
          "description": "A list of tags for the service",
          "type": "string"
        },
        "timeout": {
          "description": "A timeout used by the v1 service gateway client",
          "$ref": "#/definitions/genericObject"
        },
        "unique_id": {
          "description": "A guid that identifies the service with the broker (not the same as the guid above)",
          "$ref": "#/definitions/genericObject"
        },
        "url": {
          "description": "The url of ther service provider (used only by v1 service gateways)",
          "type": "string"
        },
        "version": {
          "description": "The version of the service (used only by v1 service gateways)",
          "type": "string"
        }
      }
    },
    "createServiceDeprecatedResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "bindable": {
          "description": "The bindable",
          "type": "boolean"
        },
        "description": {
          "description": "The description",
          "type": "string"
        },
        "documentation_url": {
          "description": "The documentation Url",
          "$ref": "#/definitions/genericObject"
        },
        "extra": {
          "description": "The extra",
          "$ref": "#/definitions/genericObject"
        },
        "info_url": {
          "description": "The info Url",
          "$ref": "#/definitions/genericObject"
        },
        "label": {
          "description": "The label",
          "type": "string"
        },
        "long_description": {
          "description": "The long Description",
          "$ref": "#/definitions/genericObject"
        },
        "plan_updateable": {
          "description": "The plan Updateable",
          "type": "boolean"
        },
        "provider": {
          "description": "The provider",
          "type": "string"
        },
        "requires": {
          "description": "The requires",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "service_broker_guid": {
          "description": "The service Broker Guid",
          "type": "string"
        },
        "service_plans_url": {
          "description": "The service Plans Url",
          "type": "string"
        },
        "tags": {
          "description": "The tags",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "unique_id": {
          "description": "The unique Id",
          "$ref": "#/definitions/genericObject"
        },
        "url": {
          "description": "The url",
          "type": "string"
        },
        "version": {
          "description": "The version",
          "type": "string"
        }
      }
    },
    "createServiceDeprecatedResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createServiceDeprecatedResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createServiceInstanceRequest": {
      "properties": {
        "gateway_data": {
          "description": "Configuration information for the broker gateway in v1 services",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "A name for the service instance",
          "type": "string"
        },
        "service_plan_guid": {
          "description": "The guid of the service plan to associate with the instance",
          "type": "string"
        },
        "space_guid": {
          "description": "The guid of the space in which the instance will be created",
          "type": "string"
        }
      }
    },
    "createServiceInstanceResponse": {
      "properties": {
        "credentials": {
          "description": "The credentials",
          "$ref": "#/definitions/genericObject"
        },
        "dashboard_url": {
          "description": "The dashboard Url",
          "type": "string"
        },
        "gateway_data": {
          "description": "The gateway Data",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "service_bindings_url": {
          "description": "The service Bindings Url",
          "type": "string"
        },
        "service_plan_guid": {
          "description": "The service Plan Guid",
          "type": "string"
        },
        "service_plan_url": {
          "description": "The service Plan Url",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "createServiceInstanceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createServiceInstanceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createServicePlanDeprecatedRequest": {
      "properties": {
        "active": {
          "description": "A boolean that determines whether plans can be used to create new instances.",
          "type": "boolean"
        },
        "description": {
          "description": "A description of the service plan",
          "type": "string"
        },
        "extra": {
          "description": "A JSON string with additional data about the plan",
          "type": "string"
        },
        "free": {
          "description": "A boolean describing if the service plan is free",
          "type": "boolean"
        },
        "guid": {
          "description": "The guid of the service plan",
          "type": "string"
        },
        "name": {
          "description": "The name of the service plan",
          "type": "string"
        },
        "public": {
          "description": "A boolean describing that the plan is visible to the all users",
          "$ref": "#/definitions/genericObject"
        },
        "service_guid": {
          "description": "The guid of the related service",
          "type": "string"
        },
        "unique_id": {
          "description": "A guid for the service plan in the service broker (not the same as the cloud controller guid)",
          "$ref": "#/definitions/genericObject"
        }
      }
    },
    "createServicePlanDeprecatedResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "description": {
          "description": "The description",
          "type": "string"
        },
        "extra": {
          "description": "The extra",
          "$ref": "#/definitions/genericObject"
        },
        "free": {
          "description": "The free",
          "type": "boolean"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "public": {
          "description": "The public",
          "type": "boolean"
        },
        "service_guid": {
          "description": "The service Guid",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "service_url": {
          "description": "The service Url",
          "type": "string"
        },
        "unique_id": {
          "description": "The unique Id",
          "type": "string"
        }
      }
    },
    "createServicePlanDeprecatedResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createServicePlanDeprecatedResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createServicePlanVisibilityRequest": {
      "properties": {
        "organization_guid": {
          "description": "The guid of the organization the plan will be visible to",
          "type": "string"
        },
        "service_plan_guid": {
          "description": "The guid of the plan that will be made visible",
          "type": "string"
        }
      }
    },
    "createServicePlanVisibilityResponse": {
      "properties": {
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "service_plan_guid": {
          "description": "The service Plan Guid",
          "type": "string"
        },
        "service_plan_url": {
          "description": "The service Plan Url",
          "type": "string"
        }
      }
    },
    "createServicePlanVisibilityResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createServicePlanVisibilityResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createSharedDomainRequest": {
      "properties": {
        "guid": {
          "description": "The guid of the domain.",
          "type": "string"
        },
        "name": {
          "description": "The name of the domain.",
          "type": "string"
        }
      }
    },
    "createSharedDomainResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        }
      }
    },
    "createSharedDomainResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createSharedDomainResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createSpaceQuotaDefinitionRequest": {
      "properties": {
        "instance_memory_limit": {
          "description": "The maximum amount of memory in megabytes an application instance can have. (-1 represents an unlimited amount)",
          "type": "string"
        },
        "memory_limit": {
          "description": "How much memory in megabytes a space can have.",
          "type": "integer"
        },
        "name": {
          "description": "The name for the Space Quota Definition.",
          "type": "string"
        },
        "non_basic_services_allowed": {
          "description": "If a space can have non basic services",
          "type": "boolean"
        },
        "organization_guid": {
          "description": "The owning organization of the space quota",
          "type": "string"
        },
        "total_routes": {
          "description": "How many routes a space can have.",
          "type": "integer"
        },
        "total_services": {
          "description": "How many services a space can have.",
          "type": "integer"
        }
      }
    },
    "createSpaceQuotaDefinitionResponse": {
      "properties": {
        "instance_memory_limit": {
          "description": "The instance Memory Limit",
          "type": "integer"
        },
        "memory_limit": {
          "description": "The memory Limit",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "non_basic_services_allowed": {
          "description": "The non Basic Services Allowed",
          "type": "boolean"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "total_routes": {
          "description": "The total Routes",
          "type": "integer"
        },
        "total_services": {
          "description": "The total Services",
          "type": "integer"
        }
      }
    },
    "createSpaceQuotaDefinitionResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createSpaceQuotaDefinitionResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createSpaceRequest": {
      "properties": {
        "auditor_guids": {
          "description": "The list of the associated auditors",
          "$ref": "#/definitions/genericObject"
        },
        "developer_guids": {
          "description": "The list of the associated developers",
          "$ref": "#/definitions/genericObject"
        },
        "domain_guids": {
          "description": "The list of the associated domains",
          "$ref": "#/definitions/genericObject"
        },
        "manager_guids": {
          "description": "The list of the associated managers",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name of the space",
          "type": "string"
        },
        "organization_guid": {
          "description": "The guid of the associated organization",
          "type": "string"
        },
        "security_group_guids": {
          "description": "The list of the associated security groups",
          "$ref": "#/definitions/genericObject"
        },
        "space_quota_definition_guid": {
          "description": "The guid of the associated space quota definition",
          "type": "string"
        }
      }
    },
    "createSpaceResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "developers_url": {
          "description": "The developers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "security_groups_url": {
          "description": "The security Groups Url",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "space_quota_definition_guid": {
          "description": "The space Quota Definition Guid",
          "type": "string"
        }
      }
    },
    "createSpaceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createSpaceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createUserProvidedServiceInstanceRequest": {
      "properties": {
        "credentials": {
          "description": "A hash that can be used to store credentials",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "A name for the service instance",
          "type": "string"
        },
        "space_guid": {
          "description": "The guid of the space in which the instance will be created",
          "type": "string"
        },
        "syslog_drain_url": {
          "description": "The url for the syslog_drain to direct to",
          "type": "string"
        }
      }
    },
    "createUserProvidedServiceInstanceResponse": {
      "properties": {
        "credentials": {
          "description": "The credentials",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "service_bindings_url": {
          "description": "The service Bindings Url",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        },
        "syslog_drain_url": {
          "description": "The syslog Drain Url",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "createUserProvidedServiceInstanceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createUserProvidedServiceInstanceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createUserRequest": {
      "properties": {
        "admin": {
          "description": "Whether the user is an admin (Use UAA instead).",
          "$ref": "#/definitions/genericObject"
        },
        "default_space_guid": {
          "description": "The guid of the default space for apps created by this user.",
          "type": "string"
        },
        "guid": {
          "description": "The UAA guid of the user to create.",
          "type": "string"
        }
      }
    },
    "createUserResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "createUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createsAdminBuildpackRequest": {
      "properties": {
        "enabled": {
          "description": "Whether or not the buildpack will be used for staging",
          "$ref": "#/definitions/genericObject"
        },
        "filename": {
          "description": "The name of the uploaded buildpack file",
          "$ref": "#/definitions/genericObject"
        },
        "locked": {
          "description": "Whether or not the buildpack is locked to prevent updates",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name of the buildpack. To be used by app buildpack field. (only alphanumeric characters)",
          "type": "string"
        },
        "position": {
          "description": "The order in which the buildpacks are checked during buildpack auto-detection.",
          "$ref": "#/definitions/genericObject"
        }
      }
    },
    "createsAdminBuildpackResponse": {
      "properties": {
        "enabled": {
          "description": "The enabled",
          "type": "boolean"
        },
        "filename": {
          "description": "The filename",
          "$ref": "#/definitions/genericObject"
        },
        "locked": {
          "description": "The locked",
          "type": "boolean"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "position": {
          "description": "The position",
          "type": "integer"
        }
      }
    },
    "createsAdminBuildpackResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createsAdminBuildpackResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createsDomainOwnedByGivenOrganizationDeprecatedRequest": {
      "properties": {
        "guid": {
          "description": "The guid of the domain.",
          "type": "string"
        },
        "name": {
          "description": "The name of the domain.",
          "type": "string"
        },
        "owning_organization_guid": {
          "description": "The organization that owns the domain. If not specified the domain is shared.",
          "type": "string"
        },
        "wildcard": {
          "description": "Allow routes with non-empty hosts",
          "type": "boolean"
        }
      }
    },
    "createsDomainOwnedByGivenOrganizationDeprecatedResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        },
        "owning_organization_guid": {
          "description": "The owning Organization Guid",
          "type": "string"
        },
        "owning_organization_url": {
          "description": "The owning Organization Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "createsDomainOwnedByGivenOrganizationDeprecatedResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createsDomainOwnedByGivenOrganizationDeprecatedResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "createsOAuthTokenResponse": {
      "properties": {
        "access_token": {
          "description": "An OAuth2 access token. When token_format=opaque is requested this value will be a random string that can only be validated using the UAA's /check_token or /introspect endpoints. When token_format=jwt is requested, this token will be a JSON Web Token suitable for offline validation by OAuth2 Resource Servers.",
          "type": "string"
        },
        "expires_in": {
          "description": "The number of seconds until the access token expires.",
          "type": "integer"
        },
        "id_token": {
          "description": "An OpenID Connect ID token. This portion of the token response is only returned when clients are configured with the scope openid, the response_type includes id_token, and the user has granted approval to the client for the openid scope.",
          "type": "string"
        },
        "jti": {
          "description": "A globally unique identifier for this access token. This identifier is used when revoking tokens.",
          "type": "string"
        },
        "refresh_token": {
          "description": "An OAuth2 refresh token. Clients typically use the refresh token to obtain a new access token without the need for the user to authenticate again. They do this by calling /oauth/token with grant_type=refresh_token. See here for more information. A refresh token will only be issued to clients that have refresh_token in their list of authorized_grant_types.",
          "type": "string"
        },
        "scope": {
          "description": "A space-delimited list of scopes authorized by the user for this client. This list is the intersection of the scopes configured on the client, the group memberships of the user, and the user's approvals (when autoapprove: true is not configured on the client).",
          "type": "string"
        },
        "token_type": {
          "description": "The type of the access token issued. This field is mandated in RFC 6749. In the UAA, the only supported token_type is bearer.",
          "type": "string"
        }
      }
    },
    "createsSharedDomainDeprecatedRequest": {
      "properties": {
        "guid": {
          "description": "The guid of the domain.",
          "type": "string"
        },
        "name": {
          "description": "The name of the domain.",
          "type": "string"
        },
        "owning_organization_guid": {
          "description": "The organization that owns the domain. If not specified the domain is shared.",
          "type": "string"
        },
        "wildcard": {
          "description": "Allow routes with non-empty hosts",
          "type": "boolean"
        }
      }
    },
    "createsSharedDomainDeprecatedResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        },
        "owning_organization_guid": {
          "description": "The owning Organization Guid",
          "type": "string"
        }
      }
    },
    "createsSharedDomainDeprecatedResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/createsSharedDomainDeprecatedResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "enableOrDisableBuildpackRequest": {
      "properties": {
        "enabled": {
          "description": "Whether or not the buildpack will be used for staging",
          "type": "boolean"
        },
        "filename": {
          "description": "The name of the uploaded buildpack file",
          "$ref": "#/definitions/genericObject"
        },
        "locked": {
          "description": "Whether or not the buildpack is locked to prevent updates",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name of the buildpack. To be used by app buildpack field. (only alphanumeric characters)",
          "type": "string"
        },
        "position": {
          "description": "The order in which the buildpacks are checked during buildpack auto-detection.",
          "$ref": "#/definitions/genericObject"
        }
      }
    },
    "enableOrDisableBuildpackResponse": {
      "properties": {
        "enabled": {
          "description": "The enabled",
          "type": "boolean"
        },
        "filename": {
          "description": "The filename",
          "type": "string"
        },
        "locked": {
          "description": "The locked",
          "type": "boolean"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "position": {
          "description": "The position",
          "type": "integer"
        }
      }
    },
    "enableOrDisableBuildpackResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/enableOrDisableBuildpackResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "entityMetadata": {
      "properties": {
        "created_at": {
          "type": "string"
        },
        "guid": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "filterPrivateDomainsByNameResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        },
        "owning_organization_guid": {
          "description": "The owning Organization Guid",
          "type": "string"
        },
        "owning_organization_url": {
          "description": "The owning Organization Url",
          "type": "string"
        }
      }
    },
    "filterPrivateDomainsByNameResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/filterPrivateDomainsByNameResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "filterPrivateDomainsByNameResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/filterPrivateDomainsByNameResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "filterResultSetByLabelDeprecatedResponse": {
      "properties": {
        "label": {
          "description": "The label",
          "type": "string"
        },
        "provider": {
          "description": "The provider",
          "type": "string"
        }
      }
    },
    "filterResultSetByLabelDeprecatedResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/filterResultSetByLabelDeprecatedResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "filterResultSetByLabelDeprecatedResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/filterResultSetByLabelDeprecatedResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "filterResultSetByProviderDeprecatedResponse": {
      "properties": {
        "label": {
          "description": "The label",
          "type": "string"
        },
        "provider": {
          "description": "The provider",
          "type": "string"
        }
      }
    },
    "filterResultSetByProviderDeprecatedResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/filterResultSetByProviderDeprecatedResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "filterResultSetByProviderDeprecatedResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/filterResultSetByProviderDeprecatedResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "filterSharedDomainsByNameResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        }
      }
    },
    "filterSharedDomainsByNameResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/filterSharedDomainsByNameResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "filterSharedDomainsByNameResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/filterSharedDomainsByNameResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "genericObject": {
      "type": "object",
      "additionalProperties": {
        "type": "object"
      }
    },
    "getAllFeatureFlagsResponse": {
      "properties": {
        "enabled": {
          "description": "The enabled",
          "type": "boolean"
        },
        "error_message": {
          "description": "The error Message",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "url": {
          "description": "The url",
          "type": "string"
        }
      }
    },
    "getAllFeatureFlagsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/getAllFeatureFlagsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "getAppBitsUploadFeatureFlagResponse": {
      "properties": {
        "enabled": {
          "description": "The enabled",
          "type": "boolean"
        },
        "error_message": {
          "description": "The error Message",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "url": {
          "description": "The url",
          "type": "string"
        }
      }
    },
    "getAppBitsUploadFeatureFlagResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/getAppBitsUploadFeatureFlagResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "getAppScalingFeatureFlagResponse": {
      "properties": {
        "enabled": {
          "description": "The enabled",
          "type": "boolean"
        },
        "error_message": {
          "description": "The error Message",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "url": {
          "description": "The url",
          "type": "string"
        }
      }
    },
    "getAppScalingFeatureFlagResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/getAppScalingFeatureFlagResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "getAppSummaryResponse": {
      "properties": {
        "available_domains": {
          "description": "The available Domains",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "buildpack": {
          "description": "The buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "command": {
          "description": "The command",
          "$ref": "#/definitions/genericObject"
        },
        "console": {
          "description": "The console",
          "type": "boolean"
        },
        "debug": {
          "description": "The debug",
          "$ref": "#/definitions/genericObject"
        },
        "detected_buildpack": {
          "description": "The detected Buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "detected_start_command": {
          "description": "The detected Start Command",
          "type": "string"
        },
        "disk_quota": {
          "description": "The disk Quota",
          "type": "integer"
        },
        "docker_image": {
          "description": "The docker Image",
          "$ref": "#/definitions/genericObject"
        },
        "environment_json": {
          "description": "The environment Json",
          "$ref": "#/definitions/genericObject"
        },
        "guid": {
          "description": "The guid",
          "type": "string"
        },
        "health_check_timeout": {
          "description": "The health Check Timeout",
          "$ref": "#/definitions/genericObject"
        },
        "health_check_type": {
          "description": "The health Check Type",
          "type": "string"
        },
        "instances": {
          "description": "The instances",
          "type": "integer"
        },
        "memory": {
          "description": "The memory",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "package_state": {
          "description": "The package State",
          "type": "string"
        },
        "package_updated_at": {
          "description": "The package Updated At",
          "type": "string"
        },
        "production": {
          "description": "The production",
          "type": "boolean"
        },
        "routes": {
          "description": "The routes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "running_instances": {
          "description": "The running Instances",
          "type": "integer"
        },
        "services": {
          "description": "The services",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "stack_guid": {
          "description": "The stack Guid",
          "type": "string"
        },
        "staging_failed_reason": {
          "description": "The staging Failed Reason",
          "$ref": "#/definitions/genericObject"
        },
        "staging_task_id": {
          "description": "The staging Task Id",
          "$ref": "#/definitions/genericObject"
        },
        "state": {
          "description": "The state",
          "type": "string"
        },
        "version": {
          "description": "The version",
          "type": "string"
        }
      }
    },
    "getAppSummaryResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/getAppSummaryResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "getDetailedStatsForStartedAppResponse": {
      "properties": {
        "state": {
          "description": "The state",
          "type": "string"
        },
        "stats": {
          "description": "The stats",
          "$ref": "#/definitions/genericObject"
        }
      }
    },
    "getDetailedStatsForStartedAppResponseResource": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/getDetailedStatsForStartedAppResponse"
      }
    },
    "getEnvForAppResponse": {
      "properties": {
        "application_env_json": {
          "description": "The application Env Json",
          "$ref": "#/definitions/genericObject"
        },
        "environment_json": {
          "description": "The environment Json",
          "$ref": "#/definitions/genericObject"
        },
        "running_env_json": {
          "description": "The running Env Json",
          "$ref": "#/definitions/genericObject"
        },
        "staging_env_json": {
          "description": "The staging Env Json",
          "$ref": "#/definitions/genericObject"
        },
        "system_env_json": {
          "description": "The system Env Json",
          "$ref": "#/definitions/genericObject"
        }
      }
    },
    "getEnvForAppResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/getEnvForAppResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "getInfoResponse": {
      "properties": {
        "api_version": {
          "description": "The api Version",
          "type": "string"
        },
        "authorization_endpoint": {
          "description": "The authorization Endpoint",
          "type": "string"
        },
        "build": {
          "description": "The build",
          "type": "string"
        },
        "description": {
          "description": "The description",
          "type": "string"
        },
        "logging_endpoint": {
          "description": "The logging Endpoint",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "support": {
          "description": "The support",
          "type": "string"
        },
        "token_endpoint": {
          "description": "The token Endpoint",
          "type": "string"
        },
        "version": {
          "description": "The version",
          "type": "integer"
        }
      }
    },
    "getInfoResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/getInfoResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "getInstanceInformationForStartedAppResponse": {
      "properties": {
        "console_ip": {
          "description": "The console Ip",
          "$ref": "#/definitions/genericObject"
        },
        "console_port": {
          "description": "The console Port",
          "$ref": "#/definitions/genericObject"
        },
        "debug_ip": {
          "description": "The debug Ip",
          "$ref": "#/definitions/genericObject"
        },
        "debug_port": {
          "description": "The debug Port",
          "$ref": "#/definitions/genericObject"
        },
        "since": {
          "description": "The since",
          "type": "number"
        },
        "state": {
          "description": "The state",
          "type": "string"
        }
      }
    },
    "getInstanceInformationForStartedAppResponseResource": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/getInstanceInformationForStartedAppResponse"
      }
    },
    "getOrganizationSummaryResponse": {
      "properties": {
        "guid": {
          "description": "The guid",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "spaces": {
          "description": "The spaces",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "status": {
          "description": "The status",
          "type": "string"
        }
      }
    },
    "getOrganizationSummaryResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/getOrganizationSummaryResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "getPrivateDomainCreationFeatureFlagResponse": {
      "properties": {
        "enabled": {
          "description": "The enabled",
          "type": "boolean"
        },
        "error_message": {
          "description": "The error Message",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "url": {
          "description": "The url",
          "type": "string"
        }
      }
    },
    "getPrivateDomainCreationFeatureFlagResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/getPrivateDomainCreationFeatureFlagResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "getRouteCreationFeatureFlagResponse": {
      "properties": {
        "enabled": {
          "description": "The enabled",
          "type": "boolean"
        },
        "error_message": {
          "description": "The error Message",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "url": {
          "description": "The url",
          "type": "string"
        }
      }
    },
    "getRouteCreationFeatureFlagResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/getRouteCreationFeatureFlagResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "getServiceInstanceCreationFeatureFlagResponse": {
      "properties": {
        "enabled": {
          "description": "The enabled",
          "type": "boolean"
        },
        "error_message": {
          "description": "The error Message",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "url": {
          "description": "The url",
          "type": "string"
        }
      }
    },
    "getServiceInstanceCreationFeatureFlagResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/getServiceInstanceCreationFeatureFlagResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "getSpaceSummaryResponse": {
      "properties": {
        "apps": {
          "description": "The apps",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "guid": {
          "description": "The guid",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "services": {
          "description": "The services",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        }
      }
    },
    "getSpaceSummaryResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/getSpaceSummaryResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "getUserOrgCreationFeatureFlagResponse": {
      "properties": {
        "enabled": {
          "description": "The enabled",
          "type": "boolean"
        },
        "error_message": {
          "description": "The error Message",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "url": {
          "description": "The url",
          "type": "string"
        }
      }
    },
    "getUserOrgCreationFeatureFlagResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/getUserOrgCreationFeatureFlagResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "getUserSummaryResponse": {
      "properties": {
        "audited_organizations": {
          "description": "The audited Organizations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "audited_spaces": {
          "description": "The audited Spaces",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "billing_managed_organizations": {
          "description": "The billing Managed Organizations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "managed_organizations": {
          "description": "The managed Organizations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "managed_spaces": {
          "description": "The managed Spaces",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "organizations": {
          "description": "The organizations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "spaces": {
          "description": "The spaces",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        }
      }
    },
    "getUserSummaryResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/getUserSummaryResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "gettingContentsOfRunningEnvironmentVariableGroupResponse": {
      "properties": {
        "abc": {
          "description": "The abc",
          "type": "integer"
        },
        "do-re-me": {
          "description": "The doreme",
          "type": "string"
        }
      }
    },
    "gettingContentsOfRunningEnvironmentVariableGroupResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/gettingContentsOfRunningEnvironmentVariableGroupResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "gettingContentsOfStagingEnvironmentVariableGroupResponse": {
      "properties": {
        "abc": {
          "description": "The abc",
          "type": "integer"
        },
        "do-re-me": {
          "description": "The doreme",
          "type": "string"
        }
      }
    },
    "gettingContentsOfStagingEnvironmentVariableGroupResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/gettingContentsOfStagingEnvironmentVariableGroupResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllAppUsageEventsResponse": {
      "properties": {
        "app_guid": {
          "description": "The app Guid",
          "type": "string"
        },
        "app_name": {
          "description": "The app Name",
          "type": "string"
        },
        "buildpack_guid": {
          "description": "The buildpack Guid",
          "type": "string"
        },
        "buildpack_name": {
          "description": "The buildpack Name",
          "type": "string"
        },
        "instance_count": {
          "description": "The instance Count",
          "type": "integer"
        },
        "memory_in_mb_per_instance": {
          "description": "The memory In Mb Per Instance",
          "type": "integer"
        },
        "org_guid": {
          "description": "The org Guid",
          "type": "string"
        },
        "package_state": {
          "description": "The package State",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_name": {
          "description": "The space Name",
          "type": "string"
        },
        "state": {
          "description": "The state",
          "type": "string"
        }
      }
    },
    "listAllAppUsageEventsResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllAppUsageEventsResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllAppUsageEventsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllAppUsageEventsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllAppsForRouteResponse": {
      "properties": {
        "buildpack": {
          "description": "The buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "command": {
          "description": "The command",
          "$ref": "#/definitions/genericObject"
        },
        "console": {
          "description": "The console",
          "type": "boolean"
        },
        "debug": {
          "description": "The debug",
          "$ref": "#/definitions/genericObject"
        },
        "detected_buildpack": {
          "description": "The detected Buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "detected_start_command": {
          "description": "The detected Start Command",
          "type": "string"
        },
        "disk_quota": {
          "description": "The disk Quota",
          "type": "integer"
        },
        "docker_image": {
          "description": "The docker Image",
          "$ref": "#/definitions/genericObject"
        },
        "environment_json": {
          "description": "The environment Json",
          "$ref": "#/definitions/genericObject"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "health_check_timeout": {
          "description": "The health Check Timeout",
          "$ref": "#/definitions/genericObject"
        },
        "health_check_type": {
          "description": "The health Check Type",
          "type": "string"
        },
        "instances": {
          "description": "The instances",
          "type": "integer"
        },
        "memory": {
          "description": "The memory",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "package_state": {
          "description": "The package State",
          "type": "string"
        },
        "package_updated_at": {
          "description": "The package Updated At",
          "type": "string"
        },
        "production": {
          "description": "The production",
          "type": "boolean"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "service_bindings_url": {
          "description": "The service Bindings Url",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        },
        "stack_guid": {
          "description": "The stack Guid",
          "type": "string"
        },
        "stack_url": {
          "description": "The stack Url",
          "type": "string"
        },
        "staging_failed_reason": {
          "description": "The staging Failed Reason",
          "$ref": "#/definitions/genericObject"
        },
        "staging_task_id": {
          "description": "The staging Task Id",
          "$ref": "#/definitions/genericObject"
        },
        "state": {
          "description": "The state",
          "type": "string"
        },
        "version": {
          "description": "The version",
          "type": "string"
        }
      }
    },
    "listAllAppsForRouteResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllAppsForRouteResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllAppsForRouteResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllAppsForRouteResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllAppsForSpaceResponse": {
      "properties": {
        "buildpack": {
          "description": "The buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "command": {
          "description": "The command",
          "$ref": "#/definitions/genericObject"
        },
        "console": {
          "description": "The console",
          "type": "boolean"
        },
        "debug": {
          "description": "The debug",
          "$ref": "#/definitions/genericObject"
        },
        "detected_buildpack": {
          "description": "The detected Buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "detected_start_command": {
          "description": "The detected Start Command",
          "type": "string"
        },
        "disk_quota": {
          "description": "The disk Quota",
          "type": "integer"
        },
        "docker_image": {
          "description": "The docker Image",
          "$ref": "#/definitions/genericObject"
        },
        "environment_json": {
          "description": "The environment Json",
          "$ref": "#/definitions/genericObject"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "health_check_timeout": {
          "description": "The health Check Timeout",
          "$ref": "#/definitions/genericObject"
        },
        "health_check_type": {
          "description": "The health Check Type",
          "type": "string"
        },
        "instances": {
          "description": "The instances",
          "type": "integer"
        },
        "memory": {
          "description": "The memory",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "package_state": {
          "description": "The package State",
          "type": "string"
        },
        "package_updated_at": {
          "description": "The package Updated At",
          "type": "string"
        },
        "production": {
          "description": "The production",
          "type": "boolean"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "service_bindings_url": {
          "description": "The service Bindings Url",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        },
        "stack_guid": {
          "description": "The stack Guid",
          "type": "string"
        },
        "stack_url": {
          "description": "The stack Url",
          "type": "string"
        },
        "staging_failed_reason": {
          "description": "The staging Failed Reason",
          "$ref": "#/definitions/genericObject"
        },
        "staging_task_id": {
          "description": "The staging Task Id",
          "$ref": "#/definitions/genericObject"
        },
        "state": {
          "description": "The state",
          "type": "string"
        },
        "version": {
          "description": "The version",
          "type": "string"
        }
      }
    },
    "listAllAppsForSpaceResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllAppsForSpaceResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllAppsForSpaceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllAppsForSpaceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllAppsResponse": {
      "properties": {
        "buildpack": {
          "description": "The buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "command": {
          "description": "The command",
          "$ref": "#/definitions/genericObject"
        },
        "console": {
          "description": "The console",
          "type": "boolean"
        },
        "debug": {
          "description": "The debug",
          "$ref": "#/definitions/genericObject"
        },
        "detected_buildpack": {
          "description": "The detected Buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "detected_start_command": {
          "description": "The detected Start Command",
          "type": "string"
        },
        "disk_quota": {
          "description": "The disk Quota",
          "type": "integer"
        },
        "docker_image": {
          "description": "The docker Image",
          "$ref": "#/definitions/genericObject"
        },
        "environment_json": {
          "description": "The environment Json",
          "$ref": "#/definitions/genericObject"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "health_check_timeout": {
          "description": "The health Check Timeout",
          "$ref": "#/definitions/genericObject"
        },
        "health_check_type": {
          "description": "The health Check Type",
          "type": "string"
        },
        "instances": {
          "description": "The instances",
          "type": "integer"
        },
        "memory": {
          "description": "The memory",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "package_state": {
          "description": "The package State",
          "type": "string"
        },
        "package_updated_at": {
          "description": "The package Updated At",
          "type": "string"
        },
        "production": {
          "description": "The production",
          "type": "boolean"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "service_bindings_url": {
          "description": "The service Bindings Url",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        },
        "stack_guid": {
          "description": "The stack Guid",
          "type": "string"
        },
        "stack_url": {
          "description": "The stack Url",
          "type": "string"
        },
        "staging_failed_reason": {
          "description": "The staging Failed Reason",
          "$ref": "#/definitions/genericObject"
        },
        "staging_task_id": {
          "description": "The staging Task Id",
          "$ref": "#/definitions/genericObject"
        },
        "state": {
          "description": "The state",
          "type": "string"
        },
        "version": {
          "description": "The version",
          "type": "string"
        }
      }
    },
    "listAllAppsResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllAppsResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllAppsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllAppsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllAuditedOrganizationsForUserResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "billing_enabled": {
          "description": "The billing Enabled",
          "type": "boolean"
        },
        "billing_managers_url": {
          "description": "The billing Managers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "private_domains_url": {
          "description": "The private Domains Url",
          "type": "string"
        },
        "quota_definition_guid": {
          "description": "The quota Definition Guid",
          "type": "string"
        },
        "quota_definition_url": {
          "description": "The quota Definition Url",
          "type": "string"
        },
        "space_quota_definitions_url": {
          "description": "The space Quota Definitions Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        },
        "users_url": {
          "description": "The users Url",
          "type": "string"
        }
      }
    },
    "listAllAuditedOrganizationsForUserResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllAuditedOrganizationsForUserResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllAuditedOrganizationsForUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllAuditedOrganizationsForUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllAuditedSpacesForUserResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "developers_url": {
          "description": "The developers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "security_groups_url": {
          "description": "The security Groups Url",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "space_quota_definition_guid": {
          "description": "The space Quota Definition Guid",
          "type": "string"
        }
      }
    },
    "listAllAuditedSpacesForUserResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllAuditedSpacesForUserResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllAuditedSpacesForUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllAuditedSpacesForUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllAuditorsForOrganizationResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "listAllAuditorsForOrganizationResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllAuditorsForOrganizationResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllAuditorsForOrganizationResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllAuditorsForOrganizationResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllAuditorsForSpaceResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "listAllAuditorsForSpaceResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllAuditorsForSpaceResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllAuditorsForSpaceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllAuditorsForSpaceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllBillingManagedOrganizationsForUserResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "billing_enabled": {
          "description": "The billing Enabled",
          "type": "boolean"
        },
        "billing_managers_url": {
          "description": "The billing Managers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "private_domains_url": {
          "description": "The private Domains Url",
          "type": "string"
        },
        "quota_definition_guid": {
          "description": "The quota Definition Guid",
          "type": "string"
        },
        "quota_definition_url": {
          "description": "The quota Definition Url",
          "type": "string"
        },
        "space_quota_definitions_url": {
          "description": "The space Quota Definitions Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        },
        "users_url": {
          "description": "The users Url",
          "type": "string"
        }
      }
    },
    "listAllBillingManagedOrganizationsForUserResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllBillingManagedOrganizationsForUserResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllBillingManagedOrganizationsForUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllBillingManagedOrganizationsForUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllBillingManagersForOrganizationResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "listAllBillingManagersForOrganizationResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllBillingManagersForOrganizationResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllBillingManagersForOrganizationResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllBillingManagersForOrganizationResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllBuildpacksResponse": {
      "properties": {
        "enabled": {
          "description": "The enabled",
          "type": "boolean"
        },
        "filename": {
          "description": "The filename",
          "type": "string"
        },
        "locked": {
          "description": "The locked",
          "type": "boolean"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "position": {
          "description": "The position",
          "type": "integer"
        }
      }
    },
    "listAllBuildpacksResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllBuildpacksResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllBuildpacksResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllBuildpacksResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllDevelopersForSpaceResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "listAllDevelopersForSpaceResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllDevelopersForSpaceResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllDevelopersForSpaceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllDevelopersForSpaceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllDomainsDeprecatedResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        },
        "owning_organization_guid": {
          "description": "The owning Organization Guid",
          "type": "string"
        },
        "owning_organization_url": {
          "description": "The owning Organization Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "listAllDomainsDeprecatedResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllDomainsDeprecatedResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllDomainsDeprecatedResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllDomainsDeprecatedResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllDomainsForOrganizationDeprecatedResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        }
      }
    },
    "listAllDomainsForOrganizationDeprecatedResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllDomainsForOrganizationDeprecatedResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllDomainsForOrganizationDeprecatedResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllDomainsForOrganizationDeprecatedResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllDomainsForSpaceDeprecatedResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        }
      }
    },
    "listAllDomainsForSpaceDeprecatedResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllDomainsForSpaceDeprecatedResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllDomainsForSpaceDeprecatedResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllDomainsForSpaceDeprecatedResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllEventsForSpaceResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listAllEventsForSpaceResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllEventsForSpaceResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllEventsForSpaceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllEventsForSpaceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllEventsResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listAllEventsResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllEventsResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllEventsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllEventsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllManagedOrganizationsForUserResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "billing_enabled": {
          "description": "The billing Enabled",
          "type": "boolean"
        },
        "billing_managers_url": {
          "description": "The billing Managers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "private_domains_url": {
          "description": "The private Domains Url",
          "type": "string"
        },
        "quota_definition_guid": {
          "description": "The quota Definition Guid",
          "type": "string"
        },
        "quota_definition_url": {
          "description": "The quota Definition Url",
          "type": "string"
        },
        "space_quota_definitions_url": {
          "description": "The space Quota Definitions Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        },
        "users_url": {
          "description": "The users Url",
          "type": "string"
        }
      }
    },
    "listAllManagedOrganizationsForUserResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllManagedOrganizationsForUserResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllManagedOrganizationsForUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllManagedOrganizationsForUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllManagedSpacesForUserResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "developers_url": {
          "description": "The developers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "security_groups_url": {
          "description": "The security Groups Url",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "space_quota_definition_guid": {
          "description": "The space Quota Definition Guid",
          "type": "string"
        }
      }
    },
    "listAllManagedSpacesForUserResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllManagedSpacesForUserResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllManagedSpacesForUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllManagedSpacesForUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllManagersForOrganizationResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "listAllManagersForOrganizationResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllManagersForOrganizationResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllManagersForOrganizationResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllManagersForOrganizationResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllManagersForSpaceResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "listAllManagersForSpaceResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllManagersForSpaceResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllManagersForSpaceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllManagersForSpaceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllMatchingResourcesRequest": {
      "properties": {
        "sha1": {
          "description": "The sha1",
          "type": "string"
        },
        "size": {
          "description": "The size",
          "type": "integer"
        }
      }
    },
    "listAllMatchingResourcesResponse": {
      "properties": {
        "sha1": {
          "description": "The sha1",
          "type": "string"
        },
        "size": {
          "description": "The size",
          "type": "integer"
        }
      }
    },
    "listAllMatchingResourcesResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllMatchingResourcesResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllOrganizationQuotaDefinitionsResponse": {
      "properties": {
        "instance_memory_limit": {
          "description": "The instance Memory Limit",
          "type": "integer"
        },
        "memory_limit": {
          "description": "The memory Limit",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "non_basic_services_allowed": {
          "description": "The non Basic Services Allowed",
          "type": "boolean"
        },
        "total_routes": {
          "description": "The total Routes",
          "type": "integer"
        },
        "total_services": {
          "description": "The total Services",
          "type": "integer"
        },
        "trial_db_allowed": {
          "description": "The trial Db Allowed",
          "type": "boolean"
        }
      }
    },
    "listAllOrganizationQuotaDefinitionsResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllOrganizationQuotaDefinitionsResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllOrganizationQuotaDefinitionsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllOrganizationQuotaDefinitionsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllOrganizationsForUserResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "billing_enabled": {
          "description": "The billing Enabled",
          "type": "boolean"
        },
        "billing_managers_url": {
          "description": "The billing Managers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "private_domains_url": {
          "description": "The private Domains Url",
          "type": "string"
        },
        "quota_definition_guid": {
          "description": "The quota Definition Guid",
          "type": "string"
        },
        "quota_definition_url": {
          "description": "The quota Definition Url",
          "type": "string"
        },
        "space_quota_definitions_url": {
          "description": "The space Quota Definitions Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        },
        "users_url": {
          "description": "The users Url",
          "type": "string"
        }
      }
    },
    "listAllOrganizationsForUserResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllOrganizationsForUserResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllOrganizationsForUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllOrganizationsForUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllOrganizationsResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "billing_enabled": {
          "description": "The billing Enabled",
          "type": "boolean"
        },
        "billing_managers_url": {
          "description": "The billing Managers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "private_domains_url": {
          "description": "The private Domains Url",
          "type": "string"
        },
        "quota_definition_guid": {
          "description": "The quota Definition Guid",
          "type": "string"
        },
        "quota_definition_url": {
          "description": "The quota Definition Url",
          "type": "string"
        },
        "space_quota_definitions_url": {
          "description": "The space Quota Definitions Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        },
        "users_url": {
          "description": "The users Url",
          "type": "string"
        }
      }
    },
    "listAllOrganizationsResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllOrganizationsResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllOrganizationsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllOrganizationsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllPrivateDomainsForOrganizationResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        },
        "owning_organization_guid": {
          "description": "The owning Organization Guid",
          "type": "string"
        },
        "owning_organization_url": {
          "description": "The owning Organization Url",
          "type": "string"
        }
      }
    },
    "listAllPrivateDomainsForOrganizationResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllPrivateDomainsForOrganizationResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllPrivateDomainsForOrganizationResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllPrivateDomainsForOrganizationResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllPrivateDomainsResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        },
        "owning_organization_guid": {
          "description": "The owning Organization Guid",
          "type": "string"
        },
        "owning_organization_url": {
          "description": "The owning Organization Url",
          "type": "string"
        }
      }
    },
    "listAllPrivateDomainsResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllPrivateDomainsResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllPrivateDomainsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllPrivateDomainsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllRoutesForAppResponse": {
      "properties": {
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "domain_guid": {
          "description": "The domain Guid",
          "type": "string"
        },
        "domain_url": {
          "description": "The domain Url",
          "type": "string"
        },
        "host": {
          "description": "The host",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        }
      }
    },
    "listAllRoutesForAppResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllRoutesForAppResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllRoutesForAppResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllRoutesForAppResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllRoutesForSpaceResponse": {
      "properties": {
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "domain_guid": {
          "description": "The domain Guid",
          "type": "string"
        },
        "domain_url": {
          "description": "The domain Url",
          "type": "string"
        },
        "host": {
          "description": "The host",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        }
      }
    },
    "listAllRoutesForSpaceResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllRoutesForSpaceResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllRoutesForSpaceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllRoutesForSpaceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllRoutesResponse": {
      "properties": {
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "domain_guid": {
          "description": "The domain Guid",
          "type": "string"
        },
        "domain_url": {
          "description": "The domain Url",
          "type": "string"
        },
        "host": {
          "description": "The host",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        }
      }
    },
    "listAllRoutesResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllRoutesResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllRoutesResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllRoutesResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllSecurityGroupsForSpaceResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        },
        "rules": {
          "description": "The rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "running_default": {
          "description": "The running Default",
          "type": "boolean"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "staging_default": {
          "description": "The staging Default",
          "type": "boolean"
        }
      }
    },
    "listAllSecurityGroupsForSpaceResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllSecurityGroupsForSpaceResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllSecurityGroupsForSpaceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllSecurityGroupsForSpaceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllSecurityGroupsResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        },
        "rules": {
          "description": "The rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "running_default": {
          "description": "The running Default",
          "type": "boolean"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "staging_default": {
          "description": "The staging Default",
          "type": "boolean"
        }
      }
    },
    "listAllSecurityGroupsResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllSecurityGroupsResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllSecurityGroupsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllSecurityGroupsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllServiceAuthTokensDeprecatedResponse": {
      "properties": {
        "label": {
          "description": "The label",
          "type": "string"
        },
        "provider": {
          "description": "The provider",
          "type": "string"
        }
      }
    },
    "listAllServiceAuthTokensDeprecatedResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllServiceAuthTokensDeprecatedResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllServiceAuthTokensDeprecatedResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllServiceAuthTokensDeprecatedResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllServiceBindingsForAppResponse": {
      "properties": {
        "app_guid": {
          "description": "The app Guid",
          "type": "string"
        },
        "app_url": {
          "description": "The app Url",
          "type": "string"
        },
        "binding_options": {
          "description": "The binding Options",
          "$ref": "#/definitions/genericObject"
        },
        "credentials": {
          "description": "The credentials",
          "$ref": "#/definitions/genericObject"
        },
        "gateway_data": {
          "description": "The gateway Data",
          "$ref": "#/definitions/genericObject"
        },
        "gateway_name": {
          "description": "The gateway Name",
          "type": "string"
        },
        "service_instance_guid": {
          "description": "The service Instance Guid",
          "type": "string"
        },
        "service_instance_url": {
          "description": "The service Instance Url",
          "type": "string"
        },
        "syslog_drain_url": {
          "description": "The syslog Drain Url",
          "$ref": "#/definitions/genericObject"
        }
      }
    },
    "listAllServiceBindingsForAppResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllServiceBindingsForAppResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllServiceBindingsForAppResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllServiceBindingsForAppResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllServiceBindingsForServiceInstanceResponse": {
      "properties": {
        "app_guid": {
          "description": "The app Guid",
          "type": "string"
        },
        "app_url": {
          "description": "The app Url",
          "type": "string"
        },
        "binding_options": {
          "description": "The binding Options",
          "$ref": "#/definitions/genericObject"
        },
        "credentials": {
          "description": "The credentials",
          "$ref": "#/definitions/genericObject"
        },
        "gateway_data": {
          "description": "The gateway Data",
          "$ref": "#/definitions/genericObject"
        },
        "gateway_name": {
          "description": "The gateway Name",
          "type": "string"
        },
        "service_instance_guid": {
          "description": "The service Instance Guid",
          "type": "string"
        },
        "service_instance_url": {
          "description": "The service Instance Url",
          "type": "string"
        },
        "syslog_drain_url": {
          "description": "The syslog Drain Url",
          "$ref": "#/definitions/genericObject"
        }
      }
    },
    "listAllServiceBindingsForServiceInstanceResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllServiceBindingsForServiceInstanceResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllServiceBindingsForServiceInstanceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllServiceBindingsForServiceInstanceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllServiceBindingsForUserProvidedServiceInstanceResponse": {
      "properties": {
        "app_guid": {
          "description": "The app Guid",
          "type": "string"
        },
        "app_url": {
          "description": "The app Url",
          "type": "string"
        },
        "binding_options": {
          "description": "The binding Options",
          "$ref": "#/definitions/genericObject"
        },
        "credentials": {
          "description": "The credentials",
          "$ref": "#/definitions/genericObject"
        },
        "gateway_data": {
          "description": "The gateway Data",
          "$ref": "#/definitions/genericObject"
        },
        "gateway_name": {
          "description": "The gateway Name",
          "type": "string"
        },
        "service_instance_guid": {
          "description": "The service Instance Guid",
          "type": "string"
        },
        "service_instance_url": {
          "description": "The service Instance Url",
          "type": "string"
        },
        "syslog_drain_url": {
          "description": "The syslog Drain Url",
          "$ref": "#/definitions/genericObject"
        }
      }
    },
    "listAllServiceBindingsForUserProvidedServiceInstanceResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllServiceBindingsForUserProvidedServiceInstanceResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllServiceBindingsForUserProvidedServiceInstanceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllServiceBindingsForUserProvidedServiceInstanceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllServiceBindingsResponse": {
      "properties": {
        "app_guid": {
          "description": "The app Guid",
          "type": "string"
        },
        "app_url": {
          "description": "The app Url",
          "type": "string"
        },
        "binding_options": {
          "description": "The binding Options",
          "$ref": "#/definitions/genericObject"
        },
        "credentials": {
          "description": "The credentials",
          "$ref": "#/definitions/genericObject"
        },
        "gateway_data": {
          "description": "The gateway Data",
          "$ref": "#/definitions/genericObject"
        },
        "gateway_name": {
          "description": "The gateway Name",
          "type": "string"
        },
        "service_instance_guid": {
          "description": "The service Instance Guid",
          "type": "string"
        },
        "service_instance_url": {
          "description": "The service Instance Url",
          "type": "string"
        },
        "syslog_drain_url": {
          "description": "The syslog Drain Url",
          "$ref": "#/definitions/genericObject"
        }
      }
    },
    "listAllServiceBindingsResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllServiceBindingsResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllServiceBindingsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllServiceBindingsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllServiceBrokersResponse": {
      "properties": {
        "auth_username": {
          "description": "The auth Username",
          "type": "string"
        },
        "broker_url": {
          "description": "The broker Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        }
      }
    },
    "listAllServiceBrokersResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllServiceBrokersResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllServiceBrokersResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllServiceBrokersResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllServiceInstancesForServicePlanResponse": {
      "properties": {
        "credentials": {
          "description": "The credentials",
          "$ref": "#/definitions/genericObject"
        },
        "dashboard_url": {
          "description": "The dashboard Url",
          "$ref": "#/definitions/genericObject"
        },
        "gateway_data": {
          "description": "The gateway Data",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "service_bindings_url": {
          "description": "The service Bindings Url",
          "type": "string"
        },
        "service_plan_guid": {
          "description": "The service Plan Guid",
          "type": "string"
        },
        "service_plan_url": {
          "description": "The service Plan Url",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listAllServiceInstancesForServicePlanResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllServiceInstancesForServicePlanResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllServiceInstancesForServicePlanResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllServiceInstancesForServicePlanResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllServiceInstancesForSpaceResponse": {
      "properties": {
        "credentials": {
          "description": "The credentials",
          "$ref": "#/definitions/genericObject"
        },
        "dashboard_url": {
          "description": "The dashboard Url",
          "$ref": "#/definitions/genericObject"
        },
        "gateway_data": {
          "description": "The gateway Data",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "service_bindings_url": {
          "description": "The service Bindings Url",
          "type": "string"
        },
        "service_plan_guid": {
          "description": "The service Plan Guid",
          "type": "string"
        },
        "service_plan_url": {
          "description": "The service Plan Url",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listAllServiceInstancesForSpaceResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllServiceInstancesForSpaceResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllServiceInstancesForSpaceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllServiceInstancesForSpaceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllServiceInstancesResponse": {
      "properties": {
        "credentials": {
          "description": "The credentials",
          "$ref": "#/definitions/genericObject"
        },
        "dashboard_url": {
          "description": "The dashboard Url",
          "$ref": "#/definitions/genericObject"
        },
        "gateway_data": {
          "description": "The gateway Data",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "service_bindings_url": {
          "description": "The service Bindings Url",
          "type": "string"
        },
        "service_plan_guid": {
          "description": "The service Plan Guid",
          "type": "string"
        },
        "service_plan_url": {
          "description": "The service Plan Url",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listAllServiceInstancesResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllServiceInstancesResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllServiceInstancesResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllServiceInstancesResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllServicePlanVisibilitiesResponse": {
      "properties": {
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "service_plan_guid": {
          "description": "The service Plan Guid",
          "type": "string"
        },
        "service_plan_url": {
          "description": "The service Plan Url",
          "type": "string"
        }
      }
    },
    "listAllServicePlanVisibilitiesResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllServicePlanVisibilitiesResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllServicePlanVisibilitiesResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllServicePlanVisibilitiesResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllServicePlansForServiceResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "description": {
          "description": "The description",
          "type": "string"
        },
        "extra": {
          "description": "The extra",
          "$ref": "#/definitions/genericObject"
        },
        "free": {
          "description": "The free",
          "type": "boolean"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "public": {
          "description": "The public",
          "type": "boolean"
        },
        "service_guid": {
          "description": "The service Guid",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "service_url": {
          "description": "The service Url",
          "type": "string"
        },
        "unique_id": {
          "description": "The unique Id",
          "type": "string"
        }
      }
    },
    "listAllServicePlansForServiceResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllServicePlansForServiceResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllServicePlansForServiceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllServicePlansForServiceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllServicePlansResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "description": {
          "description": "The description",
          "type": "string"
        },
        "extra": {
          "description": "The extra",
          "$ref": "#/definitions/genericObject"
        },
        "free": {
          "description": "The free",
          "type": "boolean"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "public": {
          "description": "The public",
          "type": "boolean"
        },
        "service_guid": {
          "description": "The service Guid",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "service_url": {
          "description": "The service Url",
          "type": "string"
        },
        "unique_id": {
          "description": "The unique Id",
          "type": "string"
        }
      }
    },
    "listAllServicePlansResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllServicePlansResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllServicePlansResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllServicePlansResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllServicesForOrganizationResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "bindable": {
          "description": "The bindable",
          "type": "boolean"
        },
        "description": {
          "description": "The description",
          "type": "string"
        },
        "documentation_url": {
          "description": "The documentation Url",
          "$ref": "#/definitions/genericObject"
        },
        "extra": {
          "description": "The extra",
          "$ref": "#/definitions/genericObject"
        },
        "info_url": {
          "description": "The info Url",
          "$ref": "#/definitions/genericObject"
        },
        "label": {
          "description": "The label",
          "type": "string"
        },
        "long_description": {
          "description": "The long Description",
          "$ref": "#/definitions/genericObject"
        },
        "plan_updateable": {
          "description": "The plan Updateable",
          "type": "boolean"
        },
        "provider": {
          "description": "The provider",
          "type": "string"
        },
        "requires": {
          "description": "The requires",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "service_broker_guid": {
          "description": "The service Broker Guid",
          "type": "string"
        },
        "service_plans_url": {
          "description": "The service Plans Url",
          "type": "string"
        },
        "tags": {
          "description": "The tags",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "unique_id": {
          "description": "The unique Id",
          "type": "string"
        },
        "url": {
          "description": "The url",
          "type": "string"
        },
        "version": {
          "description": "The version",
          "type": "string"
        }
      }
    },
    "listAllServicesForOrganizationResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllServicesForOrganizationResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllServicesForOrganizationResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllServicesForOrganizationResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllServicesForSpaceResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "bindable": {
          "description": "The bindable",
          "type": "boolean"
        },
        "description": {
          "description": "The description",
          "type": "string"
        },
        "documentation_url": {
          "description": "The documentation Url",
          "$ref": "#/definitions/genericObject"
        },
        "extra": {
          "description": "The extra",
          "$ref": "#/definitions/genericObject"
        },
        "info_url": {
          "description": "The info Url",
          "$ref": "#/definitions/genericObject"
        },
        "label": {
          "description": "The label",
          "type": "string"
        },
        "long_description": {
          "description": "The long Description",
          "$ref": "#/definitions/genericObject"
        },
        "plan_updateable": {
          "description": "The plan Updateable",
          "type": "boolean"
        },
        "provider": {
          "description": "The provider",
          "type": "string"
        },
        "requires": {
          "description": "The requires",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "service_broker_guid": {
          "description": "The service Broker Guid",
          "type": "string"
        },
        "service_plans_url": {
          "description": "The service Plans Url",
          "type": "string"
        },
        "tags": {
          "description": "The tags",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "unique_id": {
          "description": "The unique Id",
          "type": "string"
        },
        "url": {
          "description": "The url",
          "type": "string"
        },
        "version": {
          "description": "The version",
          "type": "string"
        }
      }
    },
    "listAllServicesForSpaceResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllServicesForSpaceResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllServicesForSpaceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllServicesForSpaceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllServicesResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "bindable": {
          "description": "The bindable",
          "type": "boolean"
        },
        "description": {
          "description": "The description",
          "type": "string"
        },
        "documentation_url": {
          "description": "The documentation Url",
          "$ref": "#/definitions/genericObject"
        },
        "extra": {
          "description": "The extra",
          "$ref": "#/definitions/genericObject"
        },
        "info_url": {
          "description": "The info Url",
          "$ref": "#/definitions/genericObject"
        },
        "label": {
          "description": "The label",
          "type": "string"
        },
        "long_description": {
          "description": "The long Description",
          "$ref": "#/definitions/genericObject"
        },
        "plan_updateable": {
          "description": "The plan Updateable",
          "type": "boolean"
        },
        "provider": {
          "description": "The provider",
          "type": "string"
        },
        "requires": {
          "description": "The requires",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "service_broker_guid": {
          "description": "The service Broker Guid",
          "type": "string"
        },
        "service_plans_url": {
          "description": "The service Plans Url",
          "type": "string"
        },
        "tags": {
          "description": "The tags",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "unique_id": {
          "description": "The unique Id",
          "type": "string"
        },
        "url": {
          "description": "The url",
          "type": "string"
        },
        "version": {
          "description": "The version",
          "type": "string"
        }
      }
    },
    "listAllServicesResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllServicesResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllServicesResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllServicesResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllSharedDomainsResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        }
      }
    },
    "listAllSharedDomainsResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllSharedDomainsResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllSharedDomainsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllSharedDomainsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllSpaceQuotaDefinitionsForOrganizationResponse": {
      "properties": {
        "instance_memory_limit": {
          "description": "The instance Memory Limit",
          "type": "integer"
        },
        "memory_limit": {
          "description": "The memory Limit",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "non_basic_services_allowed": {
          "description": "The non Basic Services Allowed",
          "type": "boolean"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "total_routes": {
          "description": "The total Routes",
          "type": "integer"
        },
        "total_services": {
          "description": "The total Services",
          "type": "integer"
        }
      }
    },
    "listAllSpaceQuotaDefinitionsForOrganizationResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllSpaceQuotaDefinitionsForOrganizationResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllSpaceQuotaDefinitionsForOrganizationResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllSpaceQuotaDefinitionsForOrganizationResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllSpaceQuotaDefinitionsResponse": {
      "properties": {
        "instance_memory_limit": {
          "description": "The instance Memory Limit",
          "type": "integer"
        },
        "memory_limit": {
          "description": "The memory Limit",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "non_basic_services_allowed": {
          "description": "The non Basic Services Allowed",
          "type": "boolean"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "total_routes": {
          "description": "The total Routes",
          "type": "integer"
        },
        "total_services": {
          "description": "The total Services",
          "type": "integer"
        }
      }
    },
    "listAllSpaceQuotaDefinitionsResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllSpaceQuotaDefinitionsResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllSpaceQuotaDefinitionsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllSpaceQuotaDefinitionsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllSpacesForDomainDeprecatedResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "developers_url": {
          "description": "The developers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "security_groups_url": {
          "description": "The security Groups Url",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "space_quota_definition_guid": {
          "description": "The space Quota Definition Guid",
          "type": "string"
        }
      }
    },
    "listAllSpacesForDomainDeprecatedResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllSpacesForDomainDeprecatedResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllSpacesForDomainDeprecatedResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllSpacesForDomainDeprecatedResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllSpacesForOrganizationResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "developers_url": {
          "description": "The developers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "security_groups_url": {
          "description": "The security Groups Url",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "space_quota_definition_guid": {
          "description": "The space Quota Definition Guid",
          "type": "string"
        }
      }
    },
    "listAllSpacesForOrganizationResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllSpacesForOrganizationResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllSpacesForOrganizationResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllSpacesForOrganizationResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllSpacesForSecurityGroupResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "developers_url": {
          "description": "The developers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "security_groups_url": {
          "description": "The security Groups Url",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "space_quota_definition_guid": {
          "description": "The space Quota Definition Guid",
          "type": "string"
        }
      }
    },
    "listAllSpacesForSecurityGroupResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllSpacesForSecurityGroupResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllSpacesForSecurityGroupResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllSpacesForSecurityGroupResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllSpacesForSpaceQuotaDefinitionResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "developers_url": {
          "description": "The developers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "security_groups_url": {
          "description": "The security Groups Url",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "space_quota_definition_guid": {
          "description": "The space Quota Definition Guid",
          "type": "string"
        },
        "space_quota_definition_url": {
          "description": "The space Quota Definition Url",
          "type": "string"
        }
      }
    },
    "listAllSpacesForSpaceQuotaDefinitionResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllSpacesForSpaceQuotaDefinitionResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllSpacesForSpaceQuotaDefinitionResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllSpacesForSpaceQuotaDefinitionResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllSpacesForUserResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "developers_url": {
          "description": "The developers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "security_groups_url": {
          "description": "The security Groups Url",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "space_quota_definition_guid": {
          "description": "The space Quota Definition Guid",
          "type": "string"
        }
      }
    },
    "listAllSpacesForUserResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllSpacesForUserResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllSpacesForUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllSpacesForUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllSpacesResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "developers_url": {
          "description": "The developers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "security_groups_url": {
          "description": "The security Groups Url",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "space_quota_definition_guid": {
          "description": "The space Quota Definition Guid",
          "type": "string"
        }
      }
    },
    "listAllSpacesResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllSpacesResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllSpacesResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllSpacesResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllStacksResponse": {
      "properties": {
        "description": {
          "description": "The description",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        }
      }
    },
    "listAllStacksResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllStacksResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllStacksResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllStacksResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllUserProvidedServiceInstancesResponse": {
      "properties": {
        "credentials": {
          "description": "The credentials",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "service_bindings_url": {
          "description": "The service Bindings Url",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        },
        "syslog_drain_url": {
          "description": "The syslog Drain Url",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listAllUserProvidedServiceInstancesResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllUserProvidedServiceInstancesResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllUserProvidedServiceInstancesResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllUserProvidedServiceInstancesResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllUsersForOrganizationResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "listAllUsersForOrganizationResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllUsersForOrganizationResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllUsersForOrganizationResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllUsersForOrganizationResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAllUsersResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "default_space_url": {
          "description": "The default Space Url",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "listAllUsersResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAllUsersResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAllUsersResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAllUsersResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAppCreateEventsResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listAppCreateEventsResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAppCreateEventsResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAppCreateEventsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAppCreateEventsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAppDeleteEventsResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listAppDeleteEventsResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAppDeleteEventsResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAppDeleteEventsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAppDeleteEventsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAppExitedEventsResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listAppExitedEventsResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAppExitedEventsResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAppExitedEventsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAppExitedEventsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listAppUpdateEventsResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listAppUpdateEventsResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listAppUpdateEventsResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listAppUpdateEventsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listAppUpdateEventsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listEventsAssociatedWithAppSinceJanuary12014Response": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listEventsAssociatedWithAppSinceJanuary12014ResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listEventsAssociatedWithAppSinceJanuary12014ResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listEventsAssociatedWithAppSinceJanuary12014ResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listEventsAssociatedWithAppSinceJanuary12014Response"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listServiceBindingCreateEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listServiceBindingCreateEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listServiceBindingCreateEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listServiceBindingCreateEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listServiceBindingCreateEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listServiceBindingDeleteEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listServiceBindingDeleteEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listServiceBindingDeleteEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listServiceBindingDeleteEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listServiceBindingDeleteEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listServiceBrokerCreateEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listServiceBrokerCreateEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listServiceBrokerCreateEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listServiceBrokerCreateEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listServiceBrokerCreateEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listServiceBrokerDeleteEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listServiceBrokerDeleteEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listServiceBrokerDeleteEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listServiceBrokerDeleteEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listServiceBrokerDeleteEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listServiceBrokerUpdateEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listServiceBrokerUpdateEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listServiceBrokerUpdateEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listServiceBrokerUpdateEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listServiceBrokerUpdateEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listServiceCreateEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listServiceCreateEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listServiceCreateEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listServiceCreateEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listServiceCreateEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listServiceDashboardClientCreateEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listServiceDashboardClientCreateEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listServiceDashboardClientCreateEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listServiceDashboardClientCreateEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listServiceDashboardClientCreateEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listServiceDashboardClientDeleteEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listServiceDashboardClientDeleteEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listServiceDashboardClientDeleteEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listServiceDashboardClientDeleteEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listServiceDashboardClientDeleteEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listServiceDeleteEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listServiceDeleteEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listServiceDeleteEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listServiceDeleteEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listServiceDeleteEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listServiceInstanceCreateEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listServiceInstanceCreateEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listServiceInstanceCreateEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listServiceInstanceCreateEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listServiceInstanceCreateEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listServiceInstanceDeleteEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listServiceInstanceDeleteEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listServiceInstanceDeleteEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listServiceInstanceDeleteEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listServiceInstanceDeleteEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listServiceInstanceUpdateEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listServiceInstanceUpdateEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listServiceInstanceUpdateEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listServiceInstanceUpdateEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listServiceInstanceUpdateEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listServicePlanCreateEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listServicePlanCreateEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listServicePlanCreateEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listServicePlanCreateEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listServicePlanCreateEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listServicePlanDeleteEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listServicePlanDeleteEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listServicePlanDeleteEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listServicePlanDeleteEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listServicePlanDeleteEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listServicePlanUpdateEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listServicePlanUpdateEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listServicePlanUpdateEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listServicePlanUpdateEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listServicePlanUpdateEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listServicePlanVisibilityCreateEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listServicePlanVisibilityCreateEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listServicePlanVisibilityCreateEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listServicePlanVisibilityCreateEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listServicePlanVisibilityCreateEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listServicePlanVisibilityDeleteEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listServicePlanVisibilityDeleteEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listServicePlanVisibilityDeleteEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listServicePlanVisibilityDeleteEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listServicePlanVisibilityDeleteEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listServicePlanVisibilityUpdateEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listServicePlanVisibilityUpdateEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listServicePlanVisibilityUpdateEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listServicePlanVisibilityUpdateEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listServicePlanVisibilityUpdateEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listServiceUpdateEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listServiceUpdateEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listServiceUpdateEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listServiceUpdateEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listServiceUpdateEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listServiceUsageEventsResponse": {
      "properties": {
        "org_guid": {
          "description": "The org Guid",
          "type": "string"
        },
        "service_guid": {
          "description": "The service Guid",
          "type": "string"
        },
        "service_instance_guid": {
          "description": "The service Instance Guid",
          "type": "string"
        },
        "service_instance_name": {
          "description": "The service Instance Name",
          "type": "string"
        },
        "service_instance_type": {
          "description": "The service Instance Type",
          "type": "string"
        },
        "service_label": {
          "description": "The service Label",
          "type": "string"
        },
        "service_plan_guid": {
          "description": "The service Plan Guid",
          "type": "string"
        },
        "service_plan_name": {
          "description": "The service Plan Name",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_name": {
          "description": "The space Name",
          "type": "string"
        },
        "state": {
          "description": "The state",
          "type": "string"
        }
      }
    },
    "listServiceUsageEventsResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listServiceUsageEventsResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listServiceUsageEventsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listServiceUsageEventsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listSpaceCreateEventsResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listSpaceCreateEventsResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listSpaceCreateEventsResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listSpaceCreateEventsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listSpaceCreateEventsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listSpaceDeleteEventsResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listSpaceDeleteEventsResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listSpaceDeleteEventsResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listSpaceDeleteEventsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listSpaceDeleteEventsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listSpaceUpdateEventsResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listSpaceUpdateEventsResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listSpaceUpdateEventsResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listSpaceUpdateEventsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listSpaceUpdateEventsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listUserProvidedServiceInstanceCreateEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listUserProvidedServiceInstanceCreateEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listUserProvidedServiceInstanceCreateEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listUserProvidedServiceInstanceCreateEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listUserProvidedServiceInstanceCreateEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listUserProvidedServiceInstanceDeleteEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listUserProvidedServiceInstanceDeleteEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listUserProvidedServiceInstanceDeleteEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listUserProvidedServiceInstanceDeleteEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listUserProvidedServiceInstanceDeleteEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "listUserProvidedServiceInstanceUpdateEventsExperimentalResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "listUserProvidedServiceInstanceUpdateEventsExperimentalResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listUserProvidedServiceInstanceUpdateEventsExperimentalResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "listUserProvidedServiceInstanceUpdateEventsExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/listUserProvidedServiceInstanceUpdateEventsExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "lockOrUnlockBuildpackRequest": {
      "properties": {
        "enabled": {
          "description": "Whether or not the buildpack will be used for staging",
          "$ref": "#/definitions/genericObject"
        },
        "filename": {
          "description": "The name of the uploaded buildpack file",
          "$ref": "#/definitions/genericObject"
        },
        "locked": {
          "description": "Whether or not the buildpack is locked to prevent updates",
          "type": "boolean"
        },
        "name": {
          "description": "The name of the buildpack. To be used by app buildpack field. (only alphanumeric characters)",
          "type": "string"
        },
        "position": {
          "description": "The order in which the buildpacks are checked during buildpack auto-detection.",
          "$ref": "#/definitions/genericObject"
        }
      }
    },
    "lockOrUnlockBuildpackResponse": {
      "properties": {
        "enabled": {
          "description": "The enabled",
          "type": "boolean"
        },
        "filename": {
          "description": "The filename",
          "type": "string"
        },
        "locked": {
          "description": "The locked",
          "type": "boolean"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "position": {
          "description": "The position",
          "type": "integer"
        }
      }
    },
    "lockOrUnlockBuildpackResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/lockOrUnlockBuildpackResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "migrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalRequest": {
      "properties": {
        "service_plan_guid": {
          "description": "The guid of the plan to move the existing instances to",
          "type": "string"
        }
      }
    },
    "migrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalResponse": {
      "properties": {
        "changed_count": {
          "description": "The changed Count",
          "type": "integer"
        }
      }
    },
    "migrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/migrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "removeAppFromRouteResponse": {
      "properties": {
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "domain_guid": {
          "description": "The domain Guid",
          "type": "string"
        },
        "domain_url": {
          "description": "The domain Url",
          "type": "string"
        },
        "host": {
          "description": "The host",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        }
      }
    },
    "removeAppFromRouteResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/removeAppFromRouteResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "removeAuditedOrganizationFromUserResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "default_space_url": {
          "description": "The default Space Url",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "removeAuditedOrganizationFromUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/removeAuditedOrganizationFromUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "removeAuditedSpaceFromUserResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "default_space_url": {
          "description": "The default Space Url",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "removeAuditedSpaceFromUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/removeAuditedSpaceFromUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "removeAuditorFromOrganizationResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "billing_enabled": {
          "description": "The billing Enabled",
          "type": "boolean"
        },
        "billing_managers_url": {
          "description": "The billing Managers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "private_domains_url": {
          "description": "The private Domains Url",
          "type": "string"
        },
        "quota_definition_guid": {
          "description": "The quota Definition Guid",
          "type": "string"
        },
        "quota_definition_url": {
          "description": "The quota Definition Url",
          "type": "string"
        },
        "space_quota_definitions_url": {
          "description": "The space Quota Definitions Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        },
        "users_url": {
          "description": "The users Url",
          "type": "string"
        }
      }
    },
    "removeAuditorFromOrganizationResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/removeAuditorFromOrganizationResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "removeAuditorFromSpaceResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "developers_url": {
          "description": "The developers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "security_groups_url": {
          "description": "The security Groups Url",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "space_quota_definition_guid": {
          "description": "The space Quota Definition Guid",
          "type": "string"
        }
      }
    },
    "removeAuditorFromSpaceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/removeAuditorFromSpaceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "removeBillingManagedOrganizationFromUserResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "default_space_url": {
          "description": "The default Space Url",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "removeBillingManagedOrganizationFromUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/removeBillingManagedOrganizationFromUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "removeBillingManagerFromOrganizationResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "billing_enabled": {
          "description": "The billing Enabled",
          "type": "boolean"
        },
        "billing_managers_url": {
          "description": "The billing Managers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "private_domains_url": {
          "description": "The private Domains Url",
          "type": "string"
        },
        "quota_definition_guid": {
          "description": "The quota Definition Guid",
          "type": "string"
        },
        "quota_definition_url": {
          "description": "The quota Definition Url",
          "type": "string"
        },
        "space_quota_definitions_url": {
          "description": "The space Quota Definitions Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        },
        "users_url": {
          "description": "The users Url",
          "type": "string"
        }
      }
    },
    "removeBillingManagerFromOrganizationResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/removeBillingManagerFromOrganizationResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "removeDeveloperFromSpaceResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "developers_url": {
          "description": "The developers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "security_groups_url": {
          "description": "The security Groups Url",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "space_quota_definition_guid": {
          "description": "The space Quota Definition Guid",
          "type": "string"
        }
      }
    },
    "removeDeveloperFromSpaceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/removeDeveloperFromSpaceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "removeManagedOrganizationFromUserResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "default_space_url": {
          "description": "The default Space Url",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "removeManagedOrganizationFromUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/removeManagedOrganizationFromUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "removeManagedSpaceFromUserResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "default_space_url": {
          "description": "The default Space Url",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "removeManagedSpaceFromUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/removeManagedSpaceFromUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "removeManagerFromOrganizationResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "billing_enabled": {
          "description": "The billing Enabled",
          "type": "boolean"
        },
        "billing_managers_url": {
          "description": "The billing Managers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "private_domains_url": {
          "description": "The private Domains Url",
          "type": "string"
        },
        "quota_definition_guid": {
          "description": "The quota Definition Guid",
          "type": "string"
        },
        "quota_definition_url": {
          "description": "The quota Definition Url",
          "type": "string"
        },
        "space_quota_definitions_url": {
          "description": "The space Quota Definitions Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        },
        "users_url": {
          "description": "The users Url",
          "type": "string"
        }
      }
    },
    "removeManagerFromOrganizationResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/removeManagerFromOrganizationResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "removeManagerFromSpaceResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "developers_url": {
          "description": "The developers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "security_groups_url": {
          "description": "The security Groups Url",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "space_quota_definition_guid": {
          "description": "The space Quota Definition Guid",
          "type": "string"
        }
      }
    },
    "removeManagerFromSpaceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/removeManagerFromSpaceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "removeOrganizationFromUserResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "default_space_url": {
          "description": "The default Space Url",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "removeOrganizationFromUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/removeOrganizationFromUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "removeRouteFromAppResponse": {
      "properties": {
        "buildpack": {
          "description": "The buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "command": {
          "description": "The command",
          "$ref": "#/definitions/genericObject"
        },
        "console": {
          "description": "The console",
          "type": "boolean"
        },
        "debug": {
          "description": "The debug",
          "$ref": "#/definitions/genericObject"
        },
        "detected_buildpack": {
          "description": "The detected Buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "detected_start_command": {
          "description": "The detected Start Command",
          "type": "string"
        },
        "disk_quota": {
          "description": "The disk Quota",
          "type": "integer"
        },
        "docker_image": {
          "description": "The docker Image",
          "$ref": "#/definitions/genericObject"
        },
        "environment_json": {
          "description": "The environment Json",
          "$ref": "#/definitions/genericObject"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "health_check_timeout": {
          "description": "The health Check Timeout",
          "$ref": "#/definitions/genericObject"
        },
        "health_check_type": {
          "description": "The health Check Type",
          "type": "string"
        },
        "instances": {
          "description": "The instances",
          "type": "integer"
        },
        "memory": {
          "description": "The memory",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "package_state": {
          "description": "The package State",
          "type": "string"
        },
        "package_updated_at": {
          "description": "The package Updated At",
          "type": "string"
        },
        "production": {
          "description": "The production",
          "type": "boolean"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "service_bindings_url": {
          "description": "The service Bindings Url",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        },
        "stack_guid": {
          "description": "The stack Guid",
          "type": "string"
        },
        "stack_url": {
          "description": "The stack Url",
          "type": "string"
        },
        "staging_failed_reason": {
          "description": "The staging Failed Reason",
          "$ref": "#/definitions/genericObject"
        },
        "staging_task_id": {
          "description": "The staging Task Id",
          "$ref": "#/definitions/genericObject"
        },
        "state": {
          "description": "The state",
          "type": "string"
        },
        "version": {
          "description": "The version",
          "type": "string"
        }
      }
    },
    "removeRouteFromAppResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/removeRouteFromAppResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "removeSecurityGroupFromSpaceResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "developers_url": {
          "description": "The developers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "security_groups_url": {
          "description": "The security Groups Url",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "space_quota_definition_guid": {
          "description": "The space Quota Definition Guid",
          "type": "string"
        }
      }
    },
    "removeSecurityGroupFromSpaceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/removeSecurityGroupFromSpaceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "removeServiceBindingFromAppResponse": {
      "properties": {
        "buildpack": {
          "description": "The buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "command": {
          "description": "The command",
          "$ref": "#/definitions/genericObject"
        },
        "console": {
          "description": "The console",
          "type": "boolean"
        },
        "debug": {
          "description": "The debug",
          "$ref": "#/definitions/genericObject"
        },
        "detected_buildpack": {
          "description": "The detected Buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "detected_start_command": {
          "description": "The detected Start Command",
          "type": "string"
        },
        "disk_quota": {
          "description": "The disk Quota",
          "type": "integer"
        },
        "docker_image": {
          "description": "The docker Image",
          "$ref": "#/definitions/genericObject"
        },
        "environment_json": {
          "description": "The environment Json",
          "$ref": "#/definitions/genericObject"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "health_check_timeout": {
          "description": "The health Check Timeout",
          "$ref": "#/definitions/genericObject"
        },
        "health_check_type": {
          "description": "The health Check Type",
          "type": "string"
        },
        "instances": {
          "description": "The instances",
          "type": "integer"
        },
        "memory": {
          "description": "The memory",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "package_state": {
          "description": "The package State",
          "type": "string"
        },
        "package_updated_at": {
          "description": "The package Updated At",
          "type": "string"
        },
        "production": {
          "description": "The production",
          "type": "boolean"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "service_bindings_url": {
          "description": "The service Bindings Url",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        },
        "stack_guid": {
          "description": "The stack Guid",
          "type": "string"
        },
        "stack_url": {
          "description": "The stack Url",
          "type": "string"
        },
        "staging_failed_reason": {
          "description": "The staging Failed Reason",
          "$ref": "#/definitions/genericObject"
        },
        "staging_task_id": {
          "description": "The staging Task Id",
          "$ref": "#/definitions/genericObject"
        },
        "state": {
          "description": "The state",
          "type": "string"
        },
        "version": {
          "description": "The version",
          "type": "string"
        }
      }
    },
    "removeServiceBindingFromAppResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/removeServiceBindingFromAppResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "removeSpaceFromSecurityGroupResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        },
        "rules": {
          "description": "The rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "running_default": {
          "description": "The running Default",
          "type": "boolean"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "staging_default": {
          "description": "The staging Default",
          "type": "boolean"
        }
      }
    },
    "removeSpaceFromSecurityGroupResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/removeSpaceFromSecurityGroupResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "removeSpaceFromSpaceQuotaDefinitionResponse": {
      "properties": {
        "instance_memory_limit": {
          "description": "The instance Memory Limit",
          "type": "integer"
        },
        "memory_limit": {
          "description": "The memory Limit",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "non_basic_services_allowed": {
          "description": "The non Basic Services Allowed",
          "type": "boolean"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "total_routes": {
          "description": "The total Routes",
          "type": "integer"
        },
        "total_services": {
          "description": "The total Services",
          "type": "integer"
        }
      }
    },
    "removeSpaceFromSpaceQuotaDefinitionResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/removeSpaceFromSpaceQuotaDefinitionResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "removeSpaceFromUserResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "default_space_url": {
          "description": "The default Space Url",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "removeSpaceFromUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/removeSpaceFromUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "removeUserFromOrganizationResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "billing_enabled": {
          "description": "The billing Enabled",
          "type": "boolean"
        },
        "billing_managers_url": {
          "description": "The billing Managers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "private_domains_url": {
          "description": "The private Domains Url",
          "type": "string"
        },
        "quota_definition_guid": {
          "description": "The quota Definition Guid",
          "type": "string"
        },
        "quota_definition_url": {
          "description": "The quota Definition Url",
          "type": "string"
        },
        "space_quota_definitions_url": {
          "description": "The space Quota Definitions Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        },
        "users_url": {
          "description": "The users Url",
          "type": "string"
        }
      }
    },
    "removeUserFromOrganizationResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/removeUserFromOrganizationResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "restageAppResponse": {
      "properties": {
        "buildpack": {
          "description": "The buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "command": {
          "description": "The command",
          "$ref": "#/definitions/genericObject"
        },
        "console": {
          "description": "The console",
          "type": "boolean"
        },
        "debug": {
          "description": "The debug",
          "$ref": "#/definitions/genericObject"
        },
        "detected_buildpack": {
          "description": "The detected Buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "detected_start_command": {
          "description": "The detected Start Command",
          "type": "string"
        },
        "disk_quota": {
          "description": "The disk Quota",
          "type": "integer"
        },
        "docker_image": {
          "description": "The docker Image",
          "$ref": "#/definitions/genericObject"
        },
        "environment_json": {
          "description": "The environment Json",
          "$ref": "#/definitions/genericObject"
        },
        "health_check_timeout": {
          "description": "The health Check Timeout",
          "$ref": "#/definitions/genericObject"
        },
        "health_check_type": {
          "description": "The health Check Type",
          "type": "string"
        },
        "instances": {
          "description": "The instances",
          "type": "integer"
        },
        "memory": {
          "description": "The memory",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "package_state": {
          "description": "The package State",
          "type": "string"
        },
        "package_updated_at": {
          "description": "The package Updated At",
          "type": "string"
        },
        "production": {
          "description": "The production",
          "type": "boolean"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "stack_guid": {
          "description": "The stack Guid",
          "type": "string"
        },
        "staging_failed_reason": {
          "description": "The staging Failed Reason",
          "$ref": "#/definitions/genericObject"
        },
        "staging_task_id": {
          "description": "The staging Task Id",
          "$ref": "#/definitions/genericObject"
        },
        "state": {
          "description": "The state",
          "type": "string"
        },
        "version": {
          "description": "The version",
          "type": "string"
        }
      }
    },
    "restageAppResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/restageAppResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveAppResponse": {
      "properties": {
        "buildpack": {
          "description": "The buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "command": {
          "description": "The command",
          "$ref": "#/definitions/genericObject"
        },
        "console": {
          "description": "The console",
          "type": "boolean"
        },
        "debug": {
          "description": "The debug",
          "$ref": "#/definitions/genericObject"
        },
        "detected_buildpack": {
          "description": "The detected Buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "detected_start_command": {
          "description": "The detected Start Command",
          "type": "string"
        },
        "disk_quota": {
          "description": "The disk Quota",
          "type": "integer"
        },
        "docker_image": {
          "description": "The docker Image",
          "$ref": "#/definitions/genericObject"
        },
        "environment_json": {
          "description": "The environment Json",
          "$ref": "#/definitions/genericObject"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "health_check_timeout": {
          "description": "The health Check Timeout",
          "$ref": "#/definitions/genericObject"
        },
        "health_check_type": {
          "description": "The health Check Type",
          "type": "string"
        },
        "instances": {
          "description": "The instances",
          "type": "integer"
        },
        "memory": {
          "description": "The memory",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "package_state": {
          "description": "The package State",
          "type": "string"
        },
        "package_updated_at": {
          "description": "The package Updated At",
          "type": "string"
        },
        "production": {
          "description": "The production",
          "type": "boolean"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "service_bindings_url": {
          "description": "The service Bindings Url",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        },
        "stack_guid": {
          "description": "The stack Guid",
          "type": "string"
        },
        "stack_url": {
          "description": "The stack Url",
          "type": "string"
        },
        "staging_failed_reason": {
          "description": "The staging Failed Reason",
          "$ref": "#/definitions/genericObject"
        },
        "staging_task_id": {
          "description": "The staging Task Id",
          "$ref": "#/definitions/genericObject"
        },
        "state": {
          "description": "The state",
          "type": "string"
        },
        "version": {
          "description": "The version",
          "type": "string"
        }
      }
    },
    "retrieveAppResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveAppResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveAppUsageEventResponse": {
      "properties": {
        "app_guid": {
          "description": "The app Guid",
          "type": "string"
        },
        "app_name": {
          "description": "The app Name",
          "type": "string"
        },
        "buildpack_guid": {
          "description": "The buildpack Guid",
          "type": "string"
        },
        "buildpack_name": {
          "description": "The buildpack Name",
          "type": "string"
        },
        "instance_count": {
          "description": "The instance Count",
          "type": "integer"
        },
        "memory_in_mb_per_instance": {
          "description": "The memory In Mb Per Instance",
          "type": "integer"
        },
        "org_guid": {
          "description": "The org Guid",
          "type": "string"
        },
        "package_state": {
          "description": "The package State",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_name": {
          "description": "The space Name",
          "type": "string"
        },
        "state": {
          "description": "The state",
          "type": "string"
        }
      }
    },
    "retrieveAppUsageEventResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveAppUsageEventResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveAuthLogin": {
      "properties": {
        "app": {
          "type": "object",
          "properties": {
            "version": {
              "description": "The version of the auth server",
              "type": "string"
            }
          }
        },
        "commit_id": {
          "description": "The GIT sha for the UAA version",
          "type": "string"
        },
        "entityID": {
          "description": "The UAA is always a SAML service provider. This field contains the configured entityID",
          "type": "string"
        },
        "idpDefinitions": {
          "description": "Object  A list of alias/url pairs of SAML IDP providers configured. Each url is the starting point to initiate the authentication process for the SAML identity provider.",
          "type": "object"
        },
        "links": {
          "description": "A list of alias/url pairs of configured action URLs for the UAA",
          "type": "object",
          "properties": {
            "login": {
              "description": "The link to the login host alias of the UAA",
              "type": "string"
            },
            "passwd": {
              "description": "The link to the 'Forgot Password' functionality. Can be external or internal to the UAA",
              "type": "string"
            },
            "register": {
              "description": "The link to the 'Create Account' functionality. Can be external or internal to the UAA",
              "type": "string"
            },
            "uaa": {
              "description": "The link to the uaa alias host of the UAA",
              "type": "string"
            }
          }
        },
        "prompts": {
          "description": "A list of name/value pairs of configured prompts that the UAA will login a user. Format for each prompt is [type, display name] where type can be 'text' or 'password'",
          "type": "object",
          "properties": {
            "passcode": {
              "description": "If a SAML identity provider is configured, this prompt contains a URL to where the user can initiate the SAML authentication flow.",
              "type": "array",
              "items": {
                "type": "object"
              },
              "x-omitempty": true
            },
            "password": {
              "description": "Information about the password prompt.",
              "type": "array",
              "items": {
                "type": "object"
              },
              "x-omitempty": true
            },
            "username": {
              "description": "Information about the username prompt.",
              "type": "array",
              "items": {
                "type": "object"
              },
              "x-omitempty": true
            }
          }
        },
        "showLoginLinks": {
          "description": "Set to true if there are SAML or OAUTH/OIDC providers with a visible link on the login page.",
          "type": "boolean"
        },
        "timestamp": {
          "description": "JSON timestamp for the commit of the UAA version",
          "type": "string"
        },
        "zone_name": {
          "description": "The name of the zone invoked",
          "type": "string"
        }
      }
    },
    "retrieveBuildpackResponse": {
      "properties": {
        "enabled": {
          "description": "The enabled",
          "type": "boolean"
        },
        "filename": {
          "description": "The filename",
          "type": "string"
        },
        "locked": {
          "description": "The locked",
          "type": "boolean"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "position": {
          "description": "The position",
          "type": "integer"
        }
      }
    },
    "retrieveBuildpackResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveBuildpackResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveDomainDeprecatedResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        }
      }
    },
    "retrieveDomainDeprecatedResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveDomainDeprecatedResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveEventResponse": {
      "properties": {
        "actee": {
          "description": "The actee",
          "type": "string"
        },
        "actee_name": {
          "description": "The actee Name",
          "type": "string"
        },
        "actee_type": {
          "description": "The actee Type",
          "type": "string"
        },
        "actor": {
          "description": "The actor",
          "type": "string"
        },
        "actor_name": {
          "description": "The actor Name",
          "type": "string"
        },
        "actor_type": {
          "description": "The actor Type",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata",
          "$ref": "#/definitions/genericObject"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "retrieveEventResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveEventResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveJobThatIsQueuedResponse": {
      "properties": {
        "guid": {
          "description": "The guid",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        }
      }
    },
    "retrieveJobThatIsQueuedResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveJobThatIsQueuedResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveJobThatWasSuccessfulResponse": {
      "properties": {
        "guid": {
          "description": "The guid",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        }
      }
    },
    "retrieveJobThatWasSuccessfulResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveJobThatWasSuccessfulResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveJobWithKnownFailureResponse": {
      "properties": {
        "error": {
          "description": "The error",
          "type": "string"
        },
        "error_details": {
          "description": "The error Details",
          "$ref": "#/definitions/genericObject"
        },
        "guid": {
          "description": "The guid",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        }
      }
    },
    "retrieveJobWithKnownFailureResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveJobWithKnownFailureResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveJobWithUnknownFailureResponse": {
      "properties": {
        "error": {
          "description": "The error",
          "type": "string"
        },
        "error_details": {
          "description": "The error Details",
          "$ref": "#/definitions/genericObject"
        },
        "guid": {
          "description": "The guid",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        }
      }
    },
    "retrieveJobWithUnknownFailureResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveJobWithUnknownFailureResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveOrganizationQuotaDefinitionResponse": {
      "properties": {
        "instance_memory_limit": {
          "description": "The instance Memory Limit",
          "type": "integer"
        },
        "memory_limit": {
          "description": "The memory Limit",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "non_basic_services_allowed": {
          "description": "The non Basic Services Allowed",
          "type": "boolean"
        },
        "total_routes": {
          "description": "The total Routes",
          "type": "integer"
        },
        "total_services": {
          "description": "The total Services",
          "type": "integer"
        },
        "trial_db_allowed": {
          "description": "The trial Db Allowed",
          "type": "boolean"
        }
      }
    },
    "retrieveOrganizationQuotaDefinitionResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveOrganizationQuotaDefinitionResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveOrganizationResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "billing_enabled": {
          "description": "The billing Enabled",
          "type": "boolean"
        },
        "billing_managers_url": {
          "description": "The billing Managers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "private_domains_url": {
          "description": "The private Domains Url",
          "type": "string"
        },
        "quota_definition_guid": {
          "description": "The quota Definition Guid",
          "type": "string"
        },
        "quota_definition_url": {
          "description": "The quota Definition Url",
          "type": "string"
        },
        "space_quota_definitions_url": {
          "description": "The space Quota Definitions Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        },
        "users_url": {
          "description": "The users Url",
          "type": "string"
        }
      }
    },
    "retrieveOrganizationResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveOrganizationResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrievePrivateDomainResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        },
        "owning_organization_guid": {
          "description": "The owning Organization Guid",
          "type": "string"
        },
        "owning_organization_url": {
          "description": "The owning Organization Url",
          "type": "string"
        }
      }
    },
    "retrievePrivateDomainResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrievePrivateDomainResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveRouteResponse": {
      "properties": {
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "domain_guid": {
          "description": "The domain Guid",
          "type": "string"
        },
        "domain_url": {
          "description": "The domain Url",
          "type": "string"
        },
        "host": {
          "description": "The host",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        }
      }
    },
    "retrieveRouteResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveRouteResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveSecurityGroupResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        },
        "rules": {
          "description": "The rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "running_default": {
          "description": "The running Default",
          "type": "boolean"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "staging_default": {
          "description": "The staging Default",
          "type": "boolean"
        }
      }
    },
    "retrieveSecurityGroupResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveSecurityGroupResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveServiceAuthTokenDeprecatedResponse": {
      "properties": {
        "label": {
          "description": "The label",
          "type": "string"
        },
        "provider": {
          "description": "The provider",
          "type": "string"
        }
      }
    },
    "retrieveServiceAuthTokenDeprecatedResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveServiceAuthTokenDeprecatedResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveServiceBindingResponse": {
      "properties": {
        "app_guid": {
          "description": "The app Guid",
          "type": "string"
        },
        "app_url": {
          "description": "The app Url",
          "type": "string"
        },
        "binding_options": {
          "description": "The binding Options",
          "$ref": "#/definitions/genericObject"
        },
        "credentials": {
          "description": "The credentials",
          "$ref": "#/definitions/genericObject"
        },
        "gateway_data": {
          "description": "The gateway Data",
          "$ref": "#/definitions/genericObject"
        },
        "gateway_name": {
          "description": "The gateway Name",
          "type": "string"
        },
        "service_instance_guid": {
          "description": "The service Instance Guid",
          "type": "string"
        },
        "service_instance_url": {
          "description": "The service Instance Url",
          "type": "string"
        },
        "syslog_drain_url": {
          "description": "The syslog Drain Url",
          "$ref": "#/definitions/genericObject"
        }
      }
    },
    "retrieveServiceBindingResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveServiceBindingResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveServiceBrokerResponse": {
      "properties": {
        "auth_username": {
          "description": "The auth Username",
          "type": "string"
        },
        "broker_url": {
          "description": "The broker Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        }
      }
    },
    "retrieveServiceBrokerResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveServiceBrokerResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveServiceInstanceResponse": {
      "properties": {
        "credentials": {
          "description": "The credentials",
          "$ref": "#/definitions/genericObject"
        },
        "dashboard_url": {
          "description": "The dashboard Url",
          "$ref": "#/definitions/genericObject"
        },
        "gateway_data": {
          "description": "The gateway Data",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "service_bindings_url": {
          "description": "The service Bindings Url",
          "type": "string"
        },
        "service_plan_guid": {
          "description": "The service Plan Guid",
          "type": "string"
        },
        "service_plan_url": {
          "description": "The service Plan Url",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "retrieveServiceInstanceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveServiceInstanceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveServicePlanResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "description": {
          "description": "The description",
          "type": "string"
        },
        "extra": {
          "description": "The extra",
          "$ref": "#/definitions/genericObject"
        },
        "free": {
          "description": "The free",
          "type": "boolean"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "public": {
          "description": "The public",
          "type": "boolean"
        },
        "service_guid": {
          "description": "The service Guid",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "service_url": {
          "description": "The service Url",
          "type": "string"
        },
        "unique_id": {
          "description": "The unique Id",
          "type": "string"
        }
      }
    },
    "retrieveServicePlanResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveServicePlanResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveServicePlanVisibilityResponse": {
      "properties": {
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "service_plan_guid": {
          "description": "The service Plan Guid",
          "type": "string"
        },
        "service_plan_url": {
          "description": "The service Plan Url",
          "type": "string"
        }
      }
    },
    "retrieveServicePlanVisibilityResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveServicePlanVisibilityResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveServiceResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "bindable": {
          "description": "The bindable",
          "type": "boolean"
        },
        "description": {
          "description": "The description",
          "type": "string"
        },
        "documentation_url": {
          "description": "The documentation Url",
          "$ref": "#/definitions/genericObject"
        },
        "extra": {
          "description": "The extra",
          "$ref": "#/definitions/genericObject"
        },
        "info_url": {
          "description": "The info Url",
          "$ref": "#/definitions/genericObject"
        },
        "label": {
          "description": "The label",
          "type": "string"
        },
        "long_description": {
          "description": "The long Description",
          "$ref": "#/definitions/genericObject"
        },
        "plan_updateable": {
          "description": "The plan Updateable",
          "type": "boolean"
        },
        "provider": {
          "description": "The provider",
          "type": "string"
        },
        "requires": {
          "description": "The requires",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "service_broker_guid": {
          "description": "The service Broker Guid",
          "type": "string"
        },
        "service_plans_url": {
          "description": "The service Plans Url",
          "type": "string"
        },
        "tags": {
          "description": "The tags",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "unique_id": {
          "description": "The unique Id",
          "type": "string"
        },
        "url": {
          "description": "The url",
          "type": "string"
        },
        "version": {
          "description": "The version",
          "type": "string"
        }
      }
    },
    "retrieveServiceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveServiceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveServiceUsageEventResponse": {
      "properties": {
        "org_guid": {
          "description": "The org Guid",
          "type": "string"
        },
        "service_guid": {
          "description": "The service Guid",
          "type": "string"
        },
        "service_instance_guid": {
          "description": "The service Instance Guid",
          "type": "string"
        },
        "service_instance_name": {
          "description": "The service Instance Name",
          "type": "string"
        },
        "service_instance_type": {
          "description": "The service Instance Type",
          "type": "string"
        },
        "service_label": {
          "description": "The service Label",
          "type": "string"
        },
        "service_plan_guid": {
          "description": "The service Plan Guid",
          "type": "string"
        },
        "service_plan_name": {
          "description": "The service Plan Name",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_name": {
          "description": "The space Name",
          "type": "string"
        },
        "state": {
          "description": "The state",
          "type": "string"
        }
      }
    },
    "retrieveServiceUsageEventResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveServiceUsageEventResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveSharedDomainResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        }
      }
    },
    "retrieveSharedDomainResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveSharedDomainResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveSpaceQuotaDefinitionResponse": {
      "properties": {
        "instance_memory_limit": {
          "description": "The instance Memory Limit",
          "type": "integer"
        },
        "memory_limit": {
          "description": "The memory Limit",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "non_basic_services_allowed": {
          "description": "The non Basic Services Allowed",
          "type": "boolean"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "total_routes": {
          "description": "The total Routes",
          "type": "integer"
        },
        "total_services": {
          "description": "The total Services",
          "type": "integer"
        }
      }
    },
    "retrieveSpaceQuotaDefinitionResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveSpaceQuotaDefinitionResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveSpaceResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "developers_url": {
          "description": "The developers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "security_groups_url": {
          "description": "The security Groups Url",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "space_quota_definition_guid": {
          "description": "The space Quota Definition Guid",
          "type": "string"
        }
      }
    },
    "retrieveSpaceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveSpaceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveStackResponse": {
      "properties": {
        "description": {
          "description": "The description",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        }
      }
    },
    "retrieveStackResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveStackResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveUserProvidedServiceInstanceResponse": {
      "properties": {
        "credentials": {
          "description": "The credentials",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "service_bindings_url": {
          "description": "The service Bindings Url",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        },
        "syslog_drain_url": {
          "description": "The syslog Drain Url",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "retrieveUserProvidedServiceInstanceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveUserProvidedServiceInstanceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrieveUserResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "default_space_url": {
          "description": "The default Space Url",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "retrieveUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrieveUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrievingOrganizationMemoryUsageResponse": {
      "properties": {
        "memory_usage_in_mb": {
          "description": "The memory Usage In Mb",
          "type": "integer"
        }
      }
    },
    "retrievingOrganizationMemoryUsageResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrievingOrganizationMemoryUsageResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "retrievingPermissionsOnServiceInstanceResponse": {
      "properties": {
        "manage": {
          "description": "The manage",
          "type": "boolean"
        }
      }
    },
    "retrievingPermissionsOnServiceInstanceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/retrievingPermissionsOnServiceInstanceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "returnSecurityGroupsUsedForRunningAppsResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        },
        "rules": {
          "description": "The rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "running_default": {
          "description": "The running Default",
          "type": "boolean"
        },
        "staging_default": {
          "description": "The staging Default",
          "type": "boolean"
        }
      }
    },
    "returnSecurityGroupsUsedForRunningAppsResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/returnSecurityGroupsUsedForRunningAppsResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "returnSecurityGroupsUsedForRunningAppsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/returnSecurityGroupsUsedForRunningAppsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "returnSecurityGroupsUsedForStagingResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        },
        "rules": {
          "description": "The rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "running_default": {
          "description": "The running Default",
          "type": "boolean"
        },
        "staging_default": {
          "description": "The staging Default",
          "type": "boolean"
        }
      }
    },
    "returnSecurityGroupsUsedForStagingResponsePaged": {
      "properties": {
        "next_url": {
          "type": "string"
        },
        "prev_url": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/returnSecurityGroupsUsedForStagingResponseResource"
          }
        },
        "total_pages": {
          "type": "integer"
        },
        "total_results": {
          "type": "integer"
        }
      }
    },
    "returnSecurityGroupsUsedForStagingResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/returnSecurityGroupsUsedForStagingResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "setFeatureFlagRequest": {
      "properties": {
        "enabled": {
          "description": "The state of the feature flag.",
          "type": "boolean"
        },
        "error_message": {
          "description": "The custom error message for the feature flag.",
          "type": "string"
        }
      }
    },
    "setFeatureFlagResponse": {
      "properties": {
        "enabled": {
          "description": "The enabled",
          "type": "boolean"
        },
        "error_message": {
          "description": "The error Message",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "url": {
          "description": "The url",
          "type": "string"
        }
      }
    },
    "setFeatureFlagResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/setFeatureFlagResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "setSecurityGroupAsDefaultForRunningAppsResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        },
        "rules": {
          "description": "The rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "running_default": {
          "description": "The running Default",
          "type": "boolean"
        },
        "staging_default": {
          "description": "The staging Default",
          "type": "boolean"
        }
      }
    },
    "setSecurityGroupAsDefaultForRunningAppsResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/setSecurityGroupAsDefaultForRunningAppsResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "setSecurityGroupAsDefaultForStagingResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        },
        "rules": {
          "description": "The rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "running_default": {
          "description": "The running Default",
          "type": "boolean"
        },
        "staging_default": {
          "description": "The staging Default",
          "type": "boolean"
        }
      }
    },
    "setSecurityGroupAsDefaultForStagingResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/setSecurityGroupAsDefaultForStagingResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "updateAppRequest": {
      "properties": {
        "buildpack": {
          "description": "Buildpack to build the app. 3 options: a) Blank means autodetection; b) A Git Url pointing to a buildpack; c) Name of an installed buildpack.",
          "$ref": "#/definitions/genericObject"
        },
        "command": {
          "description": "The command to start an app after it is staged (e.g. 'rails s -p $PORT' or 'java com.org.Server $PORT').",
          "$ref": "#/definitions/genericObject"
        },
        "console": {
          "description": "Open the console port for the app (at $CONSOLE_PORT).",
          "type": "boolean"
        },
        "debug": {
          "description": "Open the debug port for the app (at $DEBUG_PORT).",
          "type": "boolean"
        },
        "detected_start_command": {
          "description": "The command detected by the buildpack during staging.",
          "$ref": "#/definitions/genericObject"
        },
        "disk_quota": {
          "description": "The maximum amount of disk available to an instance of an app. In megabytes.",
          "type": "string"
        },
        "docker_image": {
          "description": "Name of the Docker image containing the app",
          "type": "string"
        },
        "environment_json": {
          "description": "Key/value pairs of all the environment variables to run in your app. Does not include any system or service variables.",
          "$ref": "#/definitions/genericObject"
        },
        "health_check_timeout": {
          "description": "Timeout for health checking of an staged app when starting up",
          "$ref": "#/definitions/genericObject"
        },
        "health_check_type": {
          "description": "Type of health check to perform.",
          "type": "string"
        },
        "instances": {
          "description": "The number of instances of the app to run. To ensure optimal availability ensure there are at least 2 instances.",
          "type": "string"
        },
        "memory": {
          "description": "The amount of memory each instance should have. In megabytes.",
          "type": "string"
        },
        "name": {
          "description": "The name of the app.",
          "type": "string"
        },
        "production": {
          "description": "Deprecated.",
          "type": "boolean"
        },
        "space_guid": {
          "description": "The guid of the associated space.",
          "type": "string"
        },
        "stack_guid": {
          "description": "The guid of the associated stack.",
          "type": "string"
        },
        "state": {
          "description": "The current desired state of the app. One of STOPPED or STARTED.",
          "type": "string"
        }
      }
    },
    "updateAppResponse": {
      "properties": {
        "buildpack": {
          "description": "The buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "command": {
          "description": "The command",
          "$ref": "#/definitions/genericObject"
        },
        "console": {
          "description": "The console",
          "type": "boolean"
        },
        "debug": {
          "description": "The debug",
          "$ref": "#/definitions/genericObject"
        },
        "detected_buildpack": {
          "description": "The detected Buildpack",
          "$ref": "#/definitions/genericObject"
        },
        "detected_start_command": {
          "description": "The detected Start Command",
          "type": "string"
        },
        "disk_quota": {
          "description": "The disk Quota",
          "type": "integer"
        },
        "docker_image": {
          "description": "The docker Image",
          "$ref": "#/definitions/genericObject"
        },
        "environment_json": {
          "description": "The environment Json",
          "$ref": "#/definitions/genericObject"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "health_check_timeout": {
          "description": "The health Check Timeout",
          "$ref": "#/definitions/genericObject"
        },
        "health_check_type": {
          "description": "The health Check Type",
          "type": "string"
        },
        "instances": {
          "description": "The instances",
          "type": "integer"
        },
        "memory": {
          "description": "The memory",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "package_state": {
          "description": "The package State",
          "type": "string"
        },
        "package_updated_at": {
          "description": "The package Updated At",
          "type": "string"
        },
        "production": {
          "description": "The production",
          "type": "boolean"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "service_bindings_url": {
          "description": "The service Bindings Url",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        },
        "stack_guid": {
          "description": "The stack Guid",
          "type": "string"
        },
        "stack_url": {
          "description": "The stack Url",
          "type": "string"
        },
        "staging_failed_reason": {
          "description": "The staging Failed Reason",
          "$ref": "#/definitions/genericObject"
        },
        "staging_task_id": {
          "description": "The staging Task Id",
          "$ref": "#/definitions/genericObject"
        },
        "state": {
          "description": "The state",
          "type": "string"
        },
        "version": {
          "description": "The version",
          "type": "string"
        }
      }
    },
    "updateAppResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/updateAppResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "updateContentsOfRunningEnvironmentVariableGroupRequest": {
      "properties": {
        "abc": {
          "description": "The abc",
          "type": "integer"
        },
        "do-re-me": {
          "description": "The doreme",
          "type": "string"
        }
      }
    },
    "updateContentsOfRunningEnvironmentVariableGroupResponse": {
      "properties": {
        "abc": {
          "description": "The abc",
          "type": "integer"
        },
        "do-re-me": {
          "description": "The doreme",
          "type": "string"
        }
      }
    },
    "updateContentsOfRunningEnvironmentVariableGroupResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/updateContentsOfRunningEnvironmentVariableGroupResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "updateContentsOfStagingEnvironmentVariableGroupRequest": {
      "properties": {
        "abc": {
          "description": "The abc",
          "type": "integer"
        },
        "do-re-me": {
          "description": "The doreme",
          "type": "string"
        }
      }
    },
    "updateContentsOfStagingEnvironmentVariableGroupResponse": {
      "properties": {
        "abc": {
          "description": "The abc",
          "type": "integer"
        },
        "do-re-me": {
          "description": "The doreme",
          "type": "string"
        }
      }
    },
    "updateContentsOfStagingEnvironmentVariableGroupResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/updateContentsOfStagingEnvironmentVariableGroupResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "updateOrganizationQuotaDefinitionRequest": {
      "properties": {
        "instance_memory_limit": {
          "description": "The maximum amount of memory in megabyte an application instance can have. (-1 represents an unlimited amount)",
          "type": "string"
        },
        "memory_limit": {
          "description": "How much memory in megabyte an organization can have.",
          "type": "string"
        },
        "name": {
          "description": "The name for the Organization Quota Definition.",
          "type": "string"
        },
        "non_basic_services_allowed": {
          "description": "If an organization can have non basic services",
          "type": "boolean"
        },
        "total_routes": {
          "description": "How many routes an organization can have.",
          "type": "string"
        },
        "total_services": {
          "description": "How many services an organization can have.",
          "type": "string"
        },
        "trial_db_allowed": {
          "description": "If an organization can have a trial db.",
          "$ref": "#/definitions/genericObject"
        }
      }
    },
    "updateOrganizationQuotaDefinitionResponse": {
      "properties": {
        "instance_memory_limit": {
          "description": "The instance Memory Limit",
          "type": "integer"
        },
        "memory_limit": {
          "description": "The memory Limit",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "non_basic_services_allowed": {
          "description": "The non Basic Services Allowed",
          "type": "boolean"
        },
        "total_routes": {
          "description": "The total Routes",
          "type": "integer"
        },
        "total_services": {
          "description": "The total Services",
          "type": "integer"
        },
        "trial_db_allowed": {
          "description": "The trial Db Allowed",
          "type": "boolean"
        }
      }
    },
    "updateOrganizationQuotaDefinitionResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/updateOrganizationQuotaDefinitionResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "updateOrganizationRequest": {
      "properties": {
        "billing_enabled": {
          "description": "If billing is enabled for this organization",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name of the organization",
          "type": "string"
        },
        "quota_definition_guid": {
          "description": "The guid of quota to associate with this organization",
          "type": "string"
        },
        "status": {
          "description": "Status of the organization",
          "$ref": "#/definitions/genericObject"
        }
      }
    },
    "updateOrganizationResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "billing_enabled": {
          "description": "The billing Enabled",
          "type": "boolean"
        },
        "billing_managers_url": {
          "description": "The billing Managers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "private_domains_url": {
          "description": "The private Domains Url",
          "type": "string"
        },
        "quota_definition_guid": {
          "description": "The quota Definition Guid",
          "type": "string"
        },
        "quota_definition_url": {
          "description": "The quota Definition Url",
          "type": "string"
        },
        "space_quota_definitions_url": {
          "description": "The space Quota Definitions Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        },
        "users_url": {
          "description": "The users Url",
          "type": "string"
        }
      }
    },
    "updateOrganizationResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/updateOrganizationResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "updateRouteRequest": {
      "properties": {
        "domain_guid": {
          "description": "The guid of the associated domain",
          "type": "string"
        },
        "guid": {
          "description": "The guid of the route.",
          "type": "string"
        },
        "host": {
          "description": "The host portion of the route",
          "type": "string"
        },
        "space_guid": {
          "description": "The guid of the associated space",
          "type": "string"
        }
      }
    },
    "updateRouteResponse": {
      "properties": {
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "domain_guid": {
          "description": "The domain Guid",
          "type": "string"
        },
        "domain_url": {
          "description": "The domain Url",
          "type": "string"
        },
        "host": {
          "description": "The host",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        }
      }
    },
    "updateRouteResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/updateRouteResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "updateSecurityGroupRequest": {
      "properties": {
        "name": {
          "description": "The name of the security group.",
          "type": "string"
        },
        "rules": {
          "description": "The egress rules for apps that belong to this security group. A rule consists of a protocol (tcp icmp udp all) destination CIDR or destination range  port or port range (tcp udp all) type (control signal for icmp) code (control signal for icmp)  log (enables logging for the egress rule)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "space_guids": {
          "description": "The list of associated spaces.",
          "$ref": "#/definitions/genericObject"
        }
      }
    },
    "updateSecurityGroupResponse": {
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        },
        "rules": {
          "description": "The rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "running_default": {
          "description": "The running Default",
          "type": "boolean"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "staging_default": {
          "description": "The staging Default",
          "type": "boolean"
        }
      }
    },
    "updateSecurityGroupResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/updateSecurityGroupResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "updateServiceBrokerRequest": {
      "properties": {
        "auth_password": {
          "description": "The password with which to authenticate against the service broker.",
          "type": "string"
        },
        "auth_username": {
          "description": "The username with which to authenticate against the service broker.",
          "type": "string"
        },
        "broker_url": {
          "description": "The URL of the service broker.",
          "type": "string"
        },
        "name": {
          "description": "The name of the service broker.",
          "type": "string"
        }
      }
    },
    "updateServiceBrokerResponse": {
      "properties": {
        "auth_username": {
          "description": "The auth Username",
          "type": "string"
        },
        "broker_url": {
          "description": "The broker Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        }
      }
    },
    "updateServiceBrokerResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/updateServiceBrokerResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "updateServiceDeprecatedRequest": {
      "properties": {
        "active": {
          "description": "A boolean describing that the service can be provisioned by users",
          "$ref": "#/definitions/genericObject"
        },
        "bindable": {
          "description": "A boolean describing that the service can be bound to applications",
          "$ref": "#/definitions/genericObject"
        },
        "description": {
          "description": "A short blurb describing the service",
          "type": "string"
        },
        "documentation_url": {
          "description": "A url that points to a documentation page for the service",
          "type": "string"
        },
        "extra": {
          "description": "A JSON field with extra data pertaining to the service",
          "type": "string"
        },
        "guid": {
          "description": "The guid of the service",
          "type": "string"
        },
        "info_url": {
          "description": "A url that points to an info page for the service",
          "type": "string"
        },
        "label": {
          "description": "The name of the service",
          "type": "string"
        },
        "long_description": {
          "description": "A longer description of the service",
          "type": "string"
        },
        "provider": {
          "description": "The name of the service provider (used only by v1 service gateways)",
          "type": "string"
        },
        "requires": {
          "description": "A list of dependencies for services",
          "type": "string"
        },
        "service_broker_guid": {
          "description": "The guid of the v2 service broker associated with the service",
          "type": "string"
        },
        "tags": {
          "description": "A list of tags for the service",
          "type": "string"
        },
        "timeout": {
          "description": "A timeout used by the v1 service gateway client",
          "$ref": "#/definitions/genericObject"
        },
        "unique_id": {
          "description": "A guid that identifies the service with the broker (not the same as the guid above)",
          "$ref": "#/definitions/genericObject"
        },
        "url": {
          "description": "The url of ther service provider (used only by v1 service gateways)",
          "type": "string"
        },
        "version": {
          "description": "The version of the service (used only by v1 service gateways)",
          "type": "string"
        }
      }
    },
    "updateServiceDeprecatedResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "bindable": {
          "description": "The bindable",
          "type": "boolean"
        },
        "description": {
          "description": "The description",
          "type": "string"
        },
        "documentation_url": {
          "description": "The documentation Url",
          "$ref": "#/definitions/genericObject"
        },
        "extra": {
          "description": "The extra",
          "$ref": "#/definitions/genericObject"
        },
        "info_url": {
          "description": "The info Url",
          "$ref": "#/definitions/genericObject"
        },
        "label": {
          "description": "The label",
          "type": "string"
        },
        "long_description": {
          "description": "The long Description",
          "$ref": "#/definitions/genericObject"
        },
        "plan_updateable": {
          "description": "The plan Updateable",
          "type": "boolean"
        },
        "provider": {
          "description": "The provider",
          "type": "string"
        },
        "requires": {
          "description": "The requires",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "service_broker_guid": {
          "description": "The service Broker Guid",
          "type": "string"
        },
        "service_plans_url": {
          "description": "The service Plans Url",
          "type": "string"
        },
        "tags": {
          "description": "The tags",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericObject"
          }
        },
        "unique_id": {
          "description": "The unique Id",
          "type": "string"
        },
        "url": {
          "description": "The url",
          "type": "string"
        },
        "version": {
          "description": "The version",
          "type": "string"
        }
      }
    },
    "updateServiceDeprecatedResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/updateServiceDeprecatedResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "updateServiceInstanceRequest": {
      "properties": {
        "name": {
          "description": "The new name for the service instance",
          "type": "string"
        },
        "service_plan_guid": {
          "description": "The new plan guid for the service instance",
          "type": "string"
        }
      }
    },
    "updateServiceInstanceResponse": {
      "properties": {
        "credentials": {
          "description": "The credentials",
          "$ref": "#/definitions/genericObject"
        },
        "dashboard_url": {
          "description": "The dashboard Url",
          "$ref": "#/definitions/genericObject"
        },
        "gateway_data": {
          "description": "The gateway Data",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "service_bindings_url": {
          "description": "The service Bindings Url",
          "type": "string"
        },
        "service_plan_guid": {
          "description": "The service Plan Guid",
          "type": "string"
        },
        "service_plan_url": {
          "description": "The service Plan Url",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "updateServiceInstanceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/updateServiceInstanceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "updateServicePlanDeprecatedRequest": {
      "properties": {
        "active": {
          "description": "A boolean that determines whether plans can be used to create new instances.",
          "type": "boolean"
        },
        "description": {
          "description": "A description of the service plan",
          "type": "string"
        },
        "extra": {
          "description": "A JSON string with additional data about the plan",
          "type": "string"
        },
        "free": {
          "description": "A boolean describing if the service plan is free",
          "type": "boolean"
        },
        "guid": {
          "description": "The guid of the service plan",
          "type": "string"
        },
        "name": {
          "description": "The name of the service plan",
          "type": "string"
        },
        "public": {
          "description": "A boolean describing that the plan is visible to the all users",
          "$ref": "#/definitions/genericObject"
        },
        "service_guid": {
          "description": "The guid of the related service",
          "type": "string"
        },
        "unique_id": {
          "description": "A guid for the service plan in the service broker (not the same as the cloud controller guid)",
          "$ref": "#/definitions/genericObject"
        }
      }
    },
    "updateServicePlanDeprecatedResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "description": {
          "description": "The description",
          "type": "string"
        },
        "extra": {
          "description": "The extra",
          "$ref": "#/definitions/genericObject"
        },
        "free": {
          "description": "The free",
          "type": "boolean"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "public": {
          "description": "The public",
          "type": "boolean"
        },
        "service_guid": {
          "description": "The service Guid",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "service_url": {
          "description": "The service Url",
          "type": "string"
        },
        "unique_id": {
          "description": "The unique Id",
          "type": "string"
        }
      }
    },
    "updateServicePlanDeprecatedResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/updateServicePlanDeprecatedResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "updateServicePlanVisibilityRequest": {
      "properties": {
        "organization_guid": {
          "description": "The guid of the organization the plan will be visible to",
          "type": "string"
        },
        "service_plan_guid": {
          "description": "The guid of the plan that will be made visible",
          "type": "string"
        }
      }
    },
    "updateServicePlanVisibilityResponse": {
      "properties": {
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "service_plan_guid": {
          "description": "The service Plan Guid",
          "type": "string"
        },
        "service_plan_url": {
          "description": "The service Plan Url",
          "type": "string"
        }
      }
    },
    "updateServicePlanVisibilityResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/updateServicePlanVisibilityResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "updateSpaceQuotaDefinitionRequest": {
      "properties": {
        "instance_memory_limit": {
          "description": "The maximum amount of memory in megabytes an application instance can have. (-1 represents an unlimited amount)",
          "type": "string"
        },
        "memory_limit": {
          "description": "How much memory in megabytes a space can have.",
          "type": "string"
        },
        "name": {
          "description": "The name for the Space Quota Definition.",
          "type": "string"
        },
        "non_basic_services_allowed": {
          "description": "If a space can have non basic services",
          "type": "boolean"
        },
        "organization_guid": {
          "description": "The owning organization of the space quota",
          "type": "string"
        },
        "total_routes": {
          "description": "How many routes a space can have.",
          "type": "string"
        },
        "total_services": {
          "description": "How many services a space can have.",
          "type": "string"
        }
      }
    },
    "updateSpaceQuotaDefinitionResponse": {
      "properties": {
        "instance_memory_limit": {
          "description": "The instance Memory Limit",
          "type": "integer"
        },
        "memory_limit": {
          "description": "The memory Limit",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "non_basic_services_allowed": {
          "description": "The non Basic Services Allowed",
          "type": "boolean"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        },
        "total_routes": {
          "description": "The total Routes",
          "type": "integer"
        },
        "total_services": {
          "description": "The total Services",
          "type": "integer"
        }
      }
    },
    "updateSpaceQuotaDefinitionResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/updateSpaceQuotaDefinitionResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "updateSpaceRequest": {
      "properties": {
        "auditor_guids": {
          "description": "The list of the associated auditors",
          "$ref": "#/definitions/genericObject"
        },
        "developer_guids": {
          "description": "The list of the associated developers",
          "$ref": "#/definitions/genericObject"
        },
        "domain_guids": {
          "description": "The list of the associated domains",
          "$ref": "#/definitions/genericObject"
        },
        "manager_guids": {
          "description": "The list of the associated managers",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name of the space",
          "type": "string"
        },
        "organization_guid": {
          "description": "The guid of the associated organization",
          "type": "string"
        },
        "security_group_guids": {
          "description": "The list of the associated security groups",
          "$ref": "#/definitions/genericObject"
        }
      }
    },
    "updateSpaceResponse": {
      "properties": {
        "app_events_url": {
          "description": "The app Events Url",
          "type": "string"
        },
        "apps_url": {
          "description": "The apps Url",
          "type": "string"
        },
        "auditors_url": {
          "description": "The auditors Url",
          "type": "string"
        },
        "developers_url": {
          "description": "The developers Url",
          "type": "string"
        },
        "domains_url": {
          "description": "The domains Url",
          "type": "string"
        },
        "events_url": {
          "description": "The events Url",
          "type": "string"
        },
        "managers_url": {
          "description": "The managers Url",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "organization_guid": {
          "description": "The organization Guid",
          "type": "string"
        },
        "organization_url": {
          "description": "The organization Url",
          "type": "string"
        },
        "routes_url": {
          "description": "The routes Url",
          "type": "string"
        },
        "security_groups_url": {
          "description": "The security Groups Url",
          "type": "string"
        },
        "service_instances_url": {
          "description": "The service Instances Url",
          "type": "string"
        },
        "space_quota_definition_guid": {
          "description": "The space Quota Definition Guid",
          "type": "string"
        }
      }
    },
    "updateSpaceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/updateSpaceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "updateUserProvidedServiceInstanceRequest": {
      "properties": {
        "credentials": {
          "description": "A hash that can be used to store credentials",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "A name for the service instance",
          "type": "string"
        },
        "syslog_drain_url": {
          "description": "The url for the syslog_drain to direct to",
          "type": "string"
        }
      }
    },
    "updateUserProvidedServiceInstanceResponse": {
      "properties": {
        "credentials": {
          "description": "The credentials",
          "$ref": "#/definitions/genericObject"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "service_bindings_url": {
          "description": "The service Bindings Url",
          "type": "string"
        },
        "space_guid": {
          "description": "The space Guid",
          "type": "string"
        },
        "space_url": {
          "description": "The space Url",
          "type": "string"
        },
        "syslog_drain_url": {
          "description": "The syslog Drain Url",
          "type": "string"
        },
        "type": {
          "description": "The type",
          "type": "string"
        }
      }
    },
    "updateUserProvidedServiceInstanceResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/updateUserProvidedServiceInstanceResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "updateUserRequest": {
      "properties": {
        "admin": {
          "description": "Whether the user is an admin (Use UAA instead).",
          "$ref": "#/definitions/genericObject"
        },
        "default_space_guid": {
          "description": "The guid of the default space for apps created by this user.",
          "type": "string"
        }
      }
    },
    "updateUserResponse": {
      "properties": {
        "active": {
          "description": "The active",
          "type": "boolean"
        },
        "admin": {
          "description": "The admin",
          "type": "boolean"
        },
        "audited_organizations_url": {
          "description": "The audited Organizations Url",
          "type": "string"
        },
        "audited_spaces_url": {
          "description": "The audited Spaces Url",
          "type": "string"
        },
        "billing_managed_organizations_url": {
          "description": "The billing Managed Organizations Url",
          "type": "string"
        },
        "default_space_guid": {
          "description": "The default Space Guid",
          "type": "string"
        },
        "default_space_url": {
          "description": "The default Space Url",
          "type": "string"
        },
        "managed_organizations_url": {
          "description": "The managed Organizations Url",
          "type": "string"
        },
        "managed_spaces_url": {
          "description": "The managed Spaces Url",
          "type": "string"
        },
        "organizations_url": {
          "description": "The organizations Url",
          "type": "string"
        },
        "spaces_url": {
          "description": "The spaces Url",
          "type": "string"
        }
      }
    },
    "updateUserResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/updateUserResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    },
    "uploadsBitsForAppResponse": {
      "properties": {
        "guid": {
          "description": "The guid",
          "type": "string"
        },
        "status": {
          "description": "The status",
          "type": "string"
        }
      }
    },
    "uploadsBitsForAppResponseResource": {
      "properties": {
        "entity": {
          "$ref": "#/definitions/uploadsBitsForAppResponse"
        },
        "metadata": {
          "$ref": "#/definitions/entityMetadata"
        }
      }
    }
  },
  "securityDefinitions": {
    "basicAuth": {
      "description": "HTTP Basic Authentication. Works over ` + "`" + `HTTP` + "`" + ` and ` + "`" + `HTTPS` + "`" + `",
      "type": "basic"
    }
  }
}`))
}
