// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CreateServiceInstanceRequest create service instance request
//
// swagger:model createServiceInstanceRequest
type CreateServiceInstanceRequest struct {

	// Configuration information for the broker gateway in v1 services
	GatewayData GenericObject `json:"gateway_data,omitempty"`

	// A name for the service instance
	Name string `json:"name,omitempty"`

	// The guid of the service plan to associate with the instance
	ServicePlanGUID string `json:"service_plan_guid,omitempty"`

	// The guid of the space in which the instance will be created
	SpaceGUID string `json:"space_guid,omitempty"`
}

// Validate validates this create service instance request
func (m *CreateServiceInstanceRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateGatewayData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateServiceInstanceRequest) validateGatewayData(formats strfmt.Registry) error {

	if swag.IsZero(m.GatewayData) { // not required
		return nil
	}

	if err := m.GatewayData.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("gateway_data")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CreateServiceInstanceRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateServiceInstanceRequest) UnmarshalBinary(b []byte) error {
	var res CreateServiceInstanceRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
