// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CreateOrganizationRequest create organization request
//
// swagger:model createOrganizationRequest
type CreateOrganizationRequest struct {

	// If billing is enabled for this organization
	BillingEnabled GenericObject `json:"billing_enabled,omitempty"`

	// The name of the organization
	Name string `json:"name,omitempty"`

	// The guid of quota to associate with this organization
	QuotaDefinitionGUID string `json:"quota_definition_guid,omitempty"`

	// Status of the organization
	Status GenericObject `json:"status,omitempty"`
}

// Validate validates this create organization request
func (m *CreateOrganizationRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBillingEnabled(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateOrganizationRequest) validateBillingEnabled(formats strfmt.Registry) error {

	if swag.IsZero(m.BillingEnabled) { // not required
		return nil
	}

	if err := m.BillingEnabled.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("billing_enabled")
		}
		return err
	}

	return nil
}

func (m *CreateOrganizationRequest) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.Status) { // not required
		return nil
	}

	if err := m.Status.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("status")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CreateOrganizationRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateOrganizationRequest) UnmarshalBinary(b []byte) error {
	var res CreateOrganizationRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
