// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ListAllServiceBindingsForUserProvidedServiceInstanceResponse list all service bindings for user provided service instance response
//
// swagger:model listAllServiceBindingsForUserProvidedServiceInstanceResponse
type ListAllServiceBindingsForUserProvidedServiceInstanceResponse struct {

	// The app Guid
	AppGUID string `json:"app_guid,omitempty"`

	// The app Url
	AppURL string `json:"app_url,omitempty"`

	// The binding Options
	BindingOptions GenericObject `json:"binding_options,omitempty"`

	// The credentials
	Credentials GenericObject `json:"credentials,omitempty"`

	// The gateway Data
	GatewayData GenericObject `json:"gateway_data,omitempty"`

	// The gateway Name
	GatewayName string `json:"gateway_name,omitempty"`

	// The service Instance Guid
	ServiceInstanceGUID string `json:"service_instance_guid,omitempty"`

	// The service Instance Url
	ServiceInstanceURL string `json:"service_instance_url,omitempty"`

	// The syslog Drain Url
	SyslogDrainURL GenericObject `json:"syslog_drain_url,omitempty"`
}

// Validate validates this list all service bindings for user provided service instance response
func (m *ListAllServiceBindingsForUserProvidedServiceInstanceResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBindingOptions(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCredentials(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateGatewayData(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSyslogDrainURL(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ListAllServiceBindingsForUserProvidedServiceInstanceResponse) validateBindingOptions(formats strfmt.Registry) error {

	if swag.IsZero(m.BindingOptions) { // not required
		return nil
	}

	if err := m.BindingOptions.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("binding_options")
		}
		return err
	}

	return nil
}

func (m *ListAllServiceBindingsForUserProvidedServiceInstanceResponse) validateCredentials(formats strfmt.Registry) error {

	if swag.IsZero(m.Credentials) { // not required
		return nil
	}

	if err := m.Credentials.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("credentials")
		}
		return err
	}

	return nil
}

func (m *ListAllServiceBindingsForUserProvidedServiceInstanceResponse) validateGatewayData(formats strfmt.Registry) error {

	if swag.IsZero(m.GatewayData) { // not required
		return nil
	}

	if err := m.GatewayData.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("gateway_data")
		}
		return err
	}

	return nil
}

func (m *ListAllServiceBindingsForUserProvidedServiceInstanceResponse) validateSyslogDrainURL(formats strfmt.Registry) error {

	if swag.IsZero(m.SyslogDrainURL) { // not required
		return nil
	}

	if err := m.SyslogDrainURL.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("syslog_drain_url")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ListAllServiceBindingsForUserProvidedServiceInstanceResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ListAllServiceBindingsForUserProvidedServiceInstanceResponse) UnmarshalBinary(b []byte) error {
	var res ListAllServiceBindingsForUserProvidedServiceInstanceResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
