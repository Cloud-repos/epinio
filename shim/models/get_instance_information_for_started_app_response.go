// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetInstanceInformationForStartedAppResponse get instance information for started app response
//
// swagger:model getInstanceInformationForStartedAppResponse
type GetInstanceInformationForStartedAppResponse struct {

	// The console Ip
	ConsoleIP GenericObject `json:"console_ip,omitempty"`

	// The console Port
	ConsolePort GenericObject `json:"console_port,omitempty"`

	// The debug Ip
	DebugIP GenericObject `json:"debug_ip,omitempty"`

	// The debug Port
	DebugPort GenericObject `json:"debug_port,omitempty"`

	// The since
	Since float64 `json:"since,omitempty"`

	// The state
	State string `json:"state,omitempty"`
}

// Validate validates this get instance information for started app response
func (m *GetInstanceInformationForStartedAppResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateConsoleIP(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateConsolePort(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDebugIP(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDebugPort(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetInstanceInformationForStartedAppResponse) validateConsoleIP(formats strfmt.Registry) error {

	if swag.IsZero(m.ConsoleIP) { // not required
		return nil
	}

	if err := m.ConsoleIP.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("console_ip")
		}
		return err
	}

	return nil
}

func (m *GetInstanceInformationForStartedAppResponse) validateConsolePort(formats strfmt.Registry) error {

	if swag.IsZero(m.ConsolePort) { // not required
		return nil
	}

	if err := m.ConsolePort.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("console_port")
		}
		return err
	}

	return nil
}

func (m *GetInstanceInformationForStartedAppResponse) validateDebugIP(formats strfmt.Registry) error {

	if swag.IsZero(m.DebugIP) { // not required
		return nil
	}

	if err := m.DebugIP.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("debug_ip")
		}
		return err
	}

	return nil
}

func (m *GetInstanceInformationForStartedAppResponse) validateDebugPort(formats strfmt.Registry) error {

	if swag.IsZero(m.DebugPort) { // not required
		return nil
	}

	if err := m.DebugPort.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("debug_port")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetInstanceInformationForStartedAppResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetInstanceInformationForStartedAppResponse) UnmarshalBinary(b []byte) error {
	var res GetInstanceInformationForStartedAppResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
