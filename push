#!/bin/bash

CYAN='\033[0;36m'
NC='\033[0m'

function say() {
  >&2 echo -e "${CYAN}$1${NC}" 
}

function create_repo() {
  target="$1"
  user="$2"
  pass="$3"
  app_name="$4"

  say "Creating application ..."

  curl -sSL -X POST "http://$user:$pass@gitea.$target/api/v1/user/repos" \
    -H  "accept: application/json" \
    -H "Content-Type: application/json" \
    -d "
    {
      \"auto_init\": true,
      \"default_branch\": \"main\",
      \"description\": \"automatically deployed app\",
      \"name\": \"$app_name\",
      \"private\": true,
      \"trust_model\": \"default\"
    }" > /dev/null
}

function create_repo_webhook() {
  target="$1"
  user="$2"
  pass="$3"
  app_name="$4"

  say "Creating webhook in the repo ..."

  curl -sSL -X POST "http://$user:$pass@gitea.$target/api/v1/repos/$user/$app_name/hooks" -H  "accept: application/json" -H  "Content-Type: application/json" \
  -d "{  
    \"active\": true,
    \"branch_filter\": \"*\",  
    \"config\": {
          \"secret\": \"74tZTBHkhjMT5Klj6Ik6PqmM\",
          \"http_method\": \"POST\",
          \"url\": \"http://el-staging-listener.eirini-workloads:8080\",
          \"content_type\": \"json\"
      },
      \"type\": \"gitea\"
  }" > /dev/null
}

function prepare_code() {
  target="$1"
  user="$2"
  pass="$3"
  app_name="$4"
  app_dir="$5"

  say "Preparing code ..."

  image_user=$(registry_user)
  image_password=$(registry_password)

  temp_dir=`mktemp -d`
  cp -a "$app_dir/." "$temp_dir"

  mkdir "$temp_dir/.kube"

  cat <<EOF >> "$temp_dir/.kube/app.yml"
---
apiVersion: kpack.io/v1alpha1
kind: Image
metadata:
  name: $app_name
  namespace: eirini-workloads
spec:
  tag: $image_user/carrier-$app_name
  serviceAccount: app-serviceaccount
  builder:
    name: carrier-builder
    kind: ClusterBuilder
  source:
    git:
      url: http://gitea.$target/$user/$app_name
      revision: main
---
# DEPLOYMENT
apiVersion: eirini.cloudfoundry.org/v1
kind: LRP
metadata:
  name: $app_name
  namespace: eirini-workloads
spec:
  GUID: "$app_name"
  version: "version-1"
  appName: "$app_name"
  instances: 1
  lastUpdated: "never"
  diskMB: 100
  runsAsRoot: true
  env:
    PORT: "8080"
  ports:
  - 8080
  image: "$image_user/carrier-$app_name"
  appRoutes:
  - hostname: $app_name.$target
    port: 8080
EOF

  touch "$temp_dir/$(date -u +'%Y%m%d%H%M%S')"
  echo $temp_dir
}

function git_push() {
  target="$1"
  user="$2"
  pass="$3"
  app_name="$4"
  tmp_dir="$5"

  say "Pushing application code ..."

  cd "$tmp_dir" 
  git init
  git remote add carrier "http://$user:$pass@gitea.$target/$user/$app_name"
  git fetch --all
  git reset --soft carrier/main
  git add --all
  git commit -m "pushed at `date`"
  git push carrier master:main
}

function logs() {
  app_name="$1"

  say "Tailing logs ..."
  stern --namespace "eirini-workloads" ".*$app_name.*" &
} 

function wait_for_app() {
  app_name="$1"
  target="$2"

  say "Waiting for app to come online ..."

  retry 600 "kubectl wait --for=condition=Ready --timeout=5s -n eirini-workloads --selector=cloudfoundry.org/guid=$app_name pod > /dev/null 2>&1"

  say "http://${app_name}.${target} is online"

  kill $!
}

function get_target() {
  gitea_url=$(kubectl get configmap -n gitea config -o yaml | grep DOMAIN | head -n1 | awk '{print $3}')
  echo ${gitea_url:6}
}

function registry_user() {
  kubectl get secret -n default dockerhub-creds -o jsonpath="{.data.\.dockerconfigjson}" | base64 -d | jq -r 'first(.auths[] | .username)'
}

function registry_password() {
  kubectl get secret -n default dockerhub-creds -o jsonpath="{.data.\.dockerconfigjson}" | base64 -d | jq -r 'first(.auths[] | .password)'
}

app_name="$1"
app_path="$2"
target=$(get_target)

# This is a one-user setup, with these credentials hardcoded
user="dev"
pass="changeme"

create_repo "$target" "$user" "$pass" "$app_name"
create_repo_webhook "$target" "$user" "$pass" "$app_name"
tmp_dir=$(prepare_code "$target" "$user" "$pass" "$app_name" "$app_path")
git_push "$target" "$user" "$pass" "$app_name" "$tmp_dir"
logs "$app_name"

wait_for_app "$app_name" "$target"
