---
apiVersion: quarks.cloudfoundry.org/v1alpha1
kind: QuarksSecret
metadata:
  name: eirini-ca
  namespace: eirini-core
spec:
  request:
    certificate:
      alternativeNames:
        - "eirini-api.eirini-core.svc.cluster.local"
      commonName: localhost
      isCA: true
      signerType: local
  secretName: eirini-ca
  type: certificate

---
apiVersion: quarks.cloudfoundry.org/v1alpha1
kind: QuarksSecret
metadata:
  name: templated-eirini-certs
  namespace: eirini-core
spec:
  # Define the QuarksSecret type
  type: templatedconfig
  # The new secret name which will have the templated config
  secretName: eirini-certs
  request:
    templatedConfig:
      # Define the templating type, in this case "helm" (it's also the only supported type as for now)
      # Here, supplied values are available under .Values as usual
      type: helm
      templates:
        # The result will be stored in a secret: secret.Data["foo"] = <value from referenced secret>
        tls.crt: "{{.Values.Certificate}}"
        ca.crt:  "{{.Values.Certificate}}"
        tls.key: "{{.Values.Key}}"
      # The values for our template in a key, value format.
      values:
        # The name of the variable
        Certificate:
          # A reference to the secret
          name: "eirini-ca"
          key: "certificate"
        Key:
          name: "eirini-ca"
          key: "private_key"

---
apiVersion: quarks.cloudfoundry.org/v1alpha1
kind: QuarksSecret
metadata:
  name: templated-eirini-loggregator-certs
  namespace: eirini-core
spec:
  # Define the QuarksSecret type
  type: templatedconfig
  # The new secret name which will have the templated config
  secretName: loggregator-certs
  request:
    templatedConfig:
      # Define the templating type, in this case "helm" (it's also the only supported type as for now)
      # Here, supplied values are available under .Values as usual
      type: helm
      templates:
        # The result will be stored in a secret: secret.Data["foo"] = <value from referenced secret>
        tls.crt: "{{.Values.Certificate}}"
        ca.crt:  "{{.Values.Certificate}}"
        tls.key: "{{.Values.Key}}"
      # The values for our template in a key, value format.
      values:
        # The name of the variable
        Certificate:
          # A reference to the secret
          name: "eirini-ca"
          key: "certificate"
        Key:
          name: "eirini-ca"
          key: "private_key"
