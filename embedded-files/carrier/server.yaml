---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: carrier-server
  namespace: carrier

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: carrier-server
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - list
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - list
  - get
  - delete

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: carrier-server-cluster-role
  namespace: carrier
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: carrier-server
subjects:
- kind: ServiceAccount
  name: carrier-server
  namespace: carrier

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: carrier
    app.kubernetes.io/instance: default
    app.kubernetes.io/name: carrier-server
    app.kubernetes.io/part-of: carrier
    app.kubernetes.io/version: ##current_carrier_version##
  name: carrier-server
  namespace: carrier
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: carrier-server
      app.kubernetes.io/instance: default
      app.kubernetes.io/name: carrier-server
      app.kubernetes.io/part-of: carrier
  template:
    metadata:
      labels:
        app.kubernetes.io/component: carrier-server
        app.kubernetes.io/instance: default
        app.kubernetes.io/name: carrier-server
        app.kubernetes.io/part-of: carrier
        app.kubernetes.io/version: ##current_carrier_version##
      name: carrier-server
    spec:
      serviceAccountName: carrier-server
      containers:
        - command: ["/carrier/carrier", "server"]
          args: ["--port", "80"]
          image: carrier/base:##current_carrier_version##
          livenessProbe:
            httpGet:
              path: /
              port: 80
          name: carrier-server
          ports:
            - containerPort: 80
          readinessProbe:
            httpGet:
              path: /
              port: 80
      # securityContext:
      #   runAsNonRoot: true
      #   runAsUser: 65532

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: carrier
    app.kubernetes.io/instance: default
    app.kubernetes.io/name: carrier-server
    app.kubernetes.io/part-of: carrier
    app.kubernetes.io/version: ##current_carrier_version##
  name: carrier-server
  namespace: carrier
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app.kubernetes.io/name: carrier-server
