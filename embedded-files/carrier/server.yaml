---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: carrier
    app.kubernetes.io/instance: default
    app.kubernetes.io/name: carrier-server
    app.kubernetes.io/part-of: carrier
    app.kubernetes.io/version: {{version}}
  name: carrier-server
  namespace: carrier
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: carrier-server
      app.kubernetes.io/instance: default
      app.kubernetes.io/name: carrier-server
      app.kubernetes.io/part-of: carrier
  template:
    metadata:
      labels:
        app.kubernetes.io/component: carrier-server
        app.kubernetes.io/instance: default
        app.kubernetes.io/name: carrier-server
        app.kubernetes.io/part-of: carrier
        app.kubernetes.io/version: {{version}}
      name: carrier-server
    spec:
      containers:
        - command: ["/carrier/carrier", "server"]
          args: ["--port", "8080"]
          image: carrier/base:{{version}}
          livenessProbe:
            httpGet:
              path: /
              port: 8080
          name: carrier-server
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /
              port: 8080
      # securityContext:
      #   runAsNonRoot: true
      #   runAsUser: 65532
      # TODO Create an appropriate server account: serviceAccountName: cluster-admin
